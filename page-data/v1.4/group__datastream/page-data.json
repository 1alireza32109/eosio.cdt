{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/v1.4/group__datastream","result":{"data":{"site":{"pathPrefix":"/eosio.cdt"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/v1.7/action_8hpp"}},{"fields":{"slug":"/v1.7/asset_8hpp"}},{"fields":{"slug":"/v1.7/binary__extension_8hpp"}},{"fields":{"slug":"/v1.7/annotated"}},{"fields":{"slug":"/v1.7/check_8hpp"}},{"fields":{"slug":"/v1.7/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.7/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.7/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.7/classeosio_1_1contract"}},{"fields":{"slug":"/v1.7/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.7/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.7/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.7/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.7/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.7/classeosio_1_1string"}},{"fields":{"slug":"/v1.7/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.7/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.7/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.7/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.7/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.7/classeosio_1_1rope"}},{"fields":{"slug":"/v1.7/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.7/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.7/classes"}},{"fields":{"slug":"/v1.7/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.7/contract_8hpp"}},{"fields":{"slug":"/v1.7/crypto_8hpp"}},{"fields":{"slug":"/v1.7/dir_6973a5be5f0104fdfb8b76a272d58cb0"}},{"fields":{"slug":"/v1.7/dir_7e917b7566708c24627b3b828f138985"}},{"fields":{"slug":"/v1.7/datastream_8hpp"}},{"fields":{"slug":"/v1.7/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.7/dispatcher_8hpp"}},{"fields":{"slug":"/v1.7/dir_850c7dbae88cf75e5ded2d8d64345058"}},{"fields":{"slug":"/v1.7/dir_e6eaa0c1a89a74634a56cba5556371ea"}},{"fields":{"slug":"/v1.7/enumerations"}},{"fields":{"slug":"/v1.7/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.7/eosio_8hpp"}},{"fields":{"slug":"/v1.7/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.7/group__asset"}},{"fields":{"slug":"/v1.7/group__binary__extension"}},{"fields":{"slug":"/v1.7/group__action"}},{"fields":{"slug":"/v1.7/files"}},{"fields":{"slug":"/v1.7/group__contract"}},{"fields":{"slug":"/v1.7/group__console"}},{"fields":{"slug":"/v1.7/group__contracts"}},{"fields":{"slug":"/v1.7/group__core"}},{"fields":{"slug":"/v1.7/group__datastream"}},{"fields":{"slug":"/v1.7/group__dispatcher"}},{"fields":{"slug":"/v1.7/group__fixed__bytes"}},{"fields":{"slug":"/v1.7/group__ignore"}},{"fields":{"slug":"/v1.7/group__name"}},{"fields":{"slug":"/v1.7/group__permission"}},{"fields":{"slug":"/v1.7/functions"}},{"fields":{"slug":"/v1.7/group__privileged"}},{"fields":{"slug":"/v1.7/group__producer__key"}},{"fields":{"slug":"/v1.7/group__symbol"}},{"fields":{"slug":"/v1.7/group__singleton"}},{"fields":{"slug":"/v1.7/group__producer__schedule"}},{"fields":{"slug":"/v1.7/group__producer__authority"}},{"fields":{"slug":"/v1.7/group__serialize"}},{"fields":{"slug":"/v1.7/group__system"}},{"fields":{"slug":"/v1.7/group__time"}},{"fields":{"slug":"/v1.7/group__transaction"}},{"fields":{"slug":"/v1.7/group__multiindex"}},{"fields":{"slug":"/v1.7/ignore_8hpp"}},{"fields":{"slug":"/v1.7/group__types"}},{"fields":{"slug":"/v1.7/group__varint"}},{"fields":{"slug":"/v1.7/index"}},{"fields":{"slug":"/v1.7/installation"}},{"fields":{"slug":"/v1.7/name_8hpp"}},{"fields":{"slug":"/v1.7/multi__index_8hpp"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.7/modules"}},{"fields":{"slug":"/v1.7/pages"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1impl"}},{"fields":{"slug":"/v1.7/powers_8hpp"}},{"fields":{"slug":"/v1.7/permission_8hpp"}},{"fields":{"slug":"/v1.7/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1internal__use__do__not__use"}},{"fields":{"slug":"/v1.7/privileged_8hpp"}},{"fields":{"slug":"/v1.7/rope_8hpp"}},{"fields":{"slug":"/v1.7/singleton_8hpp"}},{"fields":{"slug":"/v1.7/print_8hpp"}},{"fields":{"slug":"/v1.7/serialize_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.7/string_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1action"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.7/structeosio_1_1block__signing__authority__v0"}},{"fields":{"slug":"/v1.7/structeosio_1_1asset"}},{"fields":{"slug":"/v1.7/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.7/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1largest__power__helper_3_01_t_00_01_base_00_01_exponent_00_01_value_00_01true_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1largest__power__helper"}},{"fields":{"slug":"/v1.7/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.7/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1largest__power"}},{"fields":{"slug":"/v1.7/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.7/structeosio_1_1impl_1_1str__t"}},{"fields":{"slug":"/v1.7/structeosio_1_1impl_1_1concat__t"}},{"fields":{"slug":"/v1.7/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.7/structeosio_1_1key__weight"}},{"fields":{"slug":"/v1.7/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.7/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.7/structeosio_1_1name"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.7/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.7/structeosio_1_1overloaded"}},{"fields":{"slug":"/v1.7/structeosio_1_1producer__authority"}},{"fields":{"slug":"/v1.7/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.7/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.7/structeosio_1_1signed__int"}},{"fields":{"slug":"/v1.7/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.7/structeosio_1_1unsigned__int"}},{"fields":{"slug":"/v1.7/symbol_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.7/transaction_8hpp"}},{"fields":{"slug":"/v1.7/system_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.7/time_8hpp"}},{"fields":{"slug":"/v1.7/varint_8hpp"}},{"fields":{"slug":"/v1.7/troubleshooting"}},{"fields":{"slug":"/v1.4/action_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.4/binary__extension_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.4/annotated"}},{"fields":{"slug":"/v1.4/classeosio_1_1contract"}},{"fields":{"slug":"/v1.4/classeosio_1_1fixed__key"}},{"fields":{"slug":"/v1.4/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.4/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.4/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.4/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.4/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.4/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.7/variables"}},{"fields":{"slug":"/v1.4/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.4/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.4/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.4/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.4/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.4/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.4/crypto_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.4/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.4/asset_8hpp"}},{"fields":{"slug":"/v1.4/classes"}},{"fields":{"slug":"/v1.4/contract_8hpp"}},{"fields":{"slug":"/v1.4/datastream_8hpp"}},{"fields":{"slug":"/v1.4/files"}},{"fields":{"slug":"/v1.4/enumerations"}},{"fields":{"slug":"/v1.4/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.4/eosio_8hpp"}},{"fields":{"slug":"/v1.4/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.4/fixed__key_8hpp"}},{"fields":{"slug":"/v1.4/fixedpoint_8hpp"}},{"fields":{"slug":"/v1.4/group__actioncppapi"}},{"fields":{"slug":"/v1.4/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.4/group__assetapi"}},{"fields":{"slug":"/v1.4/dispatcher_8hpp"}},{"fields":{"slug":"/v1.4/group__assetcppapi"}},{"fields":{"slug":"/v1.4/functions"}},{"fields":{"slug":"/v1.4/group__contracttype"}},{"fields":{"slug":"/v1.4/group__binary__extension"}},{"fields":{"slug":"/v1.4/group__consolecppapi"}},{"fields":{"slug":"/v1.4/group__cryptoapi"}},{"fields":{"slug":"/v1.4/group__fixed__bytes"}},{"fields":{"slug":"/v1.4/group__cryptocppapi"}},{"fields":{"slug":"/v1.4/group__dispatchercpp"}},{"fields":{"slug":"/v1.4/group__dispatcher"}},{"fields":{"slug":"/v1.4/group__fixedpoint"}},{"fields":{"slug":"/v1.4/group__fixed__key"}},{"fields":{"slug":"/v1.4/group__privilegedcppapi"}},{"fields":{"slug":"/v1.4/group__producertype"}},{"fields":{"slug":"/v1.4/group__multiindex"}},{"fields":{"slug":"/v1.4/group__datastream"}},{"fields":{"slug":"/v1.4/group__serialize"}},{"fields":{"slug":"/v1.4/group__publickeytype"}},{"fields":{"slug":"/v1.4/group__signaturetype"}},{"fields":{"slug":"/v1.4/group__symbolcppapi"}},{"fields":{"slug":"/v1.4/group__symbolapi"}},{"fields":{"slug":"/v1.4/group__transactioncppapi"}},{"fields":{"slug":"/v1.4/group__serializecpp"}},{"fields":{"slug":"/v1.4/ignore_8hpp"}},{"fields":{"slug":"/v1.4/group__singleton"}},{"fields":{"slug":"/v1.4/name_8hpp"}},{"fields":{"slug":"/v1.4/group__varint"}},{"fields":{"slug":"/v1.4/modules"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.4/multi__index_8hpp"}},{"fields":{"slug":"/v1.4/print_8hpp"}},{"fields":{"slug":"/v1.4/pages"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.4/permission_8hpp"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.4/index"}},{"fields":{"slug":"/v1.4/privileged_8hpp"}},{"fields":{"slug":"/v1.4/public__key_8hpp"}},{"fields":{"slug":"/v1.4/reflect_8hpp"}},{"fields":{"slug":"/v1.4/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.4/serialize_8hpp"}},{"fields":{"slug":"/v1.4/struct_stores"}},{"fields":{"slug":"/v1.4/stdlib_8hpp"}},{"fields":{"slug":"/v1.4/struct_extended"}},{"fields":{"slug":"/v1.4/singleton_8hpp"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1action"}},{"fields":{"slug":"/v1.4/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/v1.4/structeosio_1_1asset"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/v1.4/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.4/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point128"}},{"fields":{"slug":"/v1.4/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point32"}},{"fields":{"slug":"/v1.4/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.4/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point64"}},{"fields":{"slug":"/v1.4/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.4/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.4/structeosio_1_1name"}},{"fields":{"slug":"/v1.4/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.4/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.4/structeosio_1_1public__key"}},{"fields":{"slug":"/v1.4/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.4/structeosio_1_1reflector"}},{"fields":{"slug":"/v1.4/structsigned__int"}},{"fields":{"slug":"/v1.4/structeosio_1_1signature"}},{"fields":{"slug":"/v1.4/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.4/time_8hpp"}},{"fields":{"slug":"/v1.4/symbol_8hpp"}},{"fields":{"slug":"/v1.4/transaction_8hpp"}},{"fields":{"slug":"/v1.4/varint_8hpp"}},{"fields":{"slug":"/v1.4/variables"}},{"fields":{"slug":"/v1.4/structunsigned__int"}},{"fields":{"slug":"/v1.5/action_8hpp"}},{"fields":{"slug":"/v1.5/binary__extension_8hpp"}},{"fields":{"slug":"/v1.5/asset_8hpp"}},{"fields":{"slug":"/v1.5/class_stores"}},{"fields":{"slug":"/v1.5/classeosio_1_1contract"}},{"fields":{"slug":"/v1.5/annotated"}},{"fields":{"slug":"/v1.5/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.5/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.5/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.5/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.5/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.5/classeosio_1_1fixed__key"}},{"fields":{"slug":"/v1.5/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.5/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.5/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.5/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.5/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.5/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.5/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.5/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.5/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.5/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.5/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.5/datastream_8hpp"}},{"fields":{"slug":"/v1.5/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.5/classes"}},{"fields":{"slug":"/v1.5/dispatcher_8hpp"}},{"fields":{"slug":"/v1.5/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.5/eosio_8hpp"}},{"fields":{"slug":"/v1.5/files"}},{"fields":{"slug":"/v1.5/crypto_8hpp"}},{"fields":{"slug":"/v1.5/enumerations"}},{"fields":{"slug":"/v1.5/contract_8hpp"}},{"fields":{"slug":"/v1.5/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.5/fixed__key_8hpp"}},{"fields":{"slug":"/v1.5/fixedpoint_8hpp"}},{"fields":{"slug":"/v1.5/group__asset"}},{"fields":{"slug":"/v1.5/group__action"}},{"fields":{"slug":"/v1.5/group__c__api"}},{"fields":{"slug":"/v1.5/group__console"}},{"fields":{"slug":"/v1.5/group__binary__extension"}},{"fields":{"slug":"/v1.5/group__contract"}},{"fields":{"slug":"/v1.5/group__cpp__api"}},{"fields":{"slug":"/v1.5/group__crypto"}},{"fields":{"slug":"/v1.5/functions"}},{"fields":{"slug":"/v1.5/group__fixed__bytes"}},{"fields":{"slug":"/v1.5/group__datastream"}},{"fields":{"slug":"/v1.5/group__multiindex"}},{"fields":{"slug":"/v1.5/group__dispatcher"}},{"fields":{"slug":"/v1.5/group__fixed__key"}},{"fields":{"slug":"/v1.5/group__name"}},{"fields":{"slug":"/v1.5/group__privileged"}},{"fields":{"slug":"/v1.5/group__fixed__point"}},{"fields":{"slug":"/v1.5/group__publickeytype"}},{"fields":{"slug":"/v1.5/group__producer__schedule"}},{"fields":{"slug":"/v1.5/group__signature"}},{"fields":{"slug":"/v1.5/group__serialize"}},{"fields":{"slug":"/v1.5/group__singleton"}},{"fields":{"slug":"/v1.5/group__transaction"}},{"fields":{"slug":"/v1.5/group__system"}},{"fields":{"slug":"/v1.5/group__time"}},{"fields":{"slug":"/v1.5/group__transactioncppapi"}},{"fields":{"slug":"/v1.5/group__types"}},{"fields":{"slug":"/v1.5/group__symbol"}},{"fields":{"slug":"/v1.5/ignore_8hpp"}},{"fields":{"slug":"/v1.5/group__varint"}},{"fields":{"slug":"/v1.5/index"}},{"fields":{"slug":"/v1.5/name_8hpp"}},{"fields":{"slug":"/v1.5/multi__index_8hpp"}},{"fields":{"slug":"/v1.5/modules"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.5/pages"}},{"fields":{"slug":"/v1.5/permission_8hpp"}},{"fields":{"slug":"/v1.5/print_8hpp"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.5/privileged_8hpp"}},{"fields":{"slug":"/v1.5/serialize_8hpp"}},{"fields":{"slug":"/v1.5/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.5/public__key_8hpp"}},{"fields":{"slug":"/v1.5/singleton_8hpp"}},{"fields":{"slug":"/v1.5/stdlib_8hpp"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.5/struct_extended"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.5/structeosio_1_1action"}},{"fields":{"slug":"/v1.5/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/v1.5/structeosio_1_1asset"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/v1.5/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point128"}},{"fields":{"slug":"/v1.5/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point64"}},{"fields":{"slug":"/v1.5/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.5/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point32"}},{"fields":{"slug":"/v1.5/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.5/structeosio_1_1name"}},{"fields":{"slug":"/v1.5/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.5/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.5/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.5/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.5/structeosio_1_1signature"}},{"fields":{"slug":"/v1.5/structeosio_1_1public__key"}},{"fields":{"slug":"/v1.5/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.5/structsigned__int"}},{"fields":{"slug":"/v1.5/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.5/symbol_8hpp"}},{"fields":{"slug":"/v1.5/system_8hpp"}},{"fields":{"slug":"/v1.5/time_8hpp"}},{"fields":{"slug":"/v1.5/varint_8hpp"}},{"fields":{"slug":"/v1.5/structunsigned__int"}},{"fields":{"slug":"/v1.5/variables"}},{"fields":{"slug":"/v1.5/transaction_8hpp"}},{"fields":{"slug":"/latest/check_8hpp"}},{"fields":{"slug":"/latest/class_stores"}},{"fields":{"slug":"/latest/annotated"}},{"fields":{"slug":"/latest/classeosio_1_1binary__extension"}},{"fields":{"slug":"/latest/classeosio_1_1datastream"}},{"fields":{"slug":"/latest/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/latest/classeosio_1_1contract"}},{"fields":{"slug":"/latest/classeosio_1_1iostream"}},{"fields":{"slug":"/latest/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/latest/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/latest/classeosio_1_1microseconds"}},{"fields":{"slug":"/latest/classeosio_1_1rope"}},{"fields":{"slug":"/latest/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/latest/classeosio_1_1singleton"}},{"fields":{"slug":"/latest/classeosio_1_1symbol"}},{"fields":{"slug":"/latest/classes"}},{"fields":{"slug":"/latest/classeosio_1_1time__point"}},{"fields":{"slug":"/latest/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/latest/classeosio_1_1symbol__code"}},{"fields":{"slug":"/latest/classeosio_1_1transaction__header"}},{"fields":{"slug":"/latest/contracts_2eosio_2action_8hpp"}},{"fields":{"slug":"/latest/classeosio_1_1transaction"}},{"fields":{"slug":"/latest/core_2eosio_2binary__extension_8hpp"}},{"fields":{"slug":"/latest/core_2eosio_2asset_8hpp"}},{"fields":{"slug":"/latest/contracts_2eosio_2contract_8hpp"}},{"fields":{"slug":"/latest/dir_6973a5be5f0104fdfb8b76a272d58cb0"}},{"fields":{"slug":"/latest/datastream_8hpp"}},{"fields":{"slug":"/latest/dir_7e917b7566708c24627b3b828f138985"}},{"fields":{"slug":"/latest/crypto_8hpp"}},{"fields":{"slug":"/latest/dir_850c7dbae88cf75e5ded2d8d64345058"}},{"fields":{"slug":"/latest/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/latest/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/latest/dir_e6eaa0c1a89a74634a56cba5556371ea"}},{"fields":{"slug":"/latest/enumerations"}},{"fields":{"slug":"/latest/eosio_8hpp"}},{"fields":{"slug":"/latest/dispatcher_8hpp"}},{"fields":{"slug":"/latest/files"}},{"fields":{"slug":"/latest/group__contract"}},{"fields":{"slug":"/latest/fixed__bytes_8hpp"}},{"fields":{"slug":"/latest/group__binary__extension"}},{"fields":{"slug":"/latest/group__core"}},{"fields":{"slug":"/latest/group__contracts"}},{"fields":{"slug":"/latest/group__dispatcher"}},{"fields":{"slug":"/latest/group__console"}},{"fields":{"slug":"/latest/group__datastream"}},{"fields":{"slug":"/latest/group__crypto"}},{"fields":{"slug":"/latest/group__fixed__bytes"}},{"fields":{"slug":"/latest/group__action"}},{"fields":{"slug":"/latest/group__name"}},{"fields":{"slug":"/latest/group__ignore"}},{"fields":{"slug":"/latest/group__producer__schedule"}},{"fields":{"slug":"/latest/group__asset"}},{"fields":{"slug":"/latest/group__privileged"}},{"fields":{"slug":"/latest/group__producer__key"}},{"fields":{"slug":"/latest/group__multi__index"}},{"fields":{"slug":"/latest/group__public__key"}},{"fields":{"slug":"/latest/group__signature"}},{"fields":{"slug":"/latest/group__permission"}},{"fields":{"slug":"/latest/group__serialize"}},{"fields":{"slug":"/latest/group__symbol"}},{"fields":{"slug":"/latest/group__singleton"}},{"fields":{"slug":"/latest/group__types"}},{"fields":{"slug":"/latest/group__system"}},{"fields":{"slug":"/latest/group__transaction"}},{"fields":{"slug":"/latest/group__time"}},{"fields":{"slug":"/latest/group__varint"}},{"fields":{"slug":"/latest/functions"}},{"fields":{"slug":"/latest/ignore_8hpp"}},{"fields":{"slug":"/latest/index"}},{"fields":{"slug":"/latest/name_8hpp"}},{"fields":{"slug":"/latest/group__multiindex"}},{"fields":{"slug":"/latest/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/latest/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/latest/modules"}},{"fields":{"slug":"/latest/namespaceeosio_1_1detail"}},{"fields":{"slug":"/latest/pages"}},{"fields":{"slug":"/latest/namespaceeosio_1_1impl"}},{"fields":{"slug":"/latest/print_8hpp"}},{"fields":{"slug":"/latest/multi__index_8hpp"}},{"fields":{"slug":"/latest/namespaceeosio_1_1internal__use__do__not__use"}},{"fields":{"slug":"/latest/privileged_8hpp"}},{"fields":{"slug":"/latest/producer__schedule_8hpp"}},{"fields":{"slug":"/latest/rope_8hpp"}},{"fields":{"slug":"/latest/permission_8hpp"}},{"fields":{"slug":"/latest/public__key_8hpp"}},{"fields":{"slug":"/latest/stdlib_8hpp"}},{"fields":{"slug":"/latest/singleton_8hpp"}},{"fields":{"slug":"/latest/serialize_8hpp"}},{"fields":{"slug":"/latest/struct_extended"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1action"}},{"fields":{"slug":"/latest/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/latest/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/latest/structeosio_1_1asset"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/latest/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/latest/structeosio_1_1ignore"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/latest/structeosio_1_1impl_1_1concat__t"}},{"fields":{"slug":"/latest/structeosio_1_1indexed__by"}},{"fields":{"slug":"/latest/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/latest/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/latest/structeosio_1_1extended__asset"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/latest/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/latest/structeosio_1_1overloaded"}},{"fields":{"slug":"/latest/structeosio_1_1onerror"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/latest/structeosio_1_1permission__level"}},{"fields":{"slug":"/latest/structeosio_1_1producer__key"}},{"fields":{"slug":"/latest/structeosio_1_1impl_1_1str__t"}},{"fields":{"slug":"/latest/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/latest/structeosio_1_1public__key"}},{"fields":{"slug":"/latest/structeosio_1_1signature"}},{"fields":{"slug":"/latest/structeosio_1_1name"}},{"fields":{"slug":"/latest/structeosio_1_1signed__int"}},{"fields":{"slug":"/latest/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/latest/structeosio_1_1unsigned__int"}},{"fields":{"slug":"/latest/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/latest/structsigned__int"}},{"fields":{"slug":"/latest/structunsigned__int"}},{"fields":{"slug":"/latest/symbol_8hpp"}},{"fields":{"slug":"/latest/system_8hpp"}},{"fields":{"slug":"/latest/time_8hpp"}},{"fields":{"slug":"/latest/varint_8hpp"}},{"fields":{"slug":"/latest/transaction_8hpp"}},{"fields":{"slug":"/v1.7/command-reference/eosio-abigen"}},{"fields":{"slug":"/v1.7/tutorials/abi-variants"}},{"fields":{"slug":"/latest/variables"}},{"fields":{"slug":"/v1.7/command-reference/eosio-abidiff"}},{"fields":{"slug":"/v1.7/command-reference/eosio-init"}},{"fields":{"slug":"/v1.7/command-reference/eosio-cpp"}},{"fields":{"slug":"/v1.7/command-reference/eosio-ld"}},{"fields":{"slug":"/v1.7/how-to-guides/how_to_create_and_use_action_wrappers"}},{"fields":{"slug":"/v1.7/upgrading/1.5-to-1.6"}},{"fields":{"slug":"/v1.7/command-reference/eosio-cc"}},{"fields":{"slug":"/v1.7/best-practices/data-design-and-migration"}},{"fields":{"slug":"/v1.7/best-practices/debugging_a_smart_contract"}},{"fields":{"slug":"/v1.7/best-practices/deferred_transactions"}},{"fields":{"slug":"/v1.7/best-practices/error_handling"}},{"fields":{"slug":"/v1.7/tutorials/binary-extension"}},{"fields":{"slug":"/v1.7/best-practices/securing_your_contract"}},{"fields":{"slug":"/v1.7/upgrading/1.2-to-1.3"}},{"fields":{"slug":"/v1.7/best-practices/resource-planning"}},{"fields":{"slug":"/v1.7/best-practices/binary-extension"}},{"fields":{"slug":"/v1.7/best-practices/native-tester-compilation"}},{"fields":{"slug":"/v1.5/tools/eosio-abidiff"}},{"fields":{"slug":"/v1.5/tools/eosio-abigen"}},{"fields":{"slug":"/v1.5/tools/eosio-init"}},{"fields":{"slug":"/v1.5/tools/eosio-cpp"}},{"fields":{"slug":"/v1.5/tools/eosio-ld"}},{"fields":{"slug":"/latest/guides/first-smart-contract"}},{"fields":{"slug":"/latest/guides/cmake"}},{"fields":{"slug":"/latest/guides/generator-attributes"}},{"fields":{"slug":"/v1.5/guides/basic-usage"}},{"fields":{"slug":"/v1.5/guides/first-smart-contract"}},{"fields":{"slug":"/v1.5/guides/abi-generator-attributes"}},{"fields":{"slug":"/latest/guides/native-tester"}},{"fields":{"slug":"/v1.5/guides/cmake"}},{"fields":{"slug":"/v1.5/guides/native-tester"}},{"fields":{"slug":"/latest/tools/eosio-abidiff"}},{"fields":{"slug":"/v1.5/guides/upgrading-from-1.2-to-1.3"}},{"fields":{"slug":"/latest/tools/eosio-cpp"}},{"fields":{"slug":"/latest/tools/eosio-init"}},{"fields":{"slug":"/latest/tools/eosio-abigen"}},{"fields":{"slug":"/latest/tools/eosio-ld"}},{"fields":{"slug":"/v1.7/how-to-guides/authorization/how_to_restrict_access_to_an_action_by_user"}},{"fields":{"slug":"/latest/upgrading/1.2-to-1.3"}},{"fields":{"slug":"/latest/upgrading/1.5-to-1.6"}},{"fields":{"slug":"/v1.7/how-to-guides/compile/compiling-contracts-with-cmake"}},{"fields":{"slug":"/v1.7/how-to-guides/compile/compile-a-contract-via-cli"}},{"fields":{"slug":"/v1.7/how-to-guides/compile/how-to-configure-cmake"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-define-a-secondary-index"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-define-a-primary-index"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-define-a-singleton"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-instantiate-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-modify-data-in-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-iterate-and-retrieve-a-multi_index-table"}},{"fields":{"slug":"/v1.7/best-practices/abi/abi-code-generator-attributes-explained"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-iterate-and-retrieve-a-multi_index-table-based-on-secondary-index"}},{"fields":{"slug":"/v1.7/best-practices/abi/manually_write_an_ABI_file_explained"}},{"fields":{"slug":"/v1.5/namespaceeosio"}},{"fields":{"slug":"/v1.4/namespaceeosio"}},{"fields":{"slug":"/latest/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.7/namespaceeosio"}},{"fields":{"slug":"/latest/namespaceeosio"}}]},"markdownRemark":{"html":"<p>Defines data stream for reading and writing data in the form of bytes. </p>\n<h2 id=\"classes\">Classes</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1datastream\"><strong>eosio::datastream</strong></a><br>A data stream for reading and writing data in the form of bytes.</td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1datastream_3_01size__t_01_4\"><strong>eosio::datastream&#x3C; size_t ></strong></a><br>Specialization of datastream used to help determine the final size of a serialized value. Specialization of datastream used to help determine the final size of a serialized value.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"functions\">Functions</h2>\n<h2 id=\"functions-documentation\">Functions Documentation</h2>\n<h3 id=\"function-operator\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>binary_extension<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> be\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1binary__extension\">binary_extension</a></strong>. </p>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1binary__extension\">binary_extension</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>binary_extension<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> be\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1binary__extension\">binary_extension</a></strong>. </p>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1binary__extension\">binary_extension</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-2\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span> Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> var\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an std::variant. </p>\n<p>Serialize an std::variant into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-deserialize\">function deserialize</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span> I<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">deserialize</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span> Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> var<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int</span> i\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-3\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span> Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> var\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an std::variant. </p>\n<p>Deserialize an std::variant from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-4\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T2<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span> T1<span class=\"token punctuation\">,</span> T2 <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an std::pair. </p>\n<p>Serialize an std::pair</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>t</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-5\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T2<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span> T1<span class=\"token punctuation\">,</span> T2 <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an std::pair. </p>\n<p>Deserialize an std::pair</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>t</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-6\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>optional<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> opt\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an optional. </p>\n<p>Serialize an optional into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-7\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>optional<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> opt\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an optional. </p>\n<p>Deserialize an optional from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-8\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>symbol_code sym_code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1symbol__code\">symbol_code</a></strong>. </p>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1symbol__code\">symbol_code</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>sym</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-9\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>symbol_code <span class=\"token operator\">&amp;</span> sym_code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1symbol__code\">symbol_code</a></strong>. </p>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1symbol__code\">symbol_code</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>symbol</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-10\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>symbol sym\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a symbol. </p>\n<p>Serialize a symbol into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>sym</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-11\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>symbol <span class=\"token operator\">&amp;</span> sym\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a symbol. </p>\n<p>Deserialize a symbol from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>symbol</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-12\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token operator\">::</span>eosio<span class=\"token operator\">::</span>ignore_wrapper<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> val\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize ignored_wrapper<T>'s T value. </p>\n<p>Serialize an ignored_wrapper type into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>val</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-13\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token operator\">::</span>eosio<span class=\"token operator\">::</span>ignore<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> val\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an ignored type. </p>\n<p>Serialize an ignored type into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>ignore</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-14\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">::</span>eosio<span class=\"token operator\">::</span>ignore<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> \n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an ignored type. </p>\n<p>Deserialize an ignored type from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>ignored</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-15\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> capi_public_key <span class=\"token operator\">&amp;</span> pubkey\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">public_key</a></strong>. </p>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">public_key</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>pubkey</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-16\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    capi_public_key <span class=\"token operator\">&amp;</span> pubkey\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">public_key</a></strong>. </p>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">public_key</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>pubkey</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-17\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>public_key <span class=\"token operator\">&amp;</span> pubkey\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">eosio::public_key</a></strong>. </p>\n<p>Serialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">eosio::public_key</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>pubkey</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-18\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>public_key <span class=\"token operator\">&amp;</span> pubkey\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">eosio::public_key</a></strong>. </p>\n<p>Deserialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1public__key\">eosio::public_key</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>pubkey</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-19\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>signature <span class=\"token operator\">&amp;</span> sig\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1signature\">eosio::signature</a></strong>. </p>\n<p>Serialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1signature\">eosio::signature</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>sig</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-20\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>signature <span class=\"token operator\">&amp;</span> sig\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1signature\">eosio::signature</a></strong>. </p>\n<p>Deserialize an <strong><a href=\"/eosio.cdt/v1.4/group__datastream/structeosio_1_1signature\">eosio::signature</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>sig</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-21\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> key256 <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a key256. </p>\n<p>Serialize a key256 into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>d</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-22\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    key256 <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a key256. </p>\n<p>Deserialize a key256 from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-23\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> size_t Size<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> fixed_bytes<span class=\"token operator\">&lt;</span> Size <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1fixed__bytes\">fixed_bytes</a></strong>. </p>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1fixed__bytes\">fixed_bytes</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>d</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-24\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> size_t Size<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    fixed_bytes<span class=\"token operator\">&lt;</span> Size <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1fixed__bytes\">fixed_bytes</a></strong>. </p>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.4/group__datastream/classeosio_1_1fixed__bytes\">fixed_bytes</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-25\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">bool</span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a bool into a stream. </p>\n<p>Serialize a bool into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-26\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a bool. </p>\n<p>Deserialize a bool from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-27\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> capi_checksum256 <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a checksum256. </p>\n<p>Serialize a checksum256 into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>d</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-28\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    capi_checksum256 <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a checksum256. </p>\n<p>Deserialize a checksum256 from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-29\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a string. </p>\n<p>Serialize a string into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-30\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a string. </p>\n<p>Deserialize a string from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-31\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>array<span class=\"token operator\">&lt;</span> T<span class=\"token punctuation\">,</span> N <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a fixed size std::array. </p>\n<p>Serialize a fixed size std::array</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-32\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>array<span class=\"token operator\">&lt;</span> T<span class=\"token punctuation\">,</span> N <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a fixed size std::array. </p>\n<p>Deserialize a fixed size std::array</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-33\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> _datastream_detail<span class=\"token operator\">::</span>is_pointer<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    T \n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a a pointer. </p>\n<p>Pointer should not be serialized, so this function will always throws an error</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the pointer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<p><strong>Post</strong></p>\n<p>Throw an exception if it is a pointer </p>\n<h3 id=\"function-operator-34\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_primitive<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_pointer<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function\">T</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a fixed size C array of non-primitive and non-pointer type. </p>\n<p>Serialize a fixed size C array of primitive type.\nSerialize a fixed size C array of non-primitive and non-pointer type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the pointer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Serialize a fixed size C array of primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the pointer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-35\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_primitive<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_pointer<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">T</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a fixed size C array of non-primitive and non-pointer type. </p>\n<p>Deserialize a fixed size C array of primitive type.\nDeserialize a fixed size C array of non-primitive and non-pointer type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Deserialize a fixed size C array of primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-36\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a vector of char. </p>\n<p>Serialize a vector of char</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-37\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a vector. </p>\n<p>Serialize a vector</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the vector </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-38\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a vector of char. </p>\n<p>Deserialize a vector of char</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-39\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a vector. </p>\n<p>Deserialize a vector</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the vector </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-40\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a set. </p>\n<p>Serialize a set</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>s</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the set </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-41\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a set. </p>\n<p>Deserialize a set</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>s</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the set </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-42\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> V<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">,</span> V <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a map. </p>\n<p>Serialize a map</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>m</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>K</strong> - Type of the key contained in the map </li>\n<li><strong>V</strong> - Type of the value contained in the map </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-43\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> V<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">,</span> V <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a map. </p>\n<p>Deserialize a map</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>m</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>K</strong> - Type of the key contained in the map </li>\n<li><strong>V</strong> - Type of the value contained in the map </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-44\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> boost<span class=\"token operator\">::</span>container<span class=\"token operator\">::</span>flat_set<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a flat_set. </p>\n<p>Serialize a flat_set</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>s</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the value contained in the flat_set </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-45\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    boost<span class=\"token operator\">::</span>container<span class=\"token operator\">::</span>flat_set<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a flat_set. </p>\n<p>Deserialize a flat_set</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>s</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the value contained in the flat_set </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-46\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> V<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> boost<span class=\"token operator\">::</span>container<span class=\"token operator\">::</span>flat_map<span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">,</span> V <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a flat map. </p>\n<p>Serialize a flat map</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>m</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>K</strong> - Type of the key contained in the flat map </li>\n<li><strong>V</strong> - Type of the value contained in the flat map </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-47\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> V<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    boost<span class=\"token operator\">::</span>container<span class=\"token operator\">::</span>flat_map<span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">,</span> V <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a flat map. </p>\n<p>Deserialize a flat map</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>m</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>K</strong> - Type of the key contained in the flat map </li>\n<li><strong>V</strong> - Type of the value contained in the flat map </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-48\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span> Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a tuple. </p>\n<p>Serialize a tuple</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>t</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-49\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span> Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a tuple. </p>\n<p>Deserialize a tuple</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>t</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-50\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>is_class<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a class. </p>\n<p>Serialize a primitive type.\nSerialize a class</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of class </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Serialize a primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the primitive type </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-51\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>is_class<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    T <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a class. </p>\n<p>Deserialize a primitive type.\nDeserialize a class</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of class </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Deserialize a primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the primitive type </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-unpack\">function unpack</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nT eosio<span class=\"token operator\">::</span><span class=\"token function\">unpack</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> buffer<span class=\"token punctuation\">,</span>\n    size_t len\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unpack data inside a fixed size buffer as T. </p>\n<p>Unpack data inside a fixed size buffer as T</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the unpacked data </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>buffer</strong> - Pointer to the buffer </li>\n<li><strong>len</strong> - Length of the buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>T - The unpacked data </p>\n<h3 id=\"function-unpack-1\">function unpack</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nT eosio<span class=\"token operator\">::</span><span class=\"token function\">unpack</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> bytes\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unpack data inside a variable size buffer as T. </p>\n<p>Unpack data inside a variable size buffer as T</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the unpacked data </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>bytes</strong> - Buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>T - The unpacked data </p>\n<h3 id=\"function-pack_size\">function pack_size</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nsize_t eosio<span class=\"token operator\">::</span><span class=\"token function\">pack_size</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> value\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get the size of the packed data. </p>\n<p>Get the size of the packed data</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the data to be packed </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>value</strong> - Data to be packed </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>size_t - Size of the packed data </p>\n<h3 id=\"function-pack\">function pack</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> value\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get packed data. </p>\n<p>Get packed data</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the data to be packed </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>value</strong> - Data to be packed </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>bytes - The packed data </p>\n<h3 id=\"function-operator-52\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> capi_checksum160 <span class=\"token operator\">&amp;</span> cs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serializea capi_checksum160 type. </p>\n<p>Serialize a capi_checksum160 type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>cs</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-53\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    capi_checksum160 <span class=\"token operator\">&amp;</span> cs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a capi_checksum160 type. </p>\n<p>Deserialize a capi_checksum160 type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>cs</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-54\">function operator&#x3C;&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> capi_checksum512 <span class=\"token operator\">&amp;</span> cs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a capi_checksum512 type. </p>\n<p>Serialize a capi_checksum512 type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>cs</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-55\">function operator>></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    capi_checksum512 <span class=\"token operator\">&amp;</span> cs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a capi_checksum512 type. </p>\n<p>Deserialize a capi_checksum512 type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>cs</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>","tableOfContents":"<ul>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#classes\">Classes</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#functions\">Functions</a></li>\n<li>\n<p><a href=\"/eosio.cdt/v1.4/group__datastream/#functions-documentation\">Functions Documentation</a></p>\n<ul>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-1\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-2\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-deserialize\">function deserialize</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-3\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-4\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-5\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-6\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-7\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-8\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-9\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-10\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-11\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-12\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-13\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-14\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-15\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-16\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-17\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-18\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-19\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-20\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-21\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-22\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-23\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-24\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-25\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-26\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-27\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-28\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-29\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-30\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-31\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-32\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-33\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-34\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-35\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-36\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-37\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-38\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-39\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-40\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-41\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-42\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-43\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-44\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-45\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-46\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-47\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-48\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-49\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-50\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-51\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-unpack\">function unpack</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-unpack-1\">function unpack</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-pack_size\">function pack_size</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-pack\">function pack</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-52\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-53\">function operator>></a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-54\">function operator&#x3C;&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.4/group__datastream/#function-operator-55\">function operator>></a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"edit_link":null,"request_changes_link":null},"fields":{"articleTitle":"group >  > datastream","contentTitle":"Data stream","headTagTitle":"datastream","internalSummary":"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.4/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":true,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":true,\"parentPath\":\"v1.4\",\"collectionPath\":\"/\",\"rootDirPath\":\"v1.4\",\"filename\":\"group__datastream.md\"}","repository":"eosio.cdt","showSearch":true,"slug":"/v1.4/group__datastream","tagsList":"[{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":1,\"tag\":\"v1.7.0-rc1\",\"tag_reduced\":\"1.7\",\"tag_reduced_friendly\":\"v1.7\",\"tag_sanitized\":\"1.7.0-rc1\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.7/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.7\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":true,\"rc\":0,\"tag\":\"v1.6.2\",\"tag_reduced\":\"1.6\",\"tag_reduced_friendly\":\"v1.6\",\"tag_sanitized\":\"1.6.2\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/latest/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"latest\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v1.5.0\",\"tag_reduced\":\"1.5\",\"tag_reduced_friendly\":\"v1.5\",\"tag_sanitized\":\"1.5.0\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.5/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.5\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v1.4.1\",\"tag_reduced\":\"1.4\",\"tag_reduced_friendly\":\"v1.4\",\"tag_sanitized\":\"1.4.1\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.4/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.4\"}]","latestDDVersion":"latest","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"v1.4","currentDDVersion":"1.4","summaryJson":"{\"array\":[{\"title\":\"Smart Contract APIs\",\"sub\":[{\"link\":\"/group__actioncppapi.md\",\"title\":\"Action c++ api\"},{\"sub\":[{\"link\":\"/group__assetcppapi.md\",\"title\":\"Asset cpp api\"}],\"link\":\"/group__assetapi.md\",\"title\":\"Asset api\"},{\"link\":\"/group__binary__extension.md\",\"title\":\"Binary extension\"},{\"link\":\"/group__consolecppapi.md\",\"title\":\"Console c++ api\"},{\"link\":\"/group__contracttype.md\",\"title\":\"Contract type\"},{\"sub\":[{\"link\":\"/group__cryptocppapi.md\",\"title\":\"Chain c api\"}],\"link\":\"/group__cryptoapi.md\",\"title\":\"Chain api\"},{\"sub\":[{\"link\":\"/group__dispatchercpp.md\",\"title\":\"Dispatcher c++ api\"}],\"link\":\"/group__dispatcher.md\",\"title\":\"Dispatcher api\"},{\"link\":\"/group__fixed__bytes.md\",\"title\":\"Fixed size byte array\"},{\"link\":\"/group__fixed__key.md\",\"title\":\"Fixed size key\"},{\"link\":\"/group__fixedpoint.md\",\"title\":\"Fixed point\"},{\"link\":\"/group__multiindex.md\",\"title\":\"Multi index table\"},{\"link\":\"/group__privilegedcppapi.md\",\"title\":\"Privileged c++ api\"},{\"link\":\"/group__producertype.md\",\"title\":\"Producer type\"},{\"link\":\"/group__publickeytype.md\",\"title\":\"Public key type\"},{\"sub\":[{\"link\":\"/group__datastream.md\",\"title\":\"Data stream\"},{\"link\":\"/group__serializecpp.md\",\"title\":\"Serialize c++ api\"}],\"link\":\"/group__serialize.md\",\"title\":\"Serialize api\"},{\"link\":\"/group__signaturetype.md\",\"title\":\"Public key type\"},{\"link\":\"/group__singleton.md\",\"title\":\"Singleton table\"},{\"sub\":[{\"link\":\"/group__symbolcppapi.md\",\"title\":\"Symbol cpp api\"}],\"link\":\"/group__symbolapi.md\",\"title\":\"Symbol api\"},{\"link\":\"/group__transactioncppapi.md\",\"title\":\"Transaction c++ api\"},{\"link\":\"/group__varint.md\",\"title\":\"Variable length integer type\"}]},{\"title\":\"Browse Tree\",\"link\":\"\",\"sub\":[{\"link\":\"/functions.md\",\"title\":\"Function index\"},{\"link\":\"/variables.md\",\"title\":\"Variable index\"},{\"link\":\"/enumerations.md\",\"title\":\"Enumeration index\"},{\"sub\":[{\"link\":\"/struct_extended.md\",\"title\":\"Struct extended\"},{\"link\":\"/struct_stores.md\",\"title\":\"Struct stores\"},{\"sub\":[{\"link\":\"/namespaceeosio_1_1__datastream__detail.md\",\"title\":\"Namespace datastream detail\"},{\"sub\":[{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.md\",\"title\":\"Struct secondary index db functions\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_4.md\",\"title\":\"Struct secondary index db functions< double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_04.md\",\"title\":\"Struct secondary index db functions< eosio::fixed bytes< 32 > >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key24.md\",\"title\":\"Struct secondary index db functions< eosio::key256 >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_4.md\",\"title\":\"Struct secondary index db functions< long double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint1_t_4.md\",\"title\":\"Struct secondary index db functions< uint1t >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint_t_4.md\",\"title\":\"Struct secondary index db functions< uintt >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits.md\",\"title\":\"Struct secondary key traits\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_4.md\",\"title\":\"Struct secondary key traits< double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_04.md\",\"title\":\"Struct secondary key traits< eosio::fixed bytes< 32 > >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key24.md\",\"title\":\"Struct secondary key traits< eosio::key256 >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_4.md\",\"title\":\"Struct secondary key traits< long double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint1_t_4.md\",\"title\":\"Struct secondary key traits< uint1t >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint_t_4.md\",\"title\":\"Struct secondary key traits< uintt >\"}],\"link\":\"/namespaceeosio_1_1__multi__index__detail.md\",\"title\":\"Namespace multi index detail\"},{\"link\":\"/structeosio_1_1action.md\",\"title\":\"Struct action\"},{\"link\":\"/structeosio_1_1action__wrapper.md\",\"title\":\"Struct action wrapper\"},{\"link\":\"/structeosio_1_1asset.md\",\"title\":\"Struct asset\"},{\"link\":\"/classeosio_1_1binary__extension.md\",\"title\":\"Class binary extension\"},{\"link\":\"/classeosio_1_1block__timestamp.md\",\"title\":\"Class block timestamp\"},{\"link\":\"/structeosio_1_1blockchain__parameters.md\",\"title\":\"Struct blockchain parameters\"},{\"link\":\"/structeosio_1_1const__mem__fun.md\",\"title\":\"Struct const mem fun\"},{\"link\":\"/classeosio_1_1contract.md\",\"title\":\"Class contract\"},{\"link\":\"/classeosio_1_1datastream.md\",\"title\":\"Class datastream\"},{\"link\":\"/classeosio_1_1datastream_3_01size__t_4.md\",\"title\":\"Class datastream< size t >\"},{\"sub\":[{\"link\":\"/structeosio_1_1detail_1_1check__types.md\",\"title\":\"Struct check types\"},{\"link\":\"/structeosio_1_1detail_1_1check__types_3_action_i_t_4.md\",\"title\":\"Struct check types< action, i, t >\"},{\"link\":\"/structeosio_1_1detail_1_1convert.md\",\"title\":\"Struct convert\"},{\"link\":\"/structeosio_1_1detail_1_1convert_3_01char_5_4.md\",\"title\":\"Struct convert< char * >\"},{\"link\":\"/structeosio_1_1detail_1_1convert_3_01const_01char_5_4.md\",\"title\":\"Struct convert< const char * >\"},{\"link\":\"/structeosio_1_1detail_1_1get__nth.md\",\"title\":\"Struct get nth\"},{\"link\":\"/structeosio_1_1detail_1_1get__nth__impl.md\",\"title\":\"Struct get nth impl\"},{\"link\":\"/structeosio_1_1detail_1_1get__nth__impl_3_n_n_arg_args_8_8_8_4.md\",\"title\":\"Struct get nth impl< n, n, arg, args... >\"},{\"link\":\"/structeosio_1_1detail_1_1is__same.md\",\"title\":\"Struct is same\"},{\"link\":\"/structeosio_1_1detail_1_1is__same_3_t_01bool_4.md\",\"title\":\"Struct is same< t, bool >\"},{\"link\":\"/structeosio_1_1detail_1_1is__same_3_01bool_u_4.md\",\"title\":\"Struct is same< bool, u >\"},{\"link\":\"/structeosio_1_1detail_1_1to__const__char__arr.md\",\"title\":\"Struct to const char arr\"},{\"link\":\"/structeosio_1_1detail_1_1unwrap.md\",\"title\":\"Struct unwrap\"},{\"link\":\"/structeosio_1_1detail_1_1unwrap_3_01ignore_3_t_4_4.md\",\"title\":\"Struct unwrap< ignore< t > >\"}],\"link\":\"/namespaceeosio_1_1detail.md\",\"title\":\"Namespace detail\"},{\"link\":\"/structeosio_1_1extended__asset.md\",\"title\":\"Struct extended asset\"},{\"link\":\"/classeosio_1_1extended__symbol.md\",\"title\":\"Class extended symbol\"},{\"sub\":[{\"link\":\"/structeosio_1_1fixed__bytes_1_1bool__pack.md\",\"title\":\"Struct bool pack\"}],\"link\":\"/classeosio_1_1fixed__bytes.md\",\"title\":\"Class fixed bytes\"},{\"link\":\"/classeosio_1_1fixed__key.md\",\"title\":\"Class fixed key\"},{\"link\":\"/structeosio_1_1fixed__point128.md\",\"title\":\"Struct fixed point128\"},{\"link\":\"/structeosio_1_1fixed__point32.md\",\"title\":\"Struct fixed point32\"},{\"link\":\"/structeosio_1_1fixed__point64.md\",\"title\":\"Struct fixed point64\"},{\"link\":\"/structeosio_1_1ignore.md\",\"title\":\"Struct ignore\"},{\"link\":\"/structeosio_1_1ignore__wrapper.md\",\"title\":\"Struct ignore wrapper\"},{\"link\":\"/structeosio_1_1indexed__by.md\",\"title\":\"Struct indexed by\"},{\"link\":\"/structeosio_1_1inline__dispatcher.md\",\"title\":\"Struct inline dispatcher\"},{\"link\":\"/structeosio_1_1inline__dispatcher_3_01void_t_1_1_5_args_8_8_8_name_4.md\",\"title\":\"Struct inline dispatcher< void(t::*)(args...), name >\"},{\"link\":\"/classeosio_1_1iostream.md\",\"title\":\"Class iostream\"},{\"link\":\"/classeosio_1_1microseconds.md\",\"title\":\"Class microseconds\"},{\"sub\":[{\"link\":\"/structeosio_1_1multi__index_1_1const__iterator.md\",\"title\":\"Struct const iterator\"},{\"sub\":[{\"link\":\"/structeosio_1_1multi__index_1_1index_1_1const__iterator.md\",\"title\":\"Struct const iterator\"}],\"link\":\"/structeosio_1_1multi__index_1_1index.md\",\"title\":\"Struct index\"},{\"link\":\"/structeosio_1_1multi__index_1_1intc.md\",\"title\":\"Struct intc\"},{\"link\":\"/structeosio_1_1multi__index_1_1item.md\",\"title\":\"Struct item\"},{\"link\":\"/structeosio_1_1multi__index_1_1item__ptr.md\",\"title\":\"Struct item ptr\"}],\"link\":\"/classeosio_1_1multi__index.md\",\"title\":\"Class multi index\"},{\"link\":\"/structeosio_1_1name.md\",\"title\":\"Struct name\"},{\"link\":\"/structeosio_1_1onerror.md\",\"title\":\"Struct onerror\"},{\"link\":\"/structeosio_1_1permission__level.md\",\"title\":\"Struct permission level\"},{\"link\":\"/structeosio_1_1producer__key.md\",\"title\":\"Struct producer key\"},{\"link\":\"/structeosio_1_1producer__schedule.md\",\"title\":\"Struct producer schedule\"},{\"link\":\"/structeosio_1_1public__key.md\",\"title\":\"Struct public key\"},{\"link\":\"/structeosio_1_1reflector.md\",\"title\":\"Struct reflector\"},{\"link\":\"/structeosio_1_1signature.md\",\"title\":\"Struct signature\"},{\"sub\":[{\"link\":\"/structeosio_1_1singleton_1_1row.md\",\"title\":\"Struct row\"}],\"link\":\"/classeosio_1_1singleton.md\",\"title\":\"Class singleton\"},{\"link\":\"/classeosio_1_1symbol.md\",\"title\":\"Class symbol\"},{\"link\":\"/classeosio_1_1symbol__code.md\",\"title\":\"Class symbol code\"},{\"link\":\"/classeosio_1_1time__point.md\",\"title\":\"Class time point\"},{\"link\":\"/classeosio_1_1time__point__sec.md\",\"title\":\"Class time point sec\"},{\"link\":\"/classeosio_1_1transaction.md\",\"title\":\"Class transaction\"},{\"link\":\"/classeosio_1_1transaction__header.md\",\"title\":\"Class transaction header\"},{\"link\":\"/structeosio_1_1variant__action__wrapper.md\",\"title\":\"Struct variant action wrapper\"}],\"link\":\"/namespaceeosio.md\",\"title\":\"Namespace eosio\"},{\"link\":\"/structsigned__int.md\",\"title\":\"Struct signed int\"},{\"link\":\"/structunsigned__int.md\",\"title\":\"Struct unsigned int\"}],\"link\":\"/annotated.md\",\"title\":\"Class list\"},{\"sub\":[{\"sub\":[{\"sub\":[{\"link\":\"/action_8hpp.md\",\"title\":\"Action.hpp\"},{\"link\":\"/asset_8hpp.md\",\"title\":\"Asset.hpp\"},{\"link\":\"/binary__extension_8hpp.md\",\"title\":\"Binary extension.hpp\"},{\"link\":\"/contract_8hpp.md\",\"title\":\"Contract.hpp\"},{\"link\":\"/crypto_8hpp.md\",\"title\":\"Crypto.hpp\"},{\"link\":\"/datastream_8hpp.md\",\"title\":\"Datastream.hpp\"},{\"link\":\"/dispatcher_8hpp.md\",\"title\":\"Dispatcher.hpp\"},{\"link\":\"/eosio_8hpp.md\",\"title\":\"Eosio.hpp\"},{\"link\":\"/fixed__bytes_8hpp.md\",\"title\":\"Fixed bytes.hpp\"},{\"link\":\"/fixed__key_8hpp.md\",\"title\":\"Fixed key.hpp\"},{\"link\":\"/fixedpoint_8hpp.md\",\"title\":\"Fixedpoint.hpp\"},{\"link\":\"/ignore_8hpp.md\",\"title\":\"Ignore.hpp\"},{\"link\":\"/multi__index_8hpp.md\",\"title\":\"Multi index.hpp\"},{\"link\":\"/name_8hpp.md\",\"title\":\"Name.hpp\"},{\"link\":\"/permission_8hpp.md\",\"title\":\"Permission.hpp\"},{\"link\":\"/print_8hpp.md\",\"title\":\"Print.hpp\"},{\"link\":\"/privileged_8hpp.md\",\"title\":\"Privileged.hpp\"},{\"link\":\"/producer__schedule_8hpp.md\",\"title\":\"Producer schedule.hpp\"},{\"link\":\"/public__key_8hpp.md\",\"title\":\"Public key.hpp\"},{\"link\":\"/reflect_8hpp.md\",\"title\":\"Reflect.hpp\"},{\"link\":\"/serialize_8hpp.md\",\"title\":\"Serialize.hpp\"},{\"link\":\"/singleton_8hpp.md\",\"title\":\"Singleton.hpp\"},{\"link\":\"/stdlib_8hpp.md\",\"title\":\"Stdlib.hpp\"},{\"link\":\"/symbol_8hpp.md\",\"title\":\"Symbol.hpp\"},{\"link\":\"/time_8hpp.md\",\"title\":\"Time.hpp\"},{\"link\":\"/transaction_8hpp.md\",\"title\":\"Transaction.hpp\"},{\"link\":\"/varint_8hpp.md\",\"title\":\"Varint.hpp\"}],\"link\":\"/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8.md\",\"title\":\"Eosiolib/\"}],\"link\":\"/dir_bc0718b08fb2015b8e59c47b2805f60c.md\",\"title\":\"Libraries/\"}],\"link\":\"/files.md\",\"title\":\"Files\"}]}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/v1.4/group__datastream"}}}