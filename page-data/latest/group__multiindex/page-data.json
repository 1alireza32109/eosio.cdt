{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/latest/group__multiindex","webpackCompilationHash":"dbc61e84854ef324c050","result":{"data":{"site":{"pathPrefix":"/eosio.cdt"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/latest/annotated"}},{"fields":{"slug":"/latest/check_8hpp"}},{"fields":{"slug":"/latest/class_stores"}},{"fields":{"slug":"/latest/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/latest/classeosio_1_1contract"}},{"fields":{"slug":"/latest/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/latest/classeosio_1_1datastream"}},{"fields":{"slug":"/latest/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/latest/classeosio_1_1binary__extension"}},{"fields":{"slug":"/latest/classeosio_1_1microseconds"}},{"fields":{"slug":"/latest/classeosio_1_1singleton"}},{"fields":{"slug":"/latest/classeosio_1_1rope"}},{"fields":{"slug":"/latest/classeosio_1_1symbol"}},{"fields":{"slug":"/latest/classeosio_1_1time__point"}},{"fields":{"slug":"/latest/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/latest/classeosio_1_1symbol__code"}},{"fields":{"slug":"/latest/classeosio_1_1transaction"}},{"fields":{"slug":"/latest/classeosio_1_1transaction__header"}},{"fields":{"slug":"/latest/classeosio_1_1iostream"}},{"fields":{"slug":"/latest/contracts_2eosio_2contract_8hpp"}},{"fields":{"slug":"/latest/classes"}},{"fields":{"slug":"/latest/core_2eosio_2asset_8hpp"}},{"fields":{"slug":"/latest/contracts_2eosio_2action_8hpp"}},{"fields":{"slug":"/latest/core_2eosio_2binary__extension_8hpp"}},{"fields":{"slug":"/latest/dir_7e917b7566708c24627b3b828f138985"}},{"fields":{"slug":"/latest/datastream_8hpp"}},{"fields":{"slug":"/latest/dir_6973a5be5f0104fdfb8b76a272d58cb0"}},{"fields":{"slug":"/latest/crypto_8hpp"}},{"fields":{"slug":"/latest/dir_850c7dbae88cf75e5ded2d8d64345058"}},{"fields":{"slug":"/latest/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/latest/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/latest/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/latest/dir_e6eaa0c1a89a74634a56cba5556371ea"}},{"fields":{"slug":"/latest/dispatcher_8hpp"}},{"fields":{"slug":"/latest/fixed__bytes_8hpp"}},{"fields":{"slug":"/latest/eosio_8hpp"}},{"fields":{"slug":"/latest/files"}},{"fields":{"slug":"/latest/group__asset"}},{"fields":{"slug":"/latest/group__binary__extension"}},{"fields":{"slug":"/latest/enumerations"}},{"fields":{"slug":"/latest/group__console"}},{"fields":{"slug":"/latest/group__action"}},{"fields":{"slug":"/latest/group__contract"}},{"fields":{"slug":"/latest/group__core"}},{"fields":{"slug":"/latest/group__contracts"}},{"fields":{"slug":"/latest/group__datastream"}},{"fields":{"slug":"/latest/group__dispatcher"}},{"fields":{"slug":"/latest/group__fixed__bytes"}},{"fields":{"slug":"/latest/group__crypto"}},{"fields":{"slug":"/latest/group__multi__index"}},{"fields":{"slug":"/latest/group__ignore"}},{"fields":{"slug":"/latest/group__name"}},{"fields":{"slug":"/latest/group__privileged"}},{"fields":{"slug":"/latest/group__permission"}},{"fields":{"slug":"/latest/group__producer__schedule"}},{"fields":{"slug":"/latest/group__signature"}},{"fields":{"slug":"/latest/group__singleton"}},{"fields":{"slug":"/latest/group__public__key"}},{"fields":{"slug":"/latest/group__producer__key"}},{"fields":{"slug":"/latest/group__serialize"}},{"fields":{"slug":"/latest/group__symbol"}},{"fields":{"slug":"/latest/group__time"}},{"fields":{"slug":"/latest/functions"}},{"fields":{"slug":"/latest/group__varint"}},{"fields":{"slug":"/latest/group__multiindex"}},{"fields":{"slug":"/latest/group__transaction"}},{"fields":{"slug":"/latest/ignore_8hpp"}},{"fields":{"slug":"/latest"}},{"fields":{"slug":"/latest/group__types"}},{"fields":{"slug":"/latest/modules"}},{"fields":{"slug":"/latest/name_8hpp"}},{"fields":{"slug":"/latest/multi__index_8hpp"}},{"fields":{"slug":"/latest/group__system"}},{"fields":{"slug":"/latest/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/latest/namespaceeosio_1_1detail"}},{"fields":{"slug":"/latest/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/latest/namespaceeosio_1_1impl"}},{"fields":{"slug":"/latest/pages"}},{"fields":{"slug":"/latest/print_8hpp"}},{"fields":{"slug":"/latest/permission_8hpp"}},{"fields":{"slug":"/latest/privileged_8hpp"}},{"fields":{"slug":"/latest/namespaceeosio_1_1internal__use__do__not__use"}},{"fields":{"slug":"/latest/producer__schedule_8hpp"}},{"fields":{"slug":"/latest/rope_8hpp"}},{"fields":{"slug":"/latest/public__key_8hpp"}},{"fields":{"slug":"/latest/serialize_8hpp"}},{"fields":{"slug":"/latest/singleton_8hpp"}},{"fields":{"slug":"/latest/stdlib_8hpp"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/latest/struct_extended"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1action"}},{"fields":{"slug":"/latest/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/latest/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/latest/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1ignore"}},{"fields":{"slug":"/latest/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/latest/structeosio_1_1asset"}},{"fields":{"slug":"/latest/structeosio_1_1impl_1_1concat__t"}},{"fields":{"slug":"/latest/structeosio_1_1impl_1_1str__t"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/latest/structeosio_1_1extended__asset"}},{"fields":{"slug":"/latest/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/latest/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/latest/structeosio_1_1indexed__by"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/latest/structeosio_1_1overloaded"}},{"fields":{"slug":"/latest/structeosio_1_1name"}},{"fields":{"slug":"/latest/structeosio_1_1onerror"}},{"fields":{"slug":"/latest/structeosio_1_1producer__key"}},{"fields":{"slug":"/latest/structeosio_1_1permission__level"}},{"fields":{"slug":"/latest/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/latest/structeosio_1_1signed__int"}},{"fields":{"slug":"/latest/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/latest/structeosio_1_1public__key"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/latest/structeosio_1_1signature"}},{"fields":{"slug":"/latest/symbol_8hpp"}},{"fields":{"slug":"/latest/structunsigned__int"}},{"fields":{"slug":"/latest/structsigned__int"}},{"fields":{"slug":"/latest/time_8hpp"}},{"fields":{"slug":"/latest/system_8hpp"}},{"fields":{"slug":"/latest/transaction_8hpp"}},{"fields":{"slug":"/latest/structeosio_1_1unsigned__int"}},{"fields":{"slug":"/v1.4/action_8hpp"}},{"fields":{"slug":"/latest/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/latest/varint_8hpp"}},{"fields":{"slug":"/latest/variables"}},{"fields":{"slug":"/v1.4/asset_8hpp"}},{"fields":{"slug":"/v1.4/binary__extension_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.4/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.4/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.4/annotated"}},{"fields":{"slug":"/v1.4/classeosio_1_1fixed__key"}},{"fields":{"slug":"/v1.4/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.4/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.4/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.4/classeosio_1_1contract"}},{"fields":{"slug":"/v1.4/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.4/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.4/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.4/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.4/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.4/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.4/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.4/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.4/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.4/crypto_8hpp"}},{"fields":{"slug":"/v1.4/contract_8hpp"}},{"fields":{"slug":"/v1.4/datastream_8hpp"}},{"fields":{"slug":"/v1.4/classes"}},{"fields":{"slug":"/v1.4/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.4/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.4/dispatcher_8hpp"}},{"fields":{"slug":"/v1.4/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.4/eosio_8hpp"}},{"fields":{"slug":"/v1.4/enumerations"}},{"fields":{"slug":"/v1.4/files"}},{"fields":{"slug":"/v1.4/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.4/fixedpoint_8hpp"}},{"fields":{"slug":"/v1.4/fixed__key_8hpp"}},{"fields":{"slug":"/v1.4/group__actioncppapi"}},{"fields":{"slug":"/v1.4/group__assetcppapi"}},{"fields":{"slug":"/v1.4/group__binary__extension"}},{"fields":{"slug":"/v1.4/group__assetapi"}},{"fields":{"slug":"/v1.4/group__cryptoapi"}},{"fields":{"slug":"/v1.4/group__consolecppapi"}},{"fields":{"slug":"/v1.4/group__dispatcher"}},{"fields":{"slug":"/v1.4/group__contracttype"}},{"fields":{"slug":"/v1.4/group__cryptocppapi"}},{"fields":{"slug":"/v1.4/group__dispatchercpp"}},{"fields":{"slug":"/v1.4/group__fixed__bytes"}},{"fields":{"slug":"/v1.4/group__multiindex"}},{"fields":{"slug":"/v1.4/group__fixed__key"}},{"fields":{"slug":"/v1.4/group__privilegedcppapi"}},{"fields":{"slug":"/v1.4/group__fixedpoint"}},{"fields":{"slug":"/v1.4/group__serialize"}},{"fields":{"slug":"/v1.4/group__producertype"}},{"fields":{"slug":"/v1.4/group__publickeytype"}},{"fields":{"slug":"/v1.4/group__signaturetype"}},{"fields":{"slug":"/v1.4/group__singleton"}},{"fields":{"slug":"/v1.4/group__symbolapi"}},{"fields":{"slug":"/v1.4/group__serializecpp"}},{"fields":{"slug":"/v1.4/group__symbolcppapi"}},{"fields":{"slug":"/v1.4/group__varint"}},{"fields":{"slug":"/v1.4/group__transactioncppapi"}},{"fields":{"slug":"/v1.4/ignore_8hpp"}},{"fields":{"slug":"/v1.4/modules"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.4/name_8hpp"}},{"fields":{"slug":"/v1.4/group__datastream"}},{"fields":{"slug":"/v1.4"}},{"fields":{"slug":"/v1.4/functions"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.4/pages"}},{"fields":{"slug":"/v1.4/print_8hpp"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.4/permission_8hpp"}},{"fields":{"slug":"/v1.4/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.4/privileged_8hpp"}},{"fields":{"slug":"/v1.4/public__key_8hpp"}},{"fields":{"slug":"/v1.4/serialize_8hpp"}},{"fields":{"slug":"/v1.4/stdlib_8hpp"}},{"fields":{"slug":"/v1.4/singleton_8hpp"}},{"fields":{"slug":"/v1.4/struct_extended"}},{"fields":{"slug":"/v1.4/struct_stores"}},{"fields":{"slug":"/v1.4/reflect_8hpp"}},{"fields":{"slug":"/v1.4/multi__index_8hpp"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1action"}},{"fields":{"slug":"/v1.4/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.4/structeosio_1_1asset"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.4/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.4/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point128"}},{"fields":{"slug":"/v1.4/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.4/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point32"}},{"fields":{"slug":"/v1.4/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point64"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.4/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.4/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.4/structeosio_1_1name"}},{"fields":{"slug":"/v1.4/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.4/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.4/structeosio_1_1reflector"}},{"fields":{"slug":"/v1.4/structeosio_1_1public__key"}},{"fields":{"slug":"/v1.4/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.4/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.4/structeosio_1_1signature"}},{"fields":{"slug":"/v1.4/symbol_8hpp"}},{"fields":{"slug":"/v1.4/time_8hpp"}},{"fields":{"slug":"/v1.4/varint_8hpp"}},{"fields":{"slug":"/v1.4/structsigned__int"}},{"fields":{"slug":"/v1.4/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.4/structunsigned__int"}},{"fields":{"slug":"/v1.4/transaction_8hpp"}},{"fields":{"slug":"/v1.4/variables"}},{"fields":{"slug":"/v1.5/action_8hpp"}},{"fields":{"slug":"/v1.5/asset_8hpp"}},{"fields":{"slug":"/v1.5/annotated"}},{"fields":{"slug":"/v1.5/binary__extension_8hpp"}},{"fields":{"slug":"/v1.5/class_stores"}},{"fields":{"slug":"/v1.5/classeosio_1_1contract"}},{"fields":{"slug":"/v1.5/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.5/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.5/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.5/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.5/classeosio_1_1fixed__key"}},{"fields":{"slug":"/v1.5/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.5/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.5/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.5/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.5/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.5/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.5/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.5/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.5/contract_8hpp"}},{"fields":{"slug":"/v1.5/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.5/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.5/classes"}},{"fields":{"slug":"/v1.5/crypto_8hpp"}},{"fields":{"slug":"/v1.5/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.5/datastream_8hpp"}},{"fields":{"slug":"/v1.5/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.5/dispatcher_8hpp"}},{"fields":{"slug":"/v1.5/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.5/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.5/eosio_8hpp"}},{"fields":{"slug":"/v1.5/enumerations"}},{"fields":{"slug":"/v1.5/fixed__key_8hpp"}},{"fields":{"slug":"/v1.5/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.5/fixedpoint_8hpp"}},{"fields":{"slug":"/v1.5/files"}},{"fields":{"slug":"/v1.5/group__asset"}},{"fields":{"slug":"/v1.5/group__c__api"}},{"fields":{"slug":"/v1.5/group__binary__extension"}},{"fields":{"slug":"/v1.5/group__action"}},{"fields":{"slug":"/v1.5/group__crypto"}},{"fields":{"slug":"/v1.5/group__cpp__api"}},{"fields":{"slug":"/v1.5/group__contract"}},{"fields":{"slug":"/v1.5/group__console"}},{"fields":{"slug":"/v1.5/group__datastream"}},{"fields":{"slug":"/v1.5/group__fixed__key"}},{"fields":{"slug":"/v1.5/group__fixed__bytes"}},{"fields":{"slug":"/v1.5/group__fixed__point"}},{"fields":{"slug":"/v1.5/group__dispatcher"}},{"fields":{"slug":"/v1.5/group__privileged"}},{"fields":{"slug":"/v1.5/group__producer__schedule"}},{"fields":{"slug":"/v1.5/group__publickeytype"}},{"fields":{"slug":"/v1.5/group__multiindex"}},{"fields":{"slug":"/v1.5/group__name"}},{"fields":{"slug":"/v1.5/group__serialize"}},{"fields":{"slug":"/v1.5/group__singleton"}},{"fields":{"slug":"/v1.5/group__signature"}},{"fields":{"slug":"/v1.5/group__time"}},{"fields":{"slug":"/v1.5/group__system"}},{"fields":{"slug":"/v1.5/group__symbol"}},{"fields":{"slug":"/v1.5/group__types"}},{"fields":{"slug":"/v1.5/group__varint"}},{"fields":{"slug":"/v1.5/group__transaction"}},{"fields":{"slug":"/v1.5/ignore_8hpp"}},{"fields":{"slug":"/v1.5"}},{"fields":{"slug":"/v1.5/multi__index_8hpp"}},{"fields":{"slug":"/v1.5/modules"}},{"fields":{"slug":"/v1.5/group__transactioncppapi"}},{"fields":{"slug":"/v1.5/name_8hpp"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.5/functions"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.5/permission_8hpp"}},{"fields":{"slug":"/v1.5/privileged_8hpp"}},{"fields":{"slug":"/v1.5/pages"}},{"fields":{"slug":"/v1.5/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.5/print_8hpp"}},{"fields":{"slug":"/v1.5/public__key_8hpp"}},{"fields":{"slug":"/v1.5/serialize_8hpp"}},{"fields":{"slug":"/v1.5/singleton_8hpp"}},{"fields":{"slug":"/v1.5/struct_extended"}},{"fields":{"slug":"/v1.5/stdlib_8hpp"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1action"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.5/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1asset"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point64"}},{"fields":{"slug":"/v1.5/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point128"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point32"}},{"fields":{"slug":"/v1.5/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.5/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.5/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.5/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.5/structeosio_1_1name"}},{"fields":{"slug":"/v1.5/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.5/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.5/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.5/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.5/structeosio_1_1signature"}},{"fields":{"slug":"/v1.5/structeosio_1_1public__key"}},{"fields":{"slug":"/v1.5/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.5/symbol_8hpp"}},{"fields":{"slug":"/v1.5/structsigned__int"}},{"fields":{"slug":"/v1.5/system_8hpp"}},{"fields":{"slug":"/v1.5/time_8hpp"}},{"fields":{"slug":"/v1.5/structunsigned__int"}},{"fields":{"slug":"/v1.5/transaction_8hpp"}},{"fields":{"slug":"/v1.5/varint_8hpp"}},{"fields":{"slug":"/latest/guides/cmake"}},{"fields":{"slug":"/latest/upgrading/1.2-to-1.3"}},{"fields":{"slug":"/v1.5/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/latest/guides/generator-attributes"}},{"fields":{"slug":"/latest/guides/native-tester"}},{"fields":{"slug":"/latest/guides/first-smart-contract"}},{"fields":{"slug":"/latest/upgrading/1.5-to-1.6"}},{"fields":{"slug":"/v1.5/guides/cmake"}},{"fields":{"slug":"/v1.5/guides/basic-usage"}},{"fields":{"slug":"/v1.5/guides/first-smart-contract"}},{"fields":{"slug":"/v1.5/variables"}},{"fields":{"slug":"/v1.5/guides/native-tester"}},{"fields":{"slug":"/v1.5/tools/eosio-ld"}},{"fields":{"slug":"/v1.5/tools/eosio-abigen"}},{"fields":{"slug":"/v1.5/tools/eosio-abidiff"}},{"fields":{"slug":"/v1.5/tools/eosio-init"}},{"fields":{"slug":"/latest/tools/eosio-abidiff"}},{"fields":{"slug":"/latest/tools/eosio-abigen"}},{"fields":{"slug":"/v1.5/tools/eosio-cpp"}},{"fields":{"slug":"/latest/tools/eosio-init"}},{"fields":{"slug":"/v1.5/guides/upgrading-from-1.2-to-1.3"}},{"fields":{"slug":"/latest/tools/eosio-cpp"}},{"fields":{"slug":"/v1.5/guides/abi-generator-attributes"}},{"fields":{"slug":"/latest/namespaceeosio"}},{"fields":{"slug":"/latest/classeosio_1_1multi__index"}},{"fields":{"slug":"/latest/tools/eosio-ld"}},{"fields":{"slug":"/v1.4/namespaceeosio"}},{"fields":{"slug":"/v1.5/namespaceeosio"}}]},"markdownRemark":{"html":"<p>Defines EOSIO Multi Index Table. <a href=\"/eosio.cdt/latest/guides/cmake/#detailed-description\">More...</a></p>\n<h2 id=\"classes\">Classes</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/latest/structeosio_1_1indexed__by/\"><strong>eosio::indexed_by</strong></a><br>The <strong><a href=\"/eosio.cdt/latest/structeosio_1_1indexed__by/\">indexed_by</a></strong> struct is used to instantiate the indices for the Multi-Index table. In EOSIO, up to 16 secondary indices can be specified.</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"functions\">Functions</h2>\n<h2 id=\"detailed-description\">Detailed Description</h2>\n<p>EOSIO Multi-Index API provides a C++ interface to the EOSIO database. It is patterned after Boost Multi Index Container. EOSIO Multi-Index table requires exactly a uint64_t primary key. For the table to be able to retrieve the primary key, the object stored inside the table is required to have a const member function called primary_key() that returns uint64_t. EOSIO Multi-Index table also supports up to 16 secondary indices. The type of the secondary indices could be any of:</p>\n<ul>\n<li>uint64_t</li>\n<li>uint128_t</li>\n<li>double</li>\n<li>long double</li>\n<li><strong><a href=\"/eosio.cdt/latest/namespaceeosio/#typedef-checksum256\">eosio::checksum256</a></strong></li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>TableName</strong> - name of the table </li>\n<li><strong>T</strong> - type of the data stored inside the table </li>\n<li><strong>Indices</strong> - secondary indices for the table, up to 16 indices is supported here</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;eosiolib/eosio.hpp></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> eosio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">mycontract</span><span class=\"token operator\">:</span> contract <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> record <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">uint64_t</span>    primary<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span>    secondary_1<span class=\"token punctuation\">;</span>\n    uint128_t   secondary_2<span class=\"token punctuation\">;</span>\n    checksum256 secondary_3<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">double</span>      secondary_4<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">double</span> secondary_5<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">uint64_t</span> <span class=\"token function\">primary_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> primary<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">uint64_t</span> <span class=\"token function\">get_secondary_1</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> secondary_1<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    uint128_t <span class=\"token function\">get_secondary_2</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> secondary_2<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    checksum256 <span class=\"token function\">get_secondary_3</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> secondary_3<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">double</span> <span class=\"token function\">get_secondary_4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> secondary_4<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">double</span> <span class=\"token function\">get_secondary_5</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> secondary_5<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">mycontract</span><span class=\"token punctuation\">(</span>name receiver<span class=\"token punctuation\">,</span> name code<span class=\"token punctuation\">,</span> datastream<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">></span> ds<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span>receiver<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> ds<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">auto</span> code <span class=\"token operator\">=</span> _self<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> scope <span class=\"token operator\">=</span> _self<span class=\"token punctuation\">;</span>\n      multi_index<span class=\"token operator\">&lt;</span><span class=\"token string\">\"mytable\"</span>_n<span class=\"token punctuation\">,</span> record<span class=\"token punctuation\">,</span>\n        indexed_by<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"bysecondary1\"</span>_n<span class=\"token punctuation\">,</span> const_mem_fun<span class=\"token operator\">&lt;</span>record<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>record<span class=\"token operator\">::</span>get_secondary_1<span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        indexed_by<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"bysecondary2\"</span>_n<span class=\"token punctuation\">,</span> const_mem_fun<span class=\"token operator\">&lt;</span>record<span class=\"token punctuation\">,</span> uint128_t<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>record<span class=\"token operator\">::</span>get_secondary_2<span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        indexed_by<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"bysecondary3\"</span>_n<span class=\"token punctuation\">,</span> const_mem_fun<span class=\"token operator\">&lt;</span>record<span class=\"token punctuation\">,</span> checksum256<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>record<span class=\"token operator\">::</span>get_secondary_3<span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        indexed_by<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"bysecondary4\"</span>_n<span class=\"token punctuation\">,</span> const_mem_fun<span class=\"token operator\">&lt;</span>record<span class=\"token punctuation\">,</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>record<span class=\"token operator\">::</span>get_secondary_4<span class=\"token operator\">></span> <span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n        indexed_by<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"bysecondary5\"</span>_n<span class=\"token punctuation\">,</span> const_mem_fun<span class=\"token operator\">&lt;</span>record<span class=\"token punctuation\">,</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">double</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>record<span class=\"token operator\">::</span>get_secondary_5<span class=\"token operator\">></span> <span class=\"token operator\">></span>\n      <span class=\"token operator\">></span> <span class=\"token function\">table</span><span class=\"token punctuation\">(</span> code<span class=\"token punctuation\">,</span> scope<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> mycontract<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h2 id=\"functions-documentation\">Functions Documentation</h2>\n<h3 id=\"function-multi_index\">function multi_index</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">multi_index</span><span class=\"token punctuation\">(</span>\n    name code<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint64_t</span> scope\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>load_object_by_primary_iterator </p>\n<p>Constructs an instance of a Multi-Index table.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>code</strong> - Account that owns table </li>\n<li><strong>scope</strong> - Scope identifier within the code hierarchy</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>code and scope member properties are initialized </p>\n<p><strong>Post</strong></p>\n<p>each secondary index table initialized </p>\n<p><strong>Post</strong></p>\n<p>Secondary indices are updated to refer to the newly added object. If the secondary index tables do not exist, they are created. </p>\n<p><strong>Post</strong></p>\n<p>The payer is charged for the storage usage of the new object and, if the table (and secondary index tables) must be created, for the overhead of the table creation.</p>\n<p>Notes The <code class=\"language-text\"></code> template has template parameters <code class=\"language-text\">&lt;</code>, where:</p>\n<ul>\n<li><code class=\"language-text\">TableName</code> is the name of the table, maximum 12 characters long, characters in the name from the set of lowercase letters, digits 1 to 5, and the \".\" (period) character and is converted to a eosio::raw - which wraps uint64_t;</li>\n<li><code class=\"language-text\">T</code> is the object type (i.e., row definition);</li>\n<li><code class=\"language-text\">Indices</code> is a list of up to 16 secondary indices.</li>\n<li>Each must be a default constructable class or struct</li>\n<li>Each must have a function call operator that takes a const reference to the table object type and returns either a secondary key type or a reference to a secondary key type</li>\n<li>It is recommended to use the <strong><a href=\"/eosio.cdt/latest/structeosio_1_1const__mem__fun/\">eosio::const_mem_fun</a></strong> template, which is a type alias to the boost::multi_index::const_mem_fun. See the documentation for the Boost <strong><a href=\"/eosio.cdt/latest/structeosio_1_1const__mem__fun/\">const_mem_fun</a></strong> key extractor for more details.</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;eosiolib/eosio.hpp></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> eosio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">addressbook</span><span class=\"token operator\">:</span> contract <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> address <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">uint64_t</span> account_name<span class=\"token punctuation\">;</span>\n     string first_name<span class=\"token punctuation\">;</span>\n     string last_name<span class=\"token punctuation\">;</span>\n     string street<span class=\"token punctuation\">;</span>\n     string city<span class=\"token punctuation\">;</span>\n     string state<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">uint64_t</span> <span class=\"token function\">primary_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> account_name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">addressbook</span><span class=\"token punctuation\">(</span>name self<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">typedef</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> <span class=\"token string\">\"address\"</span>_n<span class=\"token punctuation\">,</span> address <span class=\"token operator\">></span> address_index<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      address_index <span class=\"token function\">addresses</span><span class=\"token punctuation\">(</span>_self<span class=\"token punctuation\">,</span> _self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code, scope</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-get_code\">function get_code</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">name eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">get_code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns the <code class=\"language-text\">code</code> member property.</p>\n<p><strong>Returns:</strong></p>\n<p>Account name of the Code that owns the Primary Table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      address_index <span class=\"token function\">addresses</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code, scope</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>addresses<span class=\"token punctuation\">.</span><span class=\"token function\">get_code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Codes don't match.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-get_scope\">function get_scope</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">uint64_t</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">get_scope</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns the <code class=\"language-text\">scope</code> member property.</p>\n<p><strong>Returns:</strong></p>\n<p>Scope id of the Scope within the Code of the Current Receiver under which the desired Primary Table instance can be found.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      address_index <span class=\"token function\">addresses</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code, scope</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>addresses<span class=\"token punctuation\">.</span><span class=\"token function\">get_code</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Scopes don't match\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-cbegin\">function cbegin</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">cbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">==</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">cbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Only address is not at front.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-begin\">function begin</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the object_type with the lowest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">==</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">begin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Only address is not at front.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_ABI</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-cend\">function cend</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">cend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">cend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address for account doesn't exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-end\">function end</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address for account doesn't exist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-crbegin\">function crbegin</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_reverse_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">crbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns a reverse iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>A reverse iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">crbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Last Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brendan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Second Last Record\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-rbegin\">function rbegin</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_reverse_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">rbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns a reverse iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>A reverse iterator pointing to the <code class=\"language-text\">object_type</code> with the highest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">rbegin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Last Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brendan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Second Last Record\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-crend\">function crend</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_reverse_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">crend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator pointing to the <code class=\"language-text\">object_type</code> with the lowest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the <code class=\"language-text\">object_type</code> with the lowest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">crend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brendan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect First Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Second Record\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-rend\">function rend</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_reverse_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">rend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator pointing to the <code class=\"language-text\">object_type</code> with the lowest primary key value in the Multi-Index table.</p>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the <code class=\"language-text\">object_type</code> with the lowest primary key value in the Multi-Index table.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">rend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brendan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect First Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Second Record\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-lower_bound\">function lower_bound</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">lower_bound</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint64_t</span> primary\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Searches for the <code class=\"language-text\">object_type</code> with the lowest primary key that is greater than or equal to a given primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>primary</strong> - Primary key that establishes the target value for the lower bound search. </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the <code class=\"language-text\">object_type</code> that has the lowest primary key that is greater than or equal to <code class=\"language-text\">primary</code>. If an object could not be found, it will return the <code class=\"language-text\">end</code> iterator. If the table does not exist** it will return <code class=\"language-text\">-1</code>.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the get_index() example below. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>zip <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">uint32_t</span> zipnumb <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> zip_index <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span>get_index<span class=\"token operator\">&lt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">lower_bound</span><span class=\"token punctuation\">(</span>zipnumb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"brendan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect First Lower Bound Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Second Lower Bound Record\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">==</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect End of Iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-upper_bound\">function upper_bound</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint64_t</span> primary\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Searches for the <code class=\"language-text\">object_type</code> with the highest primary key that is less than or equal to a given primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>primary</strong> - Primary key that establishes the target value for the upper bound search </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An iterator pointing to the <code class=\"language-text\">object_type</code> that has the highest primary key that is less than or equal to <code class=\"language-text\">primary</code>. If an object could not be found, it will return the <code class=\"language-text\">end</code> iterator. If the table does not exist** it will return <code class=\"language-text\">-1</code>.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the get_index() example below. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>zip <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">uint32_t</span> zipnumb <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> zip_index <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span>get_index<span class=\"token operator\">&lt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span>zipnumb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect First Upper Bound Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">==</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect End of Iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-available_primary_key\">function available_primary_key</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">uint64_t</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">available_primary_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an available primary key.</p>\n<p><strong>Returns:</strong></p>\n<p>An available (unused) primary key value.</p>\n<p>Notes: Intended to be used in tables in which the primary keys of the table are strictly intended to be auto-incrementing, and thus will never be set to custom values by the contract. Violating this expectation could result in the table appearing to be full due to inability to allocate an available primary key. Ideally this method would only be used to determine the appropriate primary key to use within new objects added to a table in which the primary keys of the table are strictly intended from the beginning to be autoincrementing and thus will not ever be set to custom arbitrary values by the contract. Violating this agreement could result in the table appearing full when in reality there is plenty of space left.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      address_index <span class=\"token function\">addresses</span><span class=\"token punctuation\">(</span>_self<span class=\"token punctuation\">,</span> _self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// code, scope</span>\n      <span class=\"token comment\">// add to table, first argument is account to bill for storage</span>\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>key <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">available_primary_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Daniel\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Larimer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Blacksburg\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"VA\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-get_index\">function get_index</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span> IndexName<span class=\"token operator\">></span>\n<span class=\"token keyword\">auto</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">get_index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns an appropriately typed Secondary Index.</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>IndexName</strong> - the ID of the desired secondary index</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An index of the appropriate type: Primitive 64-bit unsigned integer key (idx64), Primitive 128-bit unsigned integer key (idx128), 128-bit fixed-size lexicographical key (idx128), 256-bit fixed-size lexicographical key (idx256), Floating point key, Double precision floating point key, Long Double (quadruple) precision floating point key</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token macro property\">#<span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;eosiolib/eosio.hpp></span></span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> eosio<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token keyword\">namespace</span> std<span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">addressbook</span><span class=\"token operator\">:</span> contract <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">struct</span> address <span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">uint64_t</span> account_name<span class=\"token punctuation\">;</span>\n     string first_name<span class=\"token punctuation\">;</span>\n     string last_name<span class=\"token punctuation\">;</span>\n     string street<span class=\"token punctuation\">;</span>\n     string city<span class=\"token punctuation\">;</span>\n     string state<span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">uint32_t</span> zip <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">uint64_t</span> <span class=\"token function\">primary_key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> account_name<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n     <span class=\"token keyword\">uint64_t</span> <span class=\"token function\">by_zip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> zip<span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">public</span><span class=\"token operator\">:</span>\n    <span class=\"token function\">addressbook</span><span class=\"token punctuation\">(</span>name receiver<span class=\"token punctuation\">,</span> name code<span class=\"token punctuation\">,</span> datastream<span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">></span> ds<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token function\">contract</span><span class=\"token punctuation\">(</span>receiver<span class=\"token punctuation\">,</span> code<span class=\"token punctuation\">,</span> ds<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">typedef</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"address\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> address<span class=\"token punctuation\">,</span> indexed_by<span class=\"token operator\">&lt;</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> const_mem_fun<span class=\"token operator\">&lt;</span>address<span class=\"token punctuation\">,</span> <span class=\"token keyword\">uint64_t</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>address<span class=\"token operator\">::</span>by_zip<span class=\"token operator\">></span> <span class=\"token operator\">></span> address_index<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token keyword\">uint32_t</span> zipnumb <span class=\"token operator\">=</span> <span class=\"token number\">93446</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> zip_index <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span>get_index<span class=\"token operator\">&lt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>zipnumb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-get_index-1\">function get_index</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span> IndexName<span class=\"token operator\">></span>\n<span class=\"token keyword\">auto</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">get_index</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an appropriately typed Secondary Index.</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>IndexName</strong> - the ID of the desired secondary index</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An index of the appropriate type: Primitive 64-bit unsigned integer key (idx64), Primitive 128-bit unsigned integer key (idx128), 128-bit fixed-size lexicographical key (idx128), 256-bit fixed-size lexicographical key (idx256), Floating point key, Double precision floating point key, Long Double (quadruple) precision floating point key</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the get_index() example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>zip <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">uint32_t</span> zipnumb <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> zip_index <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span>get_index<span class=\"token operator\">&lt;</span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zip\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">upper_bound</span><span class=\"token punctuation\">(</span>zipnumb<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>account_name <span class=\"token operator\">==</span> <span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect First Upper Bound Record \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">==</span> zip_index<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Incorrect End of Iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-iterator_to\">function iterator_to</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">iterator_to</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> obj\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Returns an iterator to the given object in a Multi-Index table.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>obj</strong> - A reference to the desired object</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An iterator to the given object</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the get_index() example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example below</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example below</span>\n      <span class=\"token comment\">// add additional account - brendan</span>\n\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"brendan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Brendan\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Blumer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Hong Kong\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"HK\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>zip <span class=\"token operator\">=</span> <span class=\"token number\">93445</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> user <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> address<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span><span class=\"token function\">iterator_to</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> itr<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Invalid iterator\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-emplace\">function emplace</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Lambda<span class=\"token operator\">></span>\nconst_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>\n    name payer<span class=\"token punctuation\">,</span>\n    Lambda <span class=\"token operator\">&amp;&amp;</span> constructor\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Adds a new object (i.e., row) to the table.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>payer</strong> - Account name of the payer for the Storage usage of the new object </li>\n<li><strong>constructor</strong> - Lambda function that does an in-place initialization of the object to be created in the table</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>A multi index table has been instantiated </p>\n<p><strong>Post</strong></p>\n<p>A new object is created in the Multi-Index table, with a unique primary key (as specified in the object). The object is serialized and written to the table. If the table does not exist, it is created. </p>\n<p><strong>Post</strong></p>\n<p>Secondary indices are updated to refer to the newly added object. If the secondary index tables do not exist, they are created. </p>\n<p><strong>Post</strong></p>\n<p>The payer is charged for the storage usage of the new object and, if the table (and secondary index tables) must be created, for the overhead of the table creation.</p>\n<p><strong>Returns:</strong></p>\n<p>A primary key iterator to the newly created object</p>\n<p>Exception - The account is not authorized to write to the table.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      address_index <span class=\"token function\">addresses</span><span class=\"token punctuation\">(</span>_self<span class=\"token punctuation\">,</span> _self<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// code, scope</span>\n      <span class=\"token comment\">// add to table, first argument is account to bill for storage</span>\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">emplace</span><span class=\"token punctuation\">(</span>_self<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>account_name <span class=\"token operator\">=</span> <span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Daniel\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>last_name <span class=\"token operator\">=</span> <span class=\"token string\">\"Larimer\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>street <span class=\"token operator\">=</span> <span class=\"token string\">\"1 EOS Way\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"Blacksburg\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"VA\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-modify\">function modify</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Lambda<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">modify</span><span class=\"token punctuation\">(</span>\n    const_iterator itr<span class=\"token punctuation\">,</span>\n    name payer<span class=\"token punctuation\">,</span>\n    Lambda <span class=\"token operator\">&amp;&amp;</span> updater\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Modifies an existing object in a table.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>itr</strong> - an iterator pointing to the object to be updated </li>\n<li><strong>payer</strong> - account name of the payer for the Storage usage of the updated row </li>\n<li><strong>updater</strong> - lambda function that updates the target object</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>itr points to an existing element </p>\n<p><strong>Precondition:</strong></p>\n<p>payer is a valid account that is authorized to execute the action and be billed for storage usage.</p>\n<p><strong>Post</strong></p>\n<p>The modified object is serialized, then replaces the existing object in the table. </p>\n<p><strong>Post</strong></p>\n<p>Secondary indices are updated; the primary key of the updated object is not changed. </p>\n<p><strong>Post</strong></p>\n<p>The payer is charged for the storage usage of the updated object. </p>\n<p><strong>Post</strong></p>\n<p>If payer is the same as the existing payer, payer only pays for the usage difference between existing and updated object (and is refunded if this difference is negative). </p>\n<p><strong>Post</strong></p>\n<p>If payer is different from the existing payer, the existing payer is refunded for the storage usage of the existing object.</p>\n<p>Exceptions: If called with an invalid precondition, execution is aborted.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address for account not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">modify</span><span class=\"token punctuation\">(</span> itr<span class=\"token punctuation\">,</span> account payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"San Luis Obispo\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"CA\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-modify-1\">function modify</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Lambda<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">modify</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> obj<span class=\"token punctuation\">,</span>\n    name payer<span class=\"token punctuation\">,</span>\n    Lambda <span class=\"token operator\">&amp;&amp;</span> updater\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Modifies an existing object in a table.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>obj</strong> - a reference to the object to be updated </li>\n<li><strong>payer</strong> - account name of the payer for the Storage usage of the updated row </li>\n<li><strong>updater</strong> - lambda function that updates the target object</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>obj is an existing object in the table </p>\n<p><strong>Precondition:</strong></p>\n<p>payer is a valid account that is authorized to execute the action and be billed for storage usage.</p>\n<p><strong>Post</strong></p>\n<p>The modified object is serialized, then replaces the existing object in the table. </p>\n<p><strong>Post</strong></p>\n<p>Secondary indices are updated; the primary key of the updated object is not changed. </p>\n<p><strong>Post</strong></p>\n<p>The payer is charged for the storage usage of the updated object. </p>\n<p><strong>Post</strong></p>\n<p>If payer is the same as the existing payer, payer only pays for the usage difference between existing and updated object (and is refunded if this difference is negative). </p>\n<p><strong>Post</strong></p>\n<p>If payer is different from the existing payer, the existing payer is refunded for the storage usage of the existing object.</p>\n<p>Exceptions: If called with an invalid precondition, execution is aborted.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address for account not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">modify</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">*</span>itr<span class=\"token punctuation\">,</span> payer<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">(</span> <span class=\"token keyword\">auto</span><span class=\"token operator\">&amp;</span> address <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        address<span class=\"token punctuation\">.</span>city <span class=\"token operator\">=</span> <span class=\"token string\">\"San Luis Obispo\"</span><span class=\"token punctuation\">;</span>\n        address<span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token string\">\"CA\"</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr<span class=\"token operator\">-</span><span class=\"token operator\">></span>city <span class=\"token operator\">==</span> <span class=\"token string\">\"San Luis Obispo\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Lock arf, Address not modified\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-get\">function get</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">const</span> T<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint64_t</span> primary<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> error_msg <span class=\"token operator\">=</span> <span class=\"token string\">\"unable to find key\"</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Retrieves an existing object from a table using its primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>primary</strong> - Primary key value of the object </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>A constant reference to the object containing the specified primary key.</p>\n<p>Exception - No object matches the given key\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example</span>\n\n      <span class=\"token keyword\">auto</span> user <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>user<span class=\"token punctuation\">.</span>first_name <span class=\"token operator\">==</span> <span class=\"token string\">\"Daniel\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Couldn't get him.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-find\">function find</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint64_t</span> primary\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Search for an existing object in a table using its primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>primary</strong> - Primary key value of the object </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An iterator to the found object which has a primary key equal to <code class=\"language-text\">primary</code> OR the <code class=\"language-text\">end</code> iterator of the referenced table if an object with primary key <code class=\"language-text\">primary</code> is not found.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Couldn't get him.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-require_find\">function require_find</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">require_find</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint64_t</span> primary<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> error_msg <span class=\"token operator\">=</span> <span class=\"token string\">\"unable to find key\"</span>\n<span class=\"token punctuation\">)</span> <span class=\"token keyword\">const</span></code></pre></div>\n<p>Search for an existing object in a table using its primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>primary</strong> - Primary key value of the object </li>\n<li><strong>error_msg</strong> - error message if an object with primary key <code class=\"language-text\">primary</code> is not found. </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>An iterator to the found object which has a primary key equal to <code class=\"language-text\">primary</code> OR throws an exception if an object with primary key <code class=\"language-text\">primary</code> is not found. </p>\n<h3 id=\"function-erase\">function erase</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">const_iterator eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>\n    const_iterator itr\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Remove an existing object from a table using its primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>itr</strong> - An iterator pointing to the object to be removed</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>itr points to an existing element </p>\n<p><strong>Post</strong></p>\n<p>The object is removed from the table and all associated storage is reclaimed. </p>\n<p><strong>Post</strong></p>\n<p>Secondary indices associated with the table are updated. </p>\n<p><strong>Post</strong></p>\n<p>The existing payer for storage usage of the object is refunded for the table and secondary indices usage of the removed object, and if the table and indices are removed, for the associated overhead.</p>\n<p><strong>Returns:</strong></p>\n<p>For the signature with <code class=\"language-text\"></code>, returns a pointer to the object following the removed object.</p>\n<p>Exceptions: The object to be removed is not in the table. The action is not authorized to modify the table. The given iterator is invalid.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// create reference to address_index  - see emplace example</span>\n      <span class=\"token comment\">// add dan account to table           - see emplace example</span>\n\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Address for account not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span> itr <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Everting lock arf, Address not erased properly\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_ABI</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-erase-1\">function erase</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span>multi_index<span class=\"token operator\">&lt;</span> TableName<span class=\"token punctuation\">,</span> T<span class=\"token punctuation\">,</span> Indices <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> obj\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Remove an existing object from a table using its primary key.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>obj</strong> - Object to be removed</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>obj is an existing object in the table </p>\n<p><strong>Post</strong></p>\n<p>The object is removed from the table and all associated storage is reclaimed. </p>\n<p><strong>Post</strong></p>\n<p>Secondary indices associated with the table are updated. </p>\n<p><strong>Post</strong></p>\n<p>The existing payer for storage usage of the object is refunded for the table and secondary indices usage of the removed object, and if the table and indices are removed, for the associated overhead.</p>\n<p>Exceptions: The object to be removed is not in the table. The action is not authorized to modify the table. The given iterator is invalid.\nExample:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token comment\">// This assumes the code from the constructor example. Replace myaction() {...}</span>\n\n    <span class=\"token keyword\">void</span> <span class=\"token function\">myaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">auto</span> itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">!=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Record is not found\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      addresses<span class=\"token punctuation\">.</span><span class=\"token function\">erase</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>itr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      itr <span class=\"token operator\">=</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dan\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>itr <span class=\"token operator\">==</span> addresses<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Record is not deleted\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">EOSIO_DISPATCH</span><span class=\"token punctuation\">(</span> addressbook<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>myaction<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#classes\">Classes</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#functions\">Functions</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#detailed-description\">Detailed Description</a></li>\n<li>\n<p><a href=\"/eosio.cdt/latest/group__multiindex/#functions-documentation\">Functions Documentation</a></p>\n<ul>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-multi_index\">function multi_index</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-get_code\">function get_code</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-get_scope\">function get_scope</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-cbegin\">function cbegin</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-begin\">function begin</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-cend\">function cend</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-end\">function end</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-crbegin\">function crbegin</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-rbegin\">function rbegin</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-crend\">function crend</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-rend\">function rend</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-lower_bound\">function lower_bound</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-upper_bound\">function upper_bound</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-available_primary_key\">function available_primary_key</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-get_index\">function get_index</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-get_index-1\">function get_index</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-iterator_to\">function iterator_to</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-emplace\">function emplace</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-modify\">function modify</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-modify-1\">function modify</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-get\">function get</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-find\">function find</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-require_find\">function require_find</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-erase\">function erase</a></li>\n<li><a href=\"/eosio.cdt/latest/group__multiindex/#function-erase-1\">function erase</a></li>\n</ul>\n</li>\n</ul>","fields":{"articleTitle":"group >  > multiindex","contentTitle":"Multi index table","headTagTitle":"multiindex","internalSummary":"/root/.local/share/thorka/site/EOSIO/eosio.cdt/tagged/eosio.cdt/lib/gatsby/data/latest/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":true,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":true,\"parentPath\":\"latest\",\"collectionPath\":\"/\",\"rootDirPath\":\"latest\",\"filename\":\"group__multiindex.md\"}","repository":"eosio.cdt","showSearch":true,"slug":"/latest/group__multiindex","tagsList":"[{\"beta\":false,\"build\":false,\"deprecated\":false,\"latest\":true,\"rc\":false,\"tag\":\"v1.6.2\",\"tag_reduced\":\"1.6\",\"tag_reduced_friendly\":\"v1.6\",\"tag_sanitized\":\"1.6.2\",\"summaryPath\":\"/root/.local/share/thorka/site/EOSIO/eosio.cdt/tagged/eosio.cdt/lib/gatsby/data/latest/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"latest\"},{\"beta\":false,\"build\":false,\"deprecated\":false,\"latest\":false,\"rc\":false,\"tag\":\"v1.5.0\",\"tag_reduced\":\"1.5\",\"tag_reduced_friendly\":\"v1.5\",\"tag_sanitized\":\"1.5.0\",\"summaryPath\":\"/root/.local/share/thorka/site/EOSIO/eosio.cdt/tagged/eosio.cdt/lib/gatsby/data/v1.5/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.5\"},{\"beta\":false,\"build\":false,\"deprecated\":false,\"latest\":false,\"rc\":false,\"tag\":\"v1.4.1\",\"tag_reduced\":\"1.4\",\"tag_reduced_friendly\":\"v1.4\",\"tag_sanitized\":\"1.4.1\",\"summaryPath\":\"/root/.local/share/thorka/site/EOSIO/eosio.cdt/tagged/eosio.cdt/lib/gatsby/data/v1.4/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.4\"}]","latestDDVersion":"latest","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"latest","currentDDVersion":"1.6","summaryJson":"{\"array\":[{\"sub\":[{\"title\":\"Cmake\",\"link\":\"guides/cmake.md\"},{\"title\":\"First smart contract\",\"link\":\"guides/first-smart-contract.md\"},{\"title\":\"Generator attributes\",\"link\":\"guides/generator-attributes.md\"},{\"title\":\"Native tester\",\"link\":\"guides/native-tester.md\"}],\"title\":\"Guides\"},{\"sub\":[{\"title\":\"Eosio abidiff\",\"link\":\"tools/eosio-abidiff.md\"},{\"title\":\"Eosio abigen\",\"link\":\"tools/eosio-abigen.md\"},{\"title\":\"Eosio cpp\",\"link\":\"tools/eosio-cpp.md\"},{\"title\":\"Eosio init\",\"link\":\"tools/eosio-init.md\"},{\"title\":\"Eosio ld\",\"link\":\"tools/eosio-ld.md\"}],\"title\":\"Tools\"},{\"sub\":[{\"title\":\"1.2 to 1.3\",\"link\":\"upgrading/1.2-to-1.3.md\"},{\"title\":\"1.5 to 1.6\",\"link\":\"upgrading/1.5-to-1.6.md\"}],\"title\":\"Upgrading\"},{\"title\":\"Smart Contract APIs\",\"sub\":[{\"sub\":[{\"link\":\"/group__action.md\",\"title\":\"Action\"},{\"link\":\"/group__contract.md\",\"title\":\"Contract\"},{\"link\":\"/group__dispatcher.md\",\"title\":\"Dispatcher\"},{\"link\":\"/group__multi__index.md\",\"title\":\"Multi index table\"},{\"link\":\"/group__multiindex.md\",\"title\":\"Multi index table\"},{\"link\":\"/group__permission.md\",\"title\":\"Permission\"},{\"link\":\"/group__privileged.md\",\"title\":\"Privileged\"},{\"link\":\"/group__producer__key.md\",\"title\":\"Producer key\"},{\"link\":\"/group__producer__schedule.md\",\"title\":\"Producer schedule\"},{\"link\":\"/group__singleton.md\",\"title\":\"Singleton table\"},{\"link\":\"/group__system.md\",\"title\":\"System\"},{\"link\":\"/group__time.md\",\"title\":\"Time\"},{\"link\":\"/group__transaction.md\",\"title\":\"Transaction\"}],\"link\":\"/group__contracts.md\",\"title\":\"Contracts api\"},{\"sub\":[{\"link\":\"/group__action.md\",\"title\":\"Action\"},{\"link\":\"/group__asset.md\",\"title\":\"Asset\"},{\"link\":\"/group__binary__extension.md\",\"title\":\"Binary extension\"},{\"link\":\"/group__console.md\",\"title\":\"Console\"},{\"link\":\"/group__crypto.md\",\"title\":\"Chain api\"},{\"link\":\"/group__datastream.md\",\"title\":\"Data stream\"},{\"link\":\"/group__dispatcher.md\",\"title\":\"Dispatcher\"},{\"link\":\"/group__fixed__bytes.md\",\"title\":\"Fixed size byte array\"},{\"link\":\"/group__ignore.md\",\"title\":\"Ignore\"},{\"link\":\"/group__name.md\",\"title\":\"Name\"},{\"link\":\"/group__serialize.md\",\"title\":\"Serialize\"},{\"link\":\"/group__symbol.md\",\"title\":\"Symbol\"},{\"link\":\"/group__system.md\",\"title\":\"System\"},{\"link\":\"/group__time.md\",\"title\":\"Time\"},{\"link\":\"/group__varint.md\",\"title\":\"Variable length integer type\"}],\"link\":\"/group__core.md\",\"title\":\"Core api\"},{\"sub\":[{\"link\":\"/group__binary__extension.md\",\"title\":\"Binary extension\"},{\"link\":\"/group__contract.md\",\"title\":\"Contract\"},{\"link\":\"/group__fixed__bytes.md\",\"title\":\"Fixed size byte array\"},{\"link\":\"/group__name.md\",\"title\":\"Name\"},{\"link\":\"/group__permission.md\",\"title\":\"Permission\"},{\"link\":\"/group__producer__key.md\",\"title\":\"Producer key\"},{\"link\":\"/group__producer__schedule.md\",\"title\":\"Producer schedule\"},{\"link\":\"/group__public__key.md\",\"title\":\"Public key type\"},{\"link\":\"/group__signature.md\",\"title\":\"Signature type\"},{\"link\":\"/group__varint.md\",\"title\":\"Variable length integer type\"}],\"link\":\"/group__types.md\",\"title\":\"Types\"}]},{\"title\":\"Browse Tree\",\"sub\":[{\"link\":\"/functions.md\",\"title\":\"Function index\"},{\"link\":\"/variables.md\",\"title\":\"Variable index\"},{\"link\":\"/enumerations.md\",\"title\":\"Enumeration index\"},{\"sub\":[{\"link\":\"/struct_extended.md\",\"title\":\"Struct extended\"},{\"link\":\"/class_stores.md\",\"title\":\"Class stores\"},{\"sub\":[{\"link\":\"/namespaceeosio_1_1__datastream__detail.md\",\"title\":\"Namespace datastream detail\"},{\"sub\":[{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.md\",\"title\":\"Struct secondary index db functions\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_4.md\",\"title\":\"Struct secondary index db functions< double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_04.md\",\"title\":\"Struct secondary index db functions< eosio::fixed bytes< 32 > >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_4.md\",\"title\":\"Struct secondary index db functions< long double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint1_t_4.md\",\"title\":\"Struct secondary index db functions< uint1t >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint_t_4.md\",\"title\":\"Struct secondary index db functions< uintt >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits.md\",\"title\":\"Struct secondary key traits\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_4.md\",\"title\":\"Struct secondary key traits< double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_04.md\",\"title\":\"Struct secondary key traits< eosio::fixed bytes< 32 > >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_4.md\",\"title\":\"Struct secondary key traits< long double >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint1_t_4.md\",\"title\":\"Struct secondary key traits< uint1t >\"},{\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint_t_4.md\",\"title\":\"Struct secondary key traits< uintt >\"}],\"link\":\"/namespaceeosio_1_1__multi__index__detail.md\",\"title\":\"Namespace multi index detail\"},{\"link\":\"/structeosio_1_1action.md\",\"title\":\"Struct action\"},{\"link\":\"/structeosio_1_1action__wrapper.md\",\"title\":\"Struct action wrapper\"},{\"link\":\"/structeosio_1_1asset.md\",\"title\":\"Struct asset\"},{\"link\":\"/classeosio_1_1binary__extension.md\",\"title\":\"Class binary extension\"},{\"link\":\"/classeosio_1_1block__timestamp.md\",\"title\":\"Class block timestamp\"},{\"link\":\"/structeosio_1_1blockchain__parameters.md\",\"title\":\"Struct blockchain parameters\"},{\"link\":\"/structeosio_1_1const__mem__fun.md\",\"title\":\"Struct const mem fun\"},{\"link\":\"/classeosio_1_1contract.md\",\"title\":\"Class contract\"},{\"link\":\"/classeosio_1_1datastream.md\",\"title\":\"Class datastream\"},{\"link\":\"/classeosio_1_1datastream_3_01size__t_4.md\",\"title\":\"Class datastream< size t >\"},{\"sub\":[{\"link\":\"/structeosio_1_1detail_1_1check__types.md\",\"title\":\"Struct check types\"},{\"link\":\"/structeosio_1_1detail_1_1check__types_3_action_i_t_4.md\",\"title\":\"Struct check types< action, i, t >\"},{\"link\":\"/structeosio_1_1detail_1_1convert.md\",\"title\":\"Struct convert\"},{\"link\":\"/structeosio_1_1detail_1_1convert_3_01char_5_4.md\",\"title\":\"Struct convert< char * >\"},{\"link\":\"/structeosio_1_1detail_1_1convert_3_01const_01char_5_4.md\",\"title\":\"Struct convert< const char * >\"},{\"link\":\"/structeosio_1_1detail_1_1get__nth.md\",\"title\":\"Struct get nth\"},{\"link\":\"/structeosio_1_1detail_1_1get__nth__impl.md\",\"title\":\"Struct get nth impl\"},{\"link\":\"/structeosio_1_1detail_1_1get__nth__impl_3_n_n_arg_args_8_8_8_4.md\",\"title\":\"Struct get nth impl< n, n, arg, args... >\"},{\"link\":\"/structeosio_1_1detail_1_1is__same.md\",\"title\":\"Struct is same\"},{\"link\":\"/structeosio_1_1detail_1_1is__same_3_t_01bool_4.md\",\"title\":\"Struct is same< t, bool >\"},{\"link\":\"/structeosio_1_1detail_1_1is__same_3_01bool_u_4.md\",\"title\":\"Struct is same< bool, u >\"},{\"link\":\"/structeosio_1_1detail_1_1to__const__char__arr.md\",\"title\":\"Struct to const char arr\"},{\"link\":\"/structeosio_1_1detail_1_1unwrap.md\",\"title\":\"Struct unwrap\"},{\"link\":\"/structeosio_1_1detail_1_1unwrap_3_01ignore_3_t_4_4.md\",\"title\":\"Struct unwrap< ignore< t > >\"}],\"link\":\"/namespaceeosio_1_1detail.md\",\"title\":\"Namespace detail\"},{\"link\":\"/structeosio_1_1extended__asset.md\",\"title\":\"Struct extended asset\"},{\"link\":\"/classeosio_1_1extended__symbol.md\",\"title\":\"Class extended symbol\"},{\"sub\":[{\"link\":\"/structeosio_1_1fixed__bytes_1_1bool__pack.md\",\"title\":\"Struct bool pack\"}],\"link\":\"/classeosio_1_1fixed__bytes.md\",\"title\":\"Class fixed bytes\"},{\"link\":\"/structeosio_1_1ignore.md\",\"title\":\"Struct ignore\"},{\"link\":\"/structeosio_1_1ignore__wrapper.md\",\"title\":\"Struct ignore wrapper\"},{\"sub\":[{\"link\":\"/structeosio_1_1impl_1_1concat__t.md\",\"title\":\"Struct concat t\"},{\"link\":\"/structeosio_1_1impl_1_1str__t.md\",\"title\":\"Struct str t\"}],\"link\":\"/namespaceeosio_1_1impl.md\",\"title\":\"Namespace impl\"},{\"link\":\"/structeosio_1_1indexed__by.md\",\"title\":\"Struct indexed by\"},{\"link\":\"/structeosio_1_1inline__dispatcher.md\",\"title\":\"Struct inline dispatcher\"},{\"link\":\"/structeosio_1_1inline__dispatcher_3_01void_t_1_1_5_args_8_8_8_name_4.md\",\"title\":\"Struct inline dispatcher< void(t::*)(args...), name >\"},{\"link\":\"/namespaceeosio_1_1internal__use__do__not__use.md\",\"title\":\"Namespace internal use do not use\"},{\"link\":\"/classeosio_1_1iostream.md\",\"title\":\"Class iostream\"},{\"link\":\"/classeosio_1_1microseconds.md\",\"title\":\"Class microseconds\"},{\"sub\":[{\"link\":\"/structeosio_1_1multi__index_1_1const__iterator.md\",\"title\":\"Struct const iterator\"},{\"sub\":[{\"link\":\"/structeosio_1_1multi__index_1_1index_1_1const__iterator.md\",\"title\":\"Struct const iterator\"}],\"link\":\"/structeosio_1_1multi__index_1_1index.md\",\"title\":\"Struct index\"},{\"link\":\"/structeosio_1_1multi__index_1_1intc.md\",\"title\":\"Struct intc\"},{\"link\":\"/structeosio_1_1multi__index_1_1item.md\",\"title\":\"Struct item\"},{\"link\":\"/structeosio_1_1multi__index_1_1item__ptr.md\",\"title\":\"Struct item ptr\"}],\"link\":\"/classeosio_1_1multi__index.md\",\"title\":\"Class multi index\"},{\"link\":\"/structeosio_1_1name.md\",\"title\":\"Struct name\"},{\"link\":\"/structeosio_1_1onerror.md\",\"title\":\"Struct onerror\"},{\"link\":\"/structeosio_1_1overloaded.md\",\"title\":\"Struct overloaded\"},{\"link\":\"/structeosio_1_1permission__level.md\",\"title\":\"Struct permission level\"},{\"link\":\"/structeosio_1_1producer__key.md\",\"title\":\"Struct producer key\"},{\"link\":\"/structeosio_1_1producer__schedule.md\",\"title\":\"Struct producer schedule\"},{\"link\":\"/structeosio_1_1public__key.md\",\"title\":\"Struct public key\"},{\"link\":\"/classeosio_1_1rope.md\",\"title\":\"Class rope\"},{\"link\":\"/structeosio_1_1signature.md\",\"title\":\"Struct signature\"},{\"link\":\"/structeosio_1_1signed__int.md\",\"title\":\"Struct signed int\"},{\"sub\":[{\"link\":\"/structeosio_1_1singleton_1_1row.md\",\"title\":\"Struct row\"}],\"link\":\"/classeosio_1_1singleton.md\",\"title\":\"Class singleton\"},{\"link\":\"/classeosio_1_1symbol.md\",\"title\":\"Class symbol\"},{\"link\":\"/classeosio_1_1symbol__code.md\",\"title\":\"Class symbol code\"},{\"link\":\"/classeosio_1_1time__point.md\",\"title\":\"Class time point\"},{\"link\":\"/classeosio_1_1time__point__sec.md\",\"title\":\"Class time point sec\"},{\"link\":\"/classeosio_1_1transaction.md\",\"title\":\"Class transaction\"},{\"link\":\"/classeosio_1_1transaction__header.md\",\"title\":\"Class transaction header\"},{\"link\":\"/structeosio_1_1unsigned__int.md\",\"title\":\"Struct unsigned int\"},{\"link\":\"/structeosio_1_1variant__action__wrapper.md\",\"title\":\"Struct variant action wrapper\"}],\"link\":\"/namespaceeosio.md\",\"title\":\"Namespace eosio\"},{\"link\":\"/structsigned__int.md\",\"title\":\"Struct signed int\"},{\"link\":\"/structunsigned__int.md\",\"title\":\"Struct unsigned int\"}],\"link\":\"/annotated.md\",\"title\":\"Class list\"},{\"sub\":[{\"sub\":[{\"sub\":[{\"link\":\"/action_8hpp.md\",\"title\":\"Action.hpp\"},{\"link\":\"/asset_8hpp.md\",\"title\":\"Asset.hpp\"},{\"link\":\"/binary__extension_8hpp.md\",\"title\":\"Binary extension.hpp\"},{\"link\":\"/contract_8hpp.md\",\"title\":\"Contract.hpp\"},{\"link\":\"/crypto_8hpp.md\",\"title\":\"Crypto.hpp\"},{\"link\":\"/datastream_8hpp.md\",\"title\":\"Datastream.hpp\"},{\"link\":\"/dispatcher_8hpp.md\",\"title\":\"Dispatcher.hpp\"},{\"link\":\"/eosio_8hpp.md\",\"title\":\"Eosio.hpp\"},{\"link\":\"/fixed__bytes_8hpp.md\",\"title\":\"Fixed bytes.hpp\"},{\"link\":\"/ignore_8hpp.md\",\"title\":\"Ignore.hpp\"},{\"link\":\"/multi__index_8hpp.md\",\"title\":\"Multi index.hpp\"},{\"link\":\"/name_8hpp.md\",\"title\":\"Name.hpp\"},{\"link\":\"/permission_8hpp.md\",\"title\":\"Permission.hpp\"},{\"link\":\"/print_8hpp.md\",\"title\":\"Print.hpp\"},{\"link\":\"/privileged_8hpp.md\",\"title\":\"Privileged.hpp\"},{\"link\":\"/producer__schedule_8hpp.md\",\"title\":\"Producer schedule.hpp\"},{\"link\":\"/public__key_8hpp.md\",\"title\":\"Public key.hpp\"},{\"link\":\"/serialize_8hpp.md\",\"title\":\"Serialize.hpp\"},{\"link\":\"/singleton_8hpp.md\",\"title\":\"Singleton.hpp\"},{\"link\":\"/stdlib_8hpp.md\",\"title\":\"Stdlib.hpp\"},{\"link\":\"/symbol_8hpp.md\",\"title\":\"Symbol.hpp\"},{\"link\":\"/system_8hpp.md\",\"title\":\"System.hpp\"},{\"link\":\"/time_8hpp.md\",\"title\":\"Time.hpp\"},{\"link\":\"/transaction_8hpp.md\",\"title\":\"Transaction.hpp\"},{\"link\":\"/varint_8hpp.md\",\"title\":\"Varint.hpp\"},{\"sub\":[{\"sub\":[{\"link\":\"/contracts_2eosio_2action_8hpp.md\",\"title\":\"Action.hpp\"},{\"link\":\"/contracts_2eosio_2contract_8hpp.md\",\"title\":\"Contract.hpp\"},{\"link\":\"/contracts_2eosio_2dispatcher_8hpp.md\",\"title\":\"Dispatcher.hpp\"},{\"link\":\"/contracts_2eosio_2eosio_8hpp.md\",\"title\":\"Eosio.hpp\"},{\"link\":\"/contracts_2eosio_2multi__index_8hpp.md\",\"title\":\"Multi index.hpp\"},{\"link\":\"/contracts_2eosio_2permission_8hpp.md\",\"title\":\"Permission.hpp\"},{\"link\":\"/contracts_2eosio_2privileged_8hpp.md\",\"title\":\"Privileged.hpp\"},{\"link\":\"/contracts_2eosio_2producer__schedule_8hpp.md\",\"title\":\"Producer schedule.hpp\"},{\"link\":\"/contracts_2eosio_2singleton_8hpp.md\",\"title\":\"Singleton.hpp\"},{\"link\":\"/contracts_2eosio_2system_8hpp.md\",\"title\":\"System.hpp\"},{\"link\":\"/contracts_2eosio_2transaction_8hpp.md\",\"title\":\"Transaction.hpp\"}],\"link\":\"/dir_e6eaa0c1a89a74634a56cba5556371ea.md\",\"title\":\"Eosio/\"}],\"link\":\"/dir_7e917b7566708c24627b3b828f138985.md\",\"title\":\"Contracts/\"},{\"sub\":[{\"sub\":[{\"link\":\"/core_2eosio_2asset_8hpp.md\",\"title\":\"Asset.hpp\"},{\"link\":\"/core_2eosio_2binary__extension_8hpp.md\",\"title\":\"Binary extension.hpp\"},{\"link\":\"/check_8hpp.md\",\"title\":\"Check.hpp\"},{\"link\":\"/core_2eosio_2crypto_8hpp.md\",\"title\":\"Crypto.hpp\"},{\"link\":\"/core_2eosio_2datastream_8hpp.md\",\"title\":\"Datastream.hpp\"},{\"link\":\"/core_2eosio_2fixed__bytes_8hpp.md\",\"title\":\"Fixed bytes.hpp\"},{\"link\":\"/core_2eosio_2ignore_8hpp.md\",\"title\":\"Ignore.hpp\"},{\"link\":\"/core_2eosio_2name_8hpp.md\",\"title\":\"Name.hpp\"},{\"link\":\"/core_2eosio_2print_8hpp.md\",\"title\":\"Print.hpp\"},{\"link\":\"/rope_8hpp.md\",\"title\":\"Rope.hpp\"},{\"link\":\"/core_2eosio_2serialize_8hpp.md\",\"title\":\"Serialize.hpp\"},{\"link\":\"/core_2eosio_2symbol_8hpp.md\",\"title\":\"Symbol.hpp\"},{\"link\":\"/core_2eosio_2time_8hpp.md\",\"title\":\"Time.hpp\"},{\"link\":\"/core_2eosio_2varint_8hpp.md\",\"title\":\"Varint.hpp\"}],\"link\":\"/dir_6973a5be5f0104fdfb8b76a272d58cb0.md\",\"title\":\"Eosio/\"}],\"link\":\"/dir_850c7dbae88cf75e5ded2d8d64345058.md\",\"title\":\"Core/\"}],\"link\":\"/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8.md\",\"title\":\"Eosiolib/\"}],\"link\":\"/dir_bc0718b08fb2015b8e59c47b2805f60c.md\",\"title\":\"Libraries/\"}],\"link\":\"/files.md\",\"title\":\"Files\"}]}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/latest/group__multiindex"}}}