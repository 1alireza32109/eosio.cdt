{"componentChunkName":"component---src-page-templates-content-page-jsx","path":"/v1.7/namespaceeosio","result":{"data":{"site":{"pathPrefix":"/eosio.cdt"},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/v1.7/action_8hpp"}},{"fields":{"slug":"/v1.7/asset_8hpp"}},{"fields":{"slug":"/v1.7/binary__extension_8hpp"}},{"fields":{"slug":"/v1.7/annotated"}},{"fields":{"slug":"/v1.7/check_8hpp"}},{"fields":{"slug":"/v1.7/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.7/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.7/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.7/classeosio_1_1contract"}},{"fields":{"slug":"/v1.7/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.7/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.7/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.7/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.7/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.7/classeosio_1_1string"}},{"fields":{"slug":"/v1.7/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.7/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.7/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.7/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.7/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.7/classeosio_1_1rope"}},{"fields":{"slug":"/v1.7/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.7/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.7/classes"}},{"fields":{"slug":"/v1.7/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.7/contract_8hpp"}},{"fields":{"slug":"/v1.7/crypto_8hpp"}},{"fields":{"slug":"/v1.7/dir_6973a5be5f0104fdfb8b76a272d58cb0"}},{"fields":{"slug":"/v1.7/dir_7e917b7566708c24627b3b828f138985"}},{"fields":{"slug":"/v1.7/datastream_8hpp"}},{"fields":{"slug":"/v1.7/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.7/dispatcher_8hpp"}},{"fields":{"slug":"/v1.7/dir_850c7dbae88cf75e5ded2d8d64345058"}},{"fields":{"slug":"/v1.7/dir_e6eaa0c1a89a74634a56cba5556371ea"}},{"fields":{"slug":"/v1.7/enumerations"}},{"fields":{"slug":"/v1.7/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.7/eosio_8hpp"}},{"fields":{"slug":"/v1.7/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.7/group__asset"}},{"fields":{"slug":"/v1.7/group__binary__extension"}},{"fields":{"slug":"/v1.7/group__action"}},{"fields":{"slug":"/v1.7/files"}},{"fields":{"slug":"/v1.7/group__contract"}},{"fields":{"slug":"/v1.7/group__console"}},{"fields":{"slug":"/v1.7/group__contracts"}},{"fields":{"slug":"/v1.7/group__core"}},{"fields":{"slug":"/v1.7/group__datastream"}},{"fields":{"slug":"/v1.7/group__dispatcher"}},{"fields":{"slug":"/v1.7/group__fixed__bytes"}},{"fields":{"slug":"/v1.7/group__ignore"}},{"fields":{"slug":"/v1.7/group__name"}},{"fields":{"slug":"/v1.7/group__permission"}},{"fields":{"slug":"/v1.7/functions"}},{"fields":{"slug":"/v1.7/group__privileged"}},{"fields":{"slug":"/v1.7/group__producer__key"}},{"fields":{"slug":"/v1.7/group__symbol"}},{"fields":{"slug":"/v1.7/group__singleton"}},{"fields":{"slug":"/v1.7/group__producer__schedule"}},{"fields":{"slug":"/v1.7/group__producer__authority"}},{"fields":{"slug":"/v1.7/group__serialize"}},{"fields":{"slug":"/v1.7/group__system"}},{"fields":{"slug":"/v1.7/group__time"}},{"fields":{"slug":"/v1.7/group__transaction"}},{"fields":{"slug":"/v1.7/group__multiindex"}},{"fields":{"slug":"/v1.7/ignore_8hpp"}},{"fields":{"slug":"/v1.7/group__types"}},{"fields":{"slug":"/v1.7/group__varint"}},{"fields":{"slug":"/v1.7/index"}},{"fields":{"slug":"/v1.7/installation"}},{"fields":{"slug":"/v1.7/name_8hpp"}},{"fields":{"slug":"/v1.7/multi__index_8hpp"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.7/modules"}},{"fields":{"slug":"/v1.7/pages"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1impl"}},{"fields":{"slug":"/v1.7/powers_8hpp"}},{"fields":{"slug":"/v1.7/permission_8hpp"}},{"fields":{"slug":"/v1.7/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.7/namespaceeosio_1_1internal__use__do__not__use"}},{"fields":{"slug":"/v1.7/privileged_8hpp"}},{"fields":{"slug":"/v1.7/rope_8hpp"}},{"fields":{"slug":"/v1.7/singleton_8hpp"}},{"fields":{"slug":"/v1.7/print_8hpp"}},{"fields":{"slug":"/v1.7/serialize_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.7/string_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1action"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.7/structeosio_1_1block__signing__authority__v0"}},{"fields":{"slug":"/v1.7/structeosio_1_1asset"}},{"fields":{"slug":"/v1.7/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.7/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1largest__power__helper_3_01_t_00_01_base_00_01_exponent_00_01_value_00_01true_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1largest__power__helper"}},{"fields":{"slug":"/v1.7/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.7/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.7/structeosio_1_1detail_1_1largest__power"}},{"fields":{"slug":"/v1.7/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.7/structeosio_1_1impl_1_1str__t"}},{"fields":{"slug":"/v1.7/structeosio_1_1impl_1_1concat__t"}},{"fields":{"slug":"/v1.7/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.7/structeosio_1_1key__weight"}},{"fields":{"slug":"/v1.7/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.7/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.7/structeosio_1_1name"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.7/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.7/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.7/structeosio_1_1overloaded"}},{"fields":{"slug":"/v1.7/structeosio_1_1producer__authority"}},{"fields":{"slug":"/v1.7/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.7/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.7/structeosio_1_1signed__int"}},{"fields":{"slug":"/v1.7/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.7/structeosio_1_1unsigned__int"}},{"fields":{"slug":"/v1.7/symbol_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.7/transaction_8hpp"}},{"fields":{"slug":"/v1.7/system_8hpp"}},{"fields":{"slug":"/v1.7/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.7/time_8hpp"}},{"fields":{"slug":"/v1.7/varint_8hpp"}},{"fields":{"slug":"/v1.7/troubleshooting"}},{"fields":{"slug":"/v1.4/action_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.4/binary__extension_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.4/annotated"}},{"fields":{"slug":"/v1.4/classeosio_1_1contract"}},{"fields":{"slug":"/v1.4/classeosio_1_1fixed__key"}},{"fields":{"slug":"/v1.4/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.4/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.4/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.4/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.4/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.4/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.7/variables"}},{"fields":{"slug":"/v1.4/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.4/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.4/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.4/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.4/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.4/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.4/crypto_8hpp"}},{"fields":{"slug":"/v1.4/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.4/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.4/asset_8hpp"}},{"fields":{"slug":"/v1.4/classes"}},{"fields":{"slug":"/v1.4/contract_8hpp"}},{"fields":{"slug":"/v1.4/datastream_8hpp"}},{"fields":{"slug":"/v1.4/files"}},{"fields":{"slug":"/v1.4/enumerations"}},{"fields":{"slug":"/v1.4/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.4/eosio_8hpp"}},{"fields":{"slug":"/v1.4/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.4/fixed__key_8hpp"}},{"fields":{"slug":"/v1.4/fixedpoint_8hpp"}},{"fields":{"slug":"/v1.4/group__actioncppapi"}},{"fields":{"slug":"/v1.4/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.4/group__assetapi"}},{"fields":{"slug":"/v1.4/dispatcher_8hpp"}},{"fields":{"slug":"/v1.4/group__assetcppapi"}},{"fields":{"slug":"/v1.4/functions"}},{"fields":{"slug":"/v1.4/group__contracttype"}},{"fields":{"slug":"/v1.4/group__binary__extension"}},{"fields":{"slug":"/v1.4/group__consolecppapi"}},{"fields":{"slug":"/v1.4/group__cryptoapi"}},{"fields":{"slug":"/v1.4/group__fixed__bytes"}},{"fields":{"slug":"/v1.4/group__cryptocppapi"}},{"fields":{"slug":"/v1.4/group__dispatchercpp"}},{"fields":{"slug":"/v1.4/group__dispatcher"}},{"fields":{"slug":"/v1.4/group__fixedpoint"}},{"fields":{"slug":"/v1.4/group__fixed__key"}},{"fields":{"slug":"/v1.4/group__privilegedcppapi"}},{"fields":{"slug":"/v1.4/group__producertype"}},{"fields":{"slug":"/v1.4/group__multiindex"}},{"fields":{"slug":"/v1.4/group__datastream"}},{"fields":{"slug":"/v1.4/group__serialize"}},{"fields":{"slug":"/v1.4/group__publickeytype"}},{"fields":{"slug":"/v1.4/group__signaturetype"}},{"fields":{"slug":"/v1.4/group__symbolcppapi"}},{"fields":{"slug":"/v1.4/group__symbolapi"}},{"fields":{"slug":"/v1.4/group__transactioncppapi"}},{"fields":{"slug":"/v1.4/group__serializecpp"}},{"fields":{"slug":"/v1.4/ignore_8hpp"}},{"fields":{"slug":"/v1.4/group__singleton"}},{"fields":{"slug":"/v1.4/name_8hpp"}},{"fields":{"slug":"/v1.4/group__varint"}},{"fields":{"slug":"/v1.4/modules"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.4/multi__index_8hpp"}},{"fields":{"slug":"/v1.4/print_8hpp"}},{"fields":{"slug":"/v1.4/pages"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.4/permission_8hpp"}},{"fields":{"slug":"/v1.4/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.4/index"}},{"fields":{"slug":"/v1.4/privileged_8hpp"}},{"fields":{"slug":"/v1.4/public__key_8hpp"}},{"fields":{"slug":"/v1.4/reflect_8hpp"}},{"fields":{"slug":"/v1.4/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.4/serialize_8hpp"}},{"fields":{"slug":"/v1.4/struct_stores"}},{"fields":{"slug":"/v1.4/stdlib_8hpp"}},{"fields":{"slug":"/v1.4/struct_extended"}},{"fields":{"slug":"/v1.4/singleton_8hpp"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1action"}},{"fields":{"slug":"/v1.4/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/v1.4/structeosio_1_1asset"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/v1.4/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.4/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point128"}},{"fields":{"slug":"/v1.4/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point32"}},{"fields":{"slug":"/v1.4/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.4/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.4/structeosio_1_1fixed__point64"}},{"fields":{"slug":"/v1.4/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.4/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.4/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.4/structeosio_1_1name"}},{"fields":{"slug":"/v1.4/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.4/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.4/structeosio_1_1public__key"}},{"fields":{"slug":"/v1.4/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.4/structeosio_1_1reflector"}},{"fields":{"slug":"/v1.4/structsigned__int"}},{"fields":{"slug":"/v1.4/structeosio_1_1signature"}},{"fields":{"slug":"/v1.4/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.4/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.4/time_8hpp"}},{"fields":{"slug":"/v1.4/symbol_8hpp"}},{"fields":{"slug":"/v1.4/transaction_8hpp"}},{"fields":{"slug":"/v1.4/varint_8hpp"}},{"fields":{"slug":"/v1.4/variables"}},{"fields":{"slug":"/v1.4/structunsigned__int"}},{"fields":{"slug":"/v1.5/action_8hpp"}},{"fields":{"slug":"/v1.5/binary__extension_8hpp"}},{"fields":{"slug":"/v1.5/asset_8hpp"}},{"fields":{"slug":"/v1.5/class_stores"}},{"fields":{"slug":"/v1.5/classeosio_1_1contract"}},{"fields":{"slug":"/v1.5/annotated"}},{"fields":{"slug":"/v1.5/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/v1.5/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/v1.5/classeosio_1_1datastream"}},{"fields":{"slug":"/v1.5/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/v1.5/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/v1.5/classeosio_1_1fixed__key"}},{"fields":{"slug":"/v1.5/classeosio_1_1binary__extension"}},{"fields":{"slug":"/v1.5/classeosio_1_1microseconds"}},{"fields":{"slug":"/v1.5/classeosio_1_1singleton"}},{"fields":{"slug":"/v1.5/classeosio_1_1symbol"}},{"fields":{"slug":"/v1.5/classeosio_1_1symbol__code"}},{"fields":{"slug":"/v1.5/classeosio_1_1iostream"}},{"fields":{"slug":"/v1.5/classeosio_1_1time__point"}},{"fields":{"slug":"/v1.5/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/v1.5/classeosio_1_1transaction"}},{"fields":{"slug":"/v1.5/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.5/classeosio_1_1transaction__header"}},{"fields":{"slug":"/v1.5/datastream_8hpp"}},{"fields":{"slug":"/v1.5/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/v1.5/classes"}},{"fields":{"slug":"/v1.5/dispatcher_8hpp"}},{"fields":{"slug":"/v1.5/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/v1.5/eosio_8hpp"}},{"fields":{"slug":"/v1.5/files"}},{"fields":{"slug":"/v1.5/crypto_8hpp"}},{"fields":{"slug":"/v1.5/enumerations"}},{"fields":{"slug":"/v1.5/contract_8hpp"}},{"fields":{"slug":"/v1.5/fixed__bytes_8hpp"}},{"fields":{"slug":"/v1.5/fixed__key_8hpp"}},{"fields":{"slug":"/v1.5/fixedpoint_8hpp"}},{"fields":{"slug":"/v1.5/group__asset"}},{"fields":{"slug":"/v1.5/group__action"}},{"fields":{"slug":"/v1.5/group__c__api"}},{"fields":{"slug":"/v1.5/group__console"}},{"fields":{"slug":"/v1.5/group__binary__extension"}},{"fields":{"slug":"/v1.5/group__contract"}},{"fields":{"slug":"/v1.5/group__cpp__api"}},{"fields":{"slug":"/v1.5/group__crypto"}},{"fields":{"slug":"/v1.5/functions"}},{"fields":{"slug":"/v1.5/group__fixed__bytes"}},{"fields":{"slug":"/v1.5/group__datastream"}},{"fields":{"slug":"/v1.5/group__multiindex"}},{"fields":{"slug":"/v1.5/group__dispatcher"}},{"fields":{"slug":"/v1.5/group__fixed__key"}},{"fields":{"slug":"/v1.5/group__name"}},{"fields":{"slug":"/v1.5/group__privileged"}},{"fields":{"slug":"/v1.5/group__fixed__point"}},{"fields":{"slug":"/v1.5/group__publickeytype"}},{"fields":{"slug":"/v1.5/group__producer__schedule"}},{"fields":{"slug":"/v1.5/group__signature"}},{"fields":{"slug":"/v1.5/group__serialize"}},{"fields":{"slug":"/v1.5/group__singleton"}},{"fields":{"slug":"/v1.5/group__transaction"}},{"fields":{"slug":"/v1.5/group__system"}},{"fields":{"slug":"/v1.5/group__time"}},{"fields":{"slug":"/v1.5/group__transactioncppapi"}},{"fields":{"slug":"/v1.5/group__types"}},{"fields":{"slug":"/v1.5/group__symbol"}},{"fields":{"slug":"/v1.5/ignore_8hpp"}},{"fields":{"slug":"/v1.5/group__varint"}},{"fields":{"slug":"/v1.5/index"}},{"fields":{"slug":"/v1.5/name_8hpp"}},{"fields":{"slug":"/v1.5/multi__index_8hpp"}},{"fields":{"slug":"/v1.5/modules"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1detail"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/v1.5/pages"}},{"fields":{"slug":"/v1.5/permission_8hpp"}},{"fields":{"slug":"/v1.5/print_8hpp"}},{"fields":{"slug":"/v1.5/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/v1.5/privileged_8hpp"}},{"fields":{"slug":"/v1.5/serialize_8hpp"}},{"fields":{"slug":"/v1.5/producer__schedule_8hpp"}},{"fields":{"slug":"/v1.5/public__key_8hpp"}},{"fields":{"slug":"/v1.5/singleton_8hpp"}},{"fields":{"slug":"/v1.5/stdlib_8hpp"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/v1.5/struct_extended"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1key256_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/v1.5/structeosio_1_1action"}},{"fields":{"slug":"/v1.5/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/v1.5/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/v1.5/structeosio_1_1asset"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1extended__asset"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/v1.5/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/v1.5/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point128"}},{"fields":{"slug":"/v1.5/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point64"}},{"fields":{"slug":"/v1.5/structeosio_1_1ignore"}},{"fields":{"slug":"/v1.5/structeosio_1_1indexed__by"}},{"fields":{"slug":"/v1.5/structeosio_1_1fixed__point32"}},{"fields":{"slug":"/v1.5/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/v1.5/structeosio_1_1name"}},{"fields":{"slug":"/v1.5/structeosio_1_1onerror"}},{"fields":{"slug":"/v1.5/structeosio_1_1permission__level"}},{"fields":{"slug":"/v1.5/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/v1.5/structeosio_1_1producer__key"}},{"fields":{"slug":"/v1.5/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/v1.5/structeosio_1_1signature"}},{"fields":{"slug":"/v1.5/structeosio_1_1public__key"}},{"fields":{"slug":"/v1.5/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/v1.5/structsigned__int"}},{"fields":{"slug":"/v1.5/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/v1.5/symbol_8hpp"}},{"fields":{"slug":"/v1.5/system_8hpp"}},{"fields":{"slug":"/v1.5/time_8hpp"}},{"fields":{"slug":"/v1.5/varint_8hpp"}},{"fields":{"slug":"/v1.5/structunsigned__int"}},{"fields":{"slug":"/v1.5/variables"}},{"fields":{"slug":"/v1.5/transaction_8hpp"}},{"fields":{"slug":"/latest/check_8hpp"}},{"fields":{"slug":"/latest/class_stores"}},{"fields":{"slug":"/latest/annotated"}},{"fields":{"slug":"/latest/classeosio_1_1binary__extension"}},{"fields":{"slug":"/latest/classeosio_1_1datastream"}},{"fields":{"slug":"/latest/classeosio_1_1block__timestamp"}},{"fields":{"slug":"/latest/classeosio_1_1contract"}},{"fields":{"slug":"/latest/classeosio_1_1iostream"}},{"fields":{"slug":"/latest/classeosio_1_1extended__symbol"}},{"fields":{"slug":"/latest/classeosio_1_1datastream_3_01size__t_01_4"}},{"fields":{"slug":"/latest/classeosio_1_1microseconds"}},{"fields":{"slug":"/latest/classeosio_1_1rope"}},{"fields":{"slug":"/latest/classeosio_1_1fixed__bytes"}},{"fields":{"slug":"/latest/classeosio_1_1singleton"}},{"fields":{"slug":"/latest/classeosio_1_1symbol"}},{"fields":{"slug":"/latest/classes"}},{"fields":{"slug":"/latest/classeosio_1_1time__point"}},{"fields":{"slug":"/latest/classeosio_1_1time__point__sec"}},{"fields":{"slug":"/latest/classeosio_1_1symbol__code"}},{"fields":{"slug":"/latest/classeosio_1_1transaction__header"}},{"fields":{"slug":"/latest/contracts_2eosio_2action_8hpp"}},{"fields":{"slug":"/latest/classeosio_1_1transaction"}},{"fields":{"slug":"/latest/core_2eosio_2binary__extension_8hpp"}},{"fields":{"slug":"/latest/core_2eosio_2asset_8hpp"}},{"fields":{"slug":"/latest/contracts_2eosio_2contract_8hpp"}},{"fields":{"slug":"/latest/dir_6973a5be5f0104fdfb8b76a272d58cb0"}},{"fields":{"slug":"/latest/datastream_8hpp"}},{"fields":{"slug":"/latest/dir_7e917b7566708c24627b3b828f138985"}},{"fields":{"slug":"/latest/crypto_8hpp"}},{"fields":{"slug":"/latest/dir_850c7dbae88cf75e5ded2d8d64345058"}},{"fields":{"slug":"/latest/dir_bc0718b08fb2015b8e59c47b2805f60c"}},{"fields":{"slug":"/latest/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8"}},{"fields":{"slug":"/latest/dir_e6eaa0c1a89a74634a56cba5556371ea"}},{"fields":{"slug":"/latest/enumerations"}},{"fields":{"slug":"/latest/eosio_8hpp"}},{"fields":{"slug":"/latest/dispatcher_8hpp"}},{"fields":{"slug":"/latest/files"}},{"fields":{"slug":"/latest/group__contract"}},{"fields":{"slug":"/latest/fixed__bytes_8hpp"}},{"fields":{"slug":"/latest/group__binary__extension"}},{"fields":{"slug":"/latest/group__core"}},{"fields":{"slug":"/latest/group__contracts"}},{"fields":{"slug":"/latest/group__dispatcher"}},{"fields":{"slug":"/latest/group__console"}},{"fields":{"slug":"/latest/group__datastream"}},{"fields":{"slug":"/latest/group__crypto"}},{"fields":{"slug":"/latest/group__fixed__bytes"}},{"fields":{"slug":"/latest/group__action"}},{"fields":{"slug":"/latest/group__name"}},{"fields":{"slug":"/latest/group__ignore"}},{"fields":{"slug":"/latest/group__producer__schedule"}},{"fields":{"slug":"/latest/group__asset"}},{"fields":{"slug":"/latest/group__privileged"}},{"fields":{"slug":"/latest/group__producer__key"}},{"fields":{"slug":"/latest/group__multi__index"}},{"fields":{"slug":"/latest/group__public__key"}},{"fields":{"slug":"/latest/group__signature"}},{"fields":{"slug":"/latest/group__permission"}},{"fields":{"slug":"/latest/group__serialize"}},{"fields":{"slug":"/latest/group__symbol"}},{"fields":{"slug":"/latest/group__singleton"}},{"fields":{"slug":"/latest/group__types"}},{"fields":{"slug":"/latest/group__system"}},{"fields":{"slug":"/latest/group__transaction"}},{"fields":{"slug":"/latest/group__time"}},{"fields":{"slug":"/latest/group__varint"}},{"fields":{"slug":"/latest/functions"}},{"fields":{"slug":"/latest/ignore_8hpp"}},{"fields":{"slug":"/latest/index"}},{"fields":{"slug":"/latest/name_8hpp"}},{"fields":{"slug":"/latest/group__multiindex"}},{"fields":{"slug":"/latest/namespaceeosio_1_1__multi__index__detail"}},{"fields":{"slug":"/latest/namespaceeosio_1_1__datastream__detail"}},{"fields":{"slug":"/latest/modules"}},{"fields":{"slug":"/latest/namespaceeosio_1_1detail"}},{"fields":{"slug":"/latest/pages"}},{"fields":{"slug":"/latest/namespaceeosio_1_1impl"}},{"fields":{"slug":"/latest/print_8hpp"}},{"fields":{"slug":"/latest/multi__index_8hpp"}},{"fields":{"slug":"/latest/namespaceeosio_1_1internal__use__do__not__use"}},{"fields":{"slug":"/latest/privileged_8hpp"}},{"fields":{"slug":"/latest/producer__schedule_8hpp"}},{"fields":{"slug":"/latest/rope_8hpp"}},{"fields":{"slug":"/latest/permission_8hpp"}},{"fields":{"slug":"/latest/public__key_8hpp"}},{"fields":{"slug":"/latest/stdlib_8hpp"}},{"fields":{"slug":"/latest/singleton_8hpp"}},{"fields":{"slug":"/latest/serialize_8hpp"}},{"fields":{"slug":"/latest/struct_extended"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint128__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint64__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_0132_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint128__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint64__t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1action"}},{"fields":{"slug":"/latest/structeosio_1_1const__mem__fun"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1check__types"}},{"fields":{"slug":"/latest/structeosio_1_1action__wrapper"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1check__types_3_01_action_00_01_i_00_01_t_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert_3_01const_01char_01_5_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert"}},{"fields":{"slug":"/latest/structeosio_1_1asset"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth__impl"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth"}},{"fields":{"slug":"/latest/structeosio_1_1blockchain__parameters"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1get__nth__impl_3_01_n_00_01_n_00_01_arg_00_01_args_8_8_8_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1to__const__char__arr"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1convert_3_01char_01_5_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same_3_01_t_00_01bool_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1is__same_3_01bool_00_01_u_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1unwrap"}},{"fields":{"slug":"/latest/structeosio_1_1ignore"}},{"fields":{"slug":"/latest/structeosio_1_1detail_1_1unwrap_3_01ignore_3_01_t_01_4_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1ignore__wrapper"}},{"fields":{"slug":"/latest/structeosio_1_1impl_1_1concat__t"}},{"fields":{"slug":"/latest/structeosio_1_1indexed__by"}},{"fields":{"slug":"/latest/structeosio_1_1inline__dispatcher"}},{"fields":{"slug":"/latest/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1const__iterator"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1index"}},{"fields":{"slug":"/latest/structeosio_1_1extended__asset"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1intc"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1item"}},{"fields":{"slug":"/latest/structeosio_1_1fixed__bytes_1_1bool__pack"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1item__ptr"}},{"fields":{"slug":"/latest/structeosio_1_1overloaded"}},{"fields":{"slug":"/latest/structeosio_1_1onerror"}},{"fields":{"slug":"/latest/structeosio_1_1multi__index_1_1index_1_1const__iterator"}},{"fields":{"slug":"/latest/structeosio_1_1permission__level"}},{"fields":{"slug":"/latest/structeosio_1_1producer__key"}},{"fields":{"slug":"/latest/structeosio_1_1impl_1_1str__t"}},{"fields":{"slug":"/latest/structeosio_1_1producer__schedule"}},{"fields":{"slug":"/latest/structeosio_1_1public__key"}},{"fields":{"slug":"/latest/structeosio_1_1signature"}},{"fields":{"slug":"/latest/structeosio_1_1name"}},{"fields":{"slug":"/latest/structeosio_1_1signed__int"}},{"fields":{"slug":"/latest/structeosio_1_1singleton_1_1row"}},{"fields":{"slug":"/latest/structeosio_1_1unsigned__int"}},{"fields":{"slug":"/latest/structeosio_1_1variant__action__wrapper"}},{"fields":{"slug":"/latest/structsigned__int"}},{"fields":{"slug":"/latest/structunsigned__int"}},{"fields":{"slug":"/latest/symbol_8hpp"}},{"fields":{"slug":"/latest/system_8hpp"}},{"fields":{"slug":"/latest/time_8hpp"}},{"fields":{"slug":"/latest/varint_8hpp"}},{"fields":{"slug":"/latest/transaction_8hpp"}},{"fields":{"slug":"/v1.7/command-reference/eosio-abigen"}},{"fields":{"slug":"/v1.7/tutorials/abi-variants"}},{"fields":{"slug":"/latest/variables"}},{"fields":{"slug":"/v1.7/command-reference/eosio-abidiff"}},{"fields":{"slug":"/v1.7/command-reference/eosio-init"}},{"fields":{"slug":"/v1.7/command-reference/eosio-cpp"}},{"fields":{"slug":"/v1.7/command-reference/eosio-ld"}},{"fields":{"slug":"/v1.7/how-to-guides/how_to_create_and_use_action_wrappers"}},{"fields":{"slug":"/v1.7/upgrading/1.5-to-1.6"}},{"fields":{"slug":"/v1.7/command-reference/eosio-cc"}},{"fields":{"slug":"/v1.7/best-practices/data-design-and-migration"}},{"fields":{"slug":"/v1.7/best-practices/debugging_a_smart_contract"}},{"fields":{"slug":"/v1.7/best-practices/deferred_transactions"}},{"fields":{"slug":"/v1.7/best-practices/error_handling"}},{"fields":{"slug":"/v1.7/tutorials/binary-extension"}},{"fields":{"slug":"/v1.7/best-practices/securing_your_contract"}},{"fields":{"slug":"/v1.7/upgrading/1.2-to-1.3"}},{"fields":{"slug":"/v1.7/best-practices/resource-planning"}},{"fields":{"slug":"/v1.7/best-practices/binary-extension"}},{"fields":{"slug":"/v1.7/best-practices/native-tester-compilation"}},{"fields":{"slug":"/v1.5/tools/eosio-abidiff"}},{"fields":{"slug":"/v1.5/tools/eosio-abigen"}},{"fields":{"slug":"/v1.5/tools/eosio-init"}},{"fields":{"slug":"/v1.5/tools/eosio-cpp"}},{"fields":{"slug":"/v1.5/tools/eosio-ld"}},{"fields":{"slug":"/latest/guides/first-smart-contract"}},{"fields":{"slug":"/latest/guides/cmake"}},{"fields":{"slug":"/latest/guides/generator-attributes"}},{"fields":{"slug":"/v1.5/guides/basic-usage"}},{"fields":{"slug":"/v1.5/guides/first-smart-contract"}},{"fields":{"slug":"/v1.5/guides/abi-generator-attributes"}},{"fields":{"slug":"/latest/guides/native-tester"}},{"fields":{"slug":"/v1.5/guides/cmake"}},{"fields":{"slug":"/v1.5/guides/native-tester"}},{"fields":{"slug":"/latest/tools/eosio-abidiff"}},{"fields":{"slug":"/v1.5/guides/upgrading-from-1.2-to-1.3"}},{"fields":{"slug":"/latest/tools/eosio-cpp"}},{"fields":{"slug":"/latest/tools/eosio-init"}},{"fields":{"slug":"/latest/tools/eosio-abigen"}},{"fields":{"slug":"/latest/tools/eosio-ld"}},{"fields":{"slug":"/v1.7/how-to-guides/authorization/how_to_restrict_access_to_an_action_by_user"}},{"fields":{"slug":"/latest/upgrading/1.2-to-1.3"}},{"fields":{"slug":"/latest/upgrading/1.5-to-1.6"}},{"fields":{"slug":"/v1.7/how-to-guides/compile/compiling-contracts-with-cmake"}},{"fields":{"slug":"/v1.7/how-to-guides/compile/compile-a-contract-via-cli"}},{"fields":{"slug":"/v1.7/how-to-guides/compile/how-to-configure-cmake"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-define-a-secondary-index"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-define-a-primary-index"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-define-a-singleton"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-instantiate-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-modify-data-in-a-multi-index-table"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-iterate-and-retrieve-a-multi_index-table"}},{"fields":{"slug":"/v1.7/best-practices/abi/abi-code-generator-attributes-explained"}},{"fields":{"slug":"/v1.7/how-to-guides/multi-index/how-to-iterate-and-retrieve-a-multi_index-table-based-on-secondary-index"}},{"fields":{"slug":"/v1.7/best-practices/abi/manually_write_an_ABI_file_explained"}},{"fields":{"slug":"/v1.5/namespaceeosio"}},{"fields":{"slug":"/v1.4/namespaceeosio"}},{"fields":{"slug":"/latest/classeosio_1_1multi__index"}},{"fields":{"slug":"/v1.7/namespaceeosio"}},{"fields":{"slug":"/latest/namespaceeosio"}}]},"markdownRemark":{"html":"<h1 id=\"namespace-eosio\">namespace eosio</h1>\n<p><a href=\"/eosio.cdt/v1.7/namespaceeosio/annotated\"><strong>Class List</strong></a> <strong>></strong> <a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio\"><strong>eosio</strong></a></p>\n<h2 id=\"classes\">Classes</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1action\"><strong>action</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1action__wrapper\"><strong>action_wrapper</strong></a><br>Used to wrap an a particular action to simplify the process of other contracts sending inline actions to \"wrapped\" action. Example:</td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1asset\"><strong>asset</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1binary__extension\"><strong>binary_extension</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1block__signing__authority__v0\"><strong>block_signing_authority_v0</strong></a><br>weighted threshold multi-sig authority</td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1block__timestamp\"><strong>block_timestamp</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1blockchain__parameters\"><strong>blockchain_parameters</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1const__mem__fun\"><strong>const_mem_fun</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1contract\"><strong>contract</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\"><strong>datastream</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream_3_01size__t_01_4\"><strong>datastream&#x3C; size_t ></strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1extended__asset\"><strong>extended_asset</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1extended__symbol\"><strong>extended_symbol</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1fixed__bytes\"><strong>fixed_bytes</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1ignore\"><strong>ignore</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1ignore__wrapper\"><strong>ignore_wrapper</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1indexed__by\"><strong>indexed_by</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1inline__dispatcher\"><strong>inline_dispatcher</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1inline__dispatcher_3_01void_07_t_1_1_5_08_07_args_8_8_8_08_00_01_name_01_4\"><strong>inline_dispatcher&#x3C; void(T::*)(Args...), Name ></strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1iostream\"><strong>iostream</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1key__weight\"><strong>key_weight</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\"><strong>microseconds</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1multi__index\"><strong>multi_index</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\"><strong>name</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1onerror\"><strong>onerror</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1overloaded\"><strong>overloaded</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1permission__level\"><strong>permission_level</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1producer__authority\"><strong>producer_authority</strong></a><br>Maps producer with its signing key.</td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1producer__key\"><strong>producer_key</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1producer__schedule\"><strong>producer_schedule</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1rope\"><strong>rope</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1signed__int\"><strong>signed_int</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1singleton\"><strong>singleton</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\"><strong>string</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol\"><strong>symbol</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol__code\"><strong>symbol_code</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\"><strong>time_point</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point__sec\"><strong>time_point_sec</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1transaction\"><strong>transaction</strong></a></td>\n</tr>\n<tr>\n<td>class</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1transaction__header\"><strong>transaction_header</strong></a><br>Contains details about the transaction.</td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1unsigned__int\"><strong>unsigned_int</strong></a></td>\n</tr>\n<tr>\n<td>struct</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1variant__action__wrapper\"><strong>variant_action_wrapper</strong></a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"typedefs\">Typedefs</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>typedef std::variant&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1block__signing__authority__v0\">block_signing_authority_v0</a></strong> ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__producer__authority/#typedef-block_signing_authority\"><strong>block_signing_authority</strong></a></td>\n</tr>\n<tr>\n<td>typedef std::tuple&#x3C; uint16_t, std::vector&#x3C; char > ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#typedef-extension\"><strong>extension</strong></a></td>\n</tr>\n<tr>\n<td>typedef std::vector&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#typedef-extension\">extension</a></strong> ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#typedef-extensions_type\"><strong>extensions_type</strong></a></td>\n</tr>\n<tr>\n<td>typedef <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1block__timestamp\">block_timestamp</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__time/#typedef-block_timestamp_type\"><strong>block_timestamp_type</strong></a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"variables\">Variables</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>static constexpr <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#variable-same_payer\"><strong>same_payer</strong></a></td>\n</tr>\n<tr>\n<td>constexpr auto</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#variable-powers_of_base\"><strong>powers_of_base</strong></a></td>\n</tr>\n<tr>\n<td>static <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1iostream\">iostream</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#variable-cout\"><strong>cout</strong></a></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"functions\">Functions</h2>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>T</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-unpack_action_data\"><strong>unpack_action_data</strong></a> ()</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-require_recipient-12\"><strong>require_recipient</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> notify_account) <br>Add the specified account to set of accounts to be notified.</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-require_recipient-22\"><strong>require_recipient</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> notify_account, accounts... remaining_accounts)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-require_auth-12\"><strong>require_auth</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> n)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\">time_point</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-publication_time\"><strong>publication_time</strong></a> ()</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-current_receiver\"><strong>current_receiver</strong></a> ()</td>\n</tr>\n<tr>\n<td>uint32_t</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-read_action_data\"><strong>read_action_data</strong></a> (void * msg, uint32_t len)</td>\n</tr>\n<tr>\n<td>uint32_t</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-action_data_size\"><strong>action_data_size</strong></a> ()</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-require_auth-22\"><strong>require_auth</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1permission__level\">permission_level</a></strong> &#x26; level)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-has_auth\"><strong>has_auth</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> n)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__action/#function-is_account\"><strong>is_account</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> n)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-dispatch_inline\"><strong>dispatch_inline</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> code, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> act, std::vector&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1permission__level\">permission_level</a></strong> > perms, std::tuple&#x3C; Args... > args)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__dispatcher/#function-dispatch\"><strong>dispatch</strong></a> (uint64_t code, uint64_t act)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__dispatcher/#function-execute_action\"><strong>execute_action</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> self, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> code, void(T::*)(Args...) func)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__permission/#function-check_transaction_authorization\"><strong>check_transaction_authorization</strong></a> (const char * trx_data, uint32_t trx_size, const char * pubkeys_data, uint32_t pubkeys_size, const char * perms_data, uint32_t perms_size)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__permission/#function-check_permission_authorization\"><strong>check_permission_authorization</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> permission, const char * pubkeys_data, uint32_t pubkeys_size, const char * perms_data, uint32_t perms_size, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong> delay)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__permission/#function-check_transaction_authorization\"><strong>check_transaction_authorization</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1transaction\">transaction</a></strong> &#x26; trx, const std::set&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1permission__level\">permission_level</a></strong> > &#x26; provided_permissions, const std::set&#x3C; public_key > &#x26; provided_keys = std::set&#x3C; public_key >())</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__permission/#function-check_permission_authorization\"><strong>check_permission_authorization</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> permission, const std::set&#x3C; public_key > &#x26; provided_keys, const std::set&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1permission__level\">permission_level</a></strong> > &#x26; provided_permissions = std::set&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1permission__level\">permission_level</a></strong> >(), <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong> provided_delay = <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong>{std::numeric_limits&#x3C; int64_t >::max()})</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\">time_point</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__permission/#function-get_permission_last_used\"><strong>get_permission_last_used</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> permission)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\">time_point</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__permission/#function-get_account_creation_time\"><strong>get_account_creation_time</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-set_blockchain_parameters\"><strong>set_blockchain_parameters</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1blockchain__parameters\">eosio::blockchain_parameters</a></strong> &#x26; params)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-get_blockchain_parameters\"><strong>get_blockchain_parameters</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1blockchain__parameters\">eosio::blockchain_parameters</a></strong> &#x26; params)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-get_resource_limits\"><strong>get_resource_limits</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account, int64_t &#x26; ram_bytes, int64_t &#x26; net_weight, int64_t &#x26; cpu_weight)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-set_resource_limits\"><strong>set_resource_limits</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account, int64_t ram_bytes, int64_t net_weight, int64_t cpu_weight)</td>\n</tr>\n<tr>\n<td>std::optional&#x3C; uint64_t ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-set_proposed_producers-12\"><strong>set_proposed_producers</strong></a> (const std::vector&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1producer__key\">producer_key</a></strong> > &#x26; prods)</td>\n</tr>\n<tr>\n<td>std::optional&#x3C; uint64_t ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-set_proposed_producers-22\"><strong>set_proposed_producers</strong></a> (const std::vector&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1producer__authority\">producer_authority</a></strong> > &#x26; prods)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-is_privileged\"><strong>is_privileged</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-set_privileged\"><strong>set_privileged</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> account, bool is_priv)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__privileged/#function-preactivate_feature\"><strong>preactivate_feature</strong></a> (const checksum256 &#x26; feature_digest)</td>\n</tr>\n<tr>\n<td>std::vector&#x3C; <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__producer__schedule/#function-get_active_producers\"><strong>get_active_producers</strong></a> ()</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-eosio_exit\"><strong>eosio_exit</strong></a> (int32_t code)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\">time_point</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-current_time_point\"><strong>current_time_point</strong></a> ()</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1block__timestamp\">block_timestamp</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-current_block_time\"><strong>current_block_time</strong></a> ()</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-is_feature_activated\"><strong>is_feature_activated</strong></a> (const checksum256 &#x26; feature_digest)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-get_sender\"><strong>get_sender</strong></a> ()</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-send_deferred\"><strong>send_deferred</strong></a> (const uint128_t &#x26; sender_id, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1name\">name</a></strong> payer, const char * serialized_transaction, size_t size, bool replace = false)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1action\">action</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-get_action\"><strong>get_action</strong></a> (uint32_t type, uint32_t index)</td>\n</tr>\n<tr>\n<td>size_t</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-read_transaction\"><strong>read_transaction</strong></a> (char * ptr, size_t sz)</td>\n</tr>\n<tr>\n<td>int</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-cancel_deferred\"><strong>cancel_deferred</strong></a> (const uint128_t &#x26; sender_id)</td>\n</tr>\n<tr>\n<td>size_t</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-transaction_size\"><strong>transaction_size</strong></a> ()</td>\n</tr>\n<tr>\n<td>int</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-tapos_block_num\"><strong>tapos_block_num</strong></a> ()</td>\n</tr>\n<tr>\n<td>int</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-tapos_block_prefix\"><strong>tapos_block_prefix</strong></a> ()</td>\n</tr>\n<tr>\n<td>uint32_t</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-expiration\"><strong>expiration</strong></a> () <br>Gets the expiration of the currently executing transaction.</td>\n</tr>\n<tr>\n<td>int</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__transaction/#function-get_context_free_data\"><strong>get_context_free_data</strong></a> (uint32_t index, char * buff, size_t size)</td>\n</tr>\n<tr>\n<td>char *</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-write_decimal\"><strong>write_decimal</strong></a> (char * begin, char * end, bool dry_run, uint64_t number, uint8_t num_decimal_places, bool negative)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-check-16\"><strong>check</strong></a> (bool pred, const char * msg)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-check-26\"><strong>check</strong></a> (bool pred, const std::string &#x26; msg)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-check-36\"><strong>check</strong></a> (bool pred, std::string &#x26;&#x26; msg)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-check-46\"><strong>check</strong></a> (bool pred, const char * msg, size_t n)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-check-56\"><strong>check</strong></a> (bool pred, const std::string &#x26; msg, size_t n)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__system/#function-check-66\"><strong>check</strong></a> (bool pred, uint64_t code)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-120\"><strong>operator&#x3C;&#x3C;</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, const std::list&#x3C; T > &#x26; l)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-120\"><strong>operator>></strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, std::list&#x3C; T > &#x26; l)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-220\"><strong>operator&#x3C;&#x3C;</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, const std::deque&#x3C; T > &#x26; d)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-220\"><strong>operator>></strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, std::deque&#x3C; T > &#x26; d)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-320\"><strong>operator&#x3C;&#x3C;</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, const std::variant&#x3C; Ts... > &#x26; var)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-deserialize\"><strong>deserialize</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, std::variant&#x3C; Ts... > &#x26; var, int i)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-320\"><strong>operator>></strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, std::variant&#x3C; Ts... > &#x26; var)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-420\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::pair&#x3C; T1, T2 > &#x26; t)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-420\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::pair&#x3C; T1, T2 > &#x26; t)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-520\"><strong>operator&#x3C;&#x3C;</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, const std::optional&#x3C; T > &#x26; opt)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-520\"><strong>operator>></strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, std::optional&#x3C; T > &#x26; opt)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-620\"><strong>operator&#x3C;&#x3C;</strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, const bool &#x26; d)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-620\"><strong>operator>></strong></a> (<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1datastream\">datastream</a></strong>&#x3C; Stream > &#x26; ds, bool &#x26; d) <br>Deserialize a bool.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-720\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::string &#x26; v)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-720\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::string &#x26; v)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-820\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::array&#x3C; T, N > &#x26; v)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-820\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::array&#x3C; T, N > &#x26; v) <br>Deserialize a fixed size std::array.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-920\"><strong>operator>></strong></a> (DataStream &#x26; ds, T) <br>Deserialize a a pointer.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-920\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const T(&#x26;) v) <br>Serialize a fixed size C array of non-primitive and non-pointer type.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1020\"><strong>operator>></strong></a> (DataStream &#x26; ds, T(&#x26;) v) <br>Deserialize a fixed size C array of non-primitive and non-pointer type.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1020\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::vector&#x3C; char > &#x26; v) <br>Serialize a vector of char.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1120\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::vector&#x3C; T > &#x26; v) <br>Serialize a vector.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1120\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::vector&#x3C; char > &#x26; v) <br>Deserialize a vector of char.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1220\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::vector&#x3C; T > &#x26; v) <br>Deserialize a vector.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1220\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::set&#x3C; T > &#x26; s) <br>Serialize a set.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1320\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::set&#x3C; T > &#x26; s) <br>Deserialize a set.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1320\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::map&#x3C; K, V > &#x26; m) <br>Serialize a map.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1420\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::map&#x3C; K, V > &#x26; m) <br>Deserialize a map.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1420\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const std::tuple&#x3C; Args... > &#x26; t) <br>Serialize a tuple.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1520\"><strong>operator>></strong></a> (DataStream &#x26; ds, std::tuple&#x3C; Args... > &#x26; t) <br>Deserialize a tuple.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1520\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const T &#x26; v) <br>Serialize a class.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1620\"><strong>operator>></strong></a> (DataStream &#x26; ds, T &#x26; v) <br>Deserialize a class.</td>\n</tr>\n<tr>\n<td>T</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__datastream/#function-unpack-12\"><strong>unpack</strong></a> (const char * buffer, size_t len) <br>Unpack data inside a fixed size buffer as T.</td>\n</tr>\n<tr>\n<td>T</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__datastream/#function-unpack-22\"><strong>unpack</strong></a> (const std::vector&#x3C; char > &#x26; bytes) <br>Unpack data inside a variable size buffer as T.</td>\n</tr>\n<tr>\n<td>size_t</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__datastream/#function-pack_size\"><strong>pack_size</strong></a> (const T &#x26; value) <br>Get the size of the packed data.</td>\n</tr>\n<tr>\n<td>std::vector&#x3C; char ></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__datastream/#function-pack\"><strong>pack</strong></a> (const T &#x26; value) <br>Get packed data.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1620\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const ::<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1ignore__wrapper\">eosio::ignore_wrapper</a></strong>&#x3C; T > &#x26; val) <br>Serialize ignored_wrapper<T>'s T value.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1720\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const ::<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1ignore\">eosio::ignore</a></strong>&#x3C; T > &#x26; val) <br>Serialize an ignored type.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1720\"><strong>operator>></strong></a> (DataStream &#x26; ds, ::<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/structeosio_1_1ignore\">eosio::ignore</a></strong>&#x3C; T > &#x26;) <br>Deserialize an ignored type.</td>\n</tr>\n<tr>\n<td>constexpr T</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-pow\"><strong>pow</strong></a> (uint8_t exponent)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-printhex\"><strong>printhex</strong></a> (const void * ptr, uint32_t size)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-printl\"><strong>printl</strong></a> (const char * ptr, size_t len)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print-17\"><strong>print</strong></a> (const char * ptr)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-print-27\"><strong>print</strong></a> (T num)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print-37\"><strong>print</strong></a> (float num)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print-47\"><strong>print</strong></a> (double num)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print-57\"><strong>print</strong></a> (long double num)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print-67\"><strong>print</strong></a> (T &#x26;&#x26; t)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print_f-12\"><strong>print_f</strong></a> (const char * s)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-print_f-22\"><strong>print_f</strong></a> (const char * s, Arg val, Args... rest)</td>\n</tr>\n<tr>\n<td>void</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-print-77\"><strong>print</strong></a> (Arg &#x26;&#x26; a, Args &#x26;&#x26;... args)</td>\n</tr>\n<tr>\n<td></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-overloaded-22\"><strong>overloaded</strong></a> (Ts...)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator&#x3C;</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator></strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator&#x3C;=</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator>=</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator==</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td>bool</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator!=</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator\"><strong>operator+</strong></a> (const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; lhs, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; rhs)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1820\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; str)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1820\"><strong>operator>></strong></a> (DataStream &#x26; ds, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1string\">string</a></strong> &#x26; str)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1920\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol__code\">eosio::symbol_code</a></strong> sym_code)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-1920\"><strong>operator>></strong></a> (DataStream &#x26; ds, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol__code\">eosio::symbol_code</a></strong> &#x26; sym_code)</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-2020\"><strong>operator&#x3C;&#x3C;</strong></a> (DataStream &#x26; ds, const <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol\">eosio::symbol</a></strong> sym) <br>Serialize a symbol.</td>\n</tr>\n<tr>\n<td>DataStream &#x26;</td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-operator-2020\"><strong>operator>></strong></a> (DataStream &#x26; ds, <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol\">eosio::symbol</a></strong> &#x26; sym) <br>Deserialize a symbol.</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-seconds\"><strong>seconds</strong></a> (int64_t s)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-milliseconds\"><strong>milliseconds</strong></a> (int64_t s)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-minutes\"><strong>minutes</strong></a> (int64_t m)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-hours\"><strong>hours</strong></a> (int64_t h)</td>\n</tr>\n<tr>\n<td><strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1microseconds\">microseconds</a></strong></td>\n<td><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio/#function-days\"><strong>days</strong></a> (int64_t d)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"typedefs-documentation\">Typedefs Documentation</h2>\n<h3 id=\"typedef-block_signing_authority\">typedef block_signing_authority</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">using</span> eosio<span class=\"token operator\">::</span>block_signing_authority <span class=\"token operator\">=</span> <span class=\"token keyword\">typedef</span> std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span>block_signing_authority_v0<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>variant of all possible block signing authorities </p>\n<h3 id=\"typedef-extension\">typedef extension</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">typedef</span> std<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint16_t</span><span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span> <span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span>extension<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"typedef-extensions_type\">typedef extensions_type</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">typedef</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>extension<span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span>extensions_type<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"typedef-block_timestamp_type\">typedef block_timestamp_type</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">typedef</span> block_timestamp eosio<span class=\"token operator\">::</span>block_timestamp_type<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"variables-documentation\">Variables Documentation</h2>\n<h3 id=\"variable-same_payer\">variable same_payer</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">constexpr</span> name eosio<span class=\"token operator\">::</span>same_payer<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"variable-powers_of_base\">variable powers_of_base</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">constexpr</span> <span class=\"token keyword\">auto</span> eosio<span class=\"token operator\">::</span>powers_of_base<span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"variable-cout\">variable cout</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">iostream eosio<span class=\"token operator\">::</span>cout<span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"functions-documentation\">Functions Documentation</h2>\n<h3 id=\"function-unpack_action_data\">function unpack_action_data</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nT eosio<span class=\"token operator\">::</span><span class=\"token function\">unpack_action_data</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Returns:</strong></p>\n<p>Unpacked action data casted as T.</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">struct</span> <span class=\"token class-name\">dummy_action</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">char</span> a<span class=\"token punctuation\">;</span> <span class=\"token comment\">//1</span>\n  <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> b<span class=\"token punctuation\">;</span> <span class=\"token comment\">//8</span>\n  <span class=\"token keyword\">int</span>  c<span class=\"token punctuation\">;</span> <span class=\"token comment\">//4</span>\n\n  <span class=\"token function\">EOSLIB_SERIALIZE</span><span class=\"token punctuation\">(</span> dummy_action<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\ndummy_action msg <span class=\"token operator\">=</span> unpack_action_data<span class=\"token operator\">&lt;</span>dummy_action<span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-require_recipient-12\">function require_recipient (1/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">require_recipient</span><span class=\"token punctuation\">(</span>\n    name notify_account\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Add the specified account to set of accounts to be notified. </p>\n<p>Add the specified account to set of accounts to be notified</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>notify_account</strong> - name of the account to be verified </li>\n</ul>\n<h3 id=\"function-require_recipient-22\">function require_recipient (2/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> accounts<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">require_recipient</span><span class=\"token punctuation\">(</span>\n    name notify_account<span class=\"token punctuation\">,</span>\n    accounts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> remaining_accounts\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>All of the listed accounts will be added to the set of accounts to be notified\nThis helper method enables you to add multiple accounts to accounts to be notified list with a single call rather than having to call the similar C API multiple times.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>notify_account</strong> account to be notified </li>\n<li><strong>remaining_accounts</strong> accounts to be notified </li>\n</ul>\n<p><strong>Note:</strong></p>\n<p>action.code is also considered as part of the set of notified accounts</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token function\">require_recipient</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Account1\"</span>_n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Account2\"</span>_n<span class=\"token punctuation\">,</span> <span class=\"token string\">\"Account3\"</span>_n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// throws exception if any of them not in set.</span></code></pre></div>\n<h3 id=\"function-require_auth-12\">function require_auth (1/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">require_auth</span><span class=\"token punctuation\">(</span>\n    name n\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verifies that <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__name/#group-name\">Name</a></strong> exists in the set of provided auths on a action. Fails if not found.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>name</strong> - name of the account to be verified </li>\n</ul>\n<h3 id=\"function-publication_time\">function publication_time</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">time_point eosio<span class=\"token operator\">::</span><span class=\"token function\">publication_time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns the time in microseconds from 1970 of the publication_time</p>\n<p><strong>Returns:</strong></p>\n<p>the time in microseconds from 1970 of the publication_time </p>\n<h3 id=\"function-current_receiver\">function current_receiver</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">name eosio<span class=\"token operator\">::</span><span class=\"token function\">current_receiver</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get the current receiver of the action </p>\n<p><strong>Returns:</strong></p>\n<p>the account which specifies the current receiver of the action </p>\n<h3 id=\"function-read_action_data\">function read_action_data</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">uint32_t</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">read_action_data</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> msg<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> len\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Copy up to length bytes of current action data to the specified location</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>msg</strong> - a pointer where up to length bytes of the current action data will be copied </li>\n<li><strong>len</strong> - len of the current action data to be copied, 0 to report required size </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>the number of bytes copied to msg, or number of bytes that can be copied if len==0 passed </p>\n<p><strong>Precondition:</strong></p>\n<p><code class=\"language-text\">msg</code> is a valid pointer to a range of memory at least <code class=\"language-text\">len</code> bytes long </p>\n<p><strong>Post</strong></p>\n<p><code class=\"language-text\">msg</code> is filled with packed action data </p>\n<h3 id=\"function-action_data_size\">function action_data_size</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">uint32_t</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">action_data_size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get the length of the current action's data field. This method is useful for dynamically sized actions</p>\n<p><strong>Returns:</strong></p>\n<p>the length of the current action's data field </p>\n<h3 id=\"function-require_auth-22\">function require_auth (2/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">require_auth</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> permission_level <span class=\"token operator\">&amp;</span> level\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Require the specified authorization for this action. If this action doesn't contain the specified auth, it will fail.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>level</strong> - Authorization to be required </li>\n</ul>\n<h3 id=\"function-has_auth\">function has_auth</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">has_auth</span><span class=\"token punctuation\">(</span>\n    name n\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verifies that n has auth.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>n</strong> - name of the account to be verified </li>\n</ul>\n<h3 id=\"function-is_account\">function is_account</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">is_account</span><span class=\"token punctuation\">(</span>\n    name n\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Verifies that n is an existing account.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>n</strong> - name of the account to check </li>\n</ul>\n<h3 id=\"function-dispatch_inline\">function dispatch_inline</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">dispatch_inline</span><span class=\"token punctuation\">(</span>\n    name code<span class=\"token punctuation\">,</span>\n    name act<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> permission_level <span class=\"token operator\">></span> perms<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span> Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> args\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-dispatch\">function dispatch</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Contract<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> FirstAction<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> SecondAction<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Actions<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">dispatch</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint64_t</span> code<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint64_t</span> act\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This method will dynamically dispatch an incoming set of actions to</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">static</span> Contract<span class=\"token operator\">::</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span> ActionType <span class=\"token punctuation\">)</span></code></pre></div>\n<p>For this to work the Actions must be derived from <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1contract\">eosio::contract</a></strong> </p>\n<h3 id=\"function-execute_action\">function execute_action</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\n<span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">execute_action</span><span class=\"token punctuation\">(</span>\n    name self<span class=\"token punctuation\">,</span>\n    name code<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">void</span><span class=\"token punctuation\">(</span>T<span class=\"token operator\">::</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span> func\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unpack the received action and execute the correponding action handler</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - The contract class that has the correponding action handler, this contract should be derived from <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1contract\">eosio::contract</a></strong> </li>\n<li><strong>Q</strong> - The namespace of the action handler function </li>\n<li><strong>Args</strong> - The arguments that the action handler accepts, i.e. members of the action </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>obj</strong> - The contract object that has the correponding action handler </li>\n<li><strong>func</strong> - The action handler </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>true </p>\n<h3 id=\"function-check_transaction_authorization\">function check_transaction_authorization</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check_transaction_authorization</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> trx_data<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> trx_size<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> pubkeys_data<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> pubkeys_size<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> perms_data<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> perms_size\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Checks if a transaction is authorized by a provided set of keys and permissions</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>trx_data</strong> - pointer to the start of the serialized transaction </li>\n<li><strong>trx_size</strong> - size (in bytes) of the serialized transaction </li>\n<li><strong>pubkeys_data</strong> - pointer to the start of the serialized vector of provided public keys </li>\n<li><strong>pubkeys_size</strong> - size (in bytes) of serialized vector of provided public keys (can be 0 if no public keys are to be provided) </li>\n<li><strong>perms_data</strong> - pointer to the start of the serialized vector of provided permissions (empty permission name acts as wildcard) </li>\n<li><strong>perms_size</strong> - size (in bytes) of the serialized vector of provided permissions</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>1 if the transaction is authorized, 0 otherwise </p>\n<h3 id=\"function-check_permission_authorization\">function check_permission_authorization</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check_permission_authorization</span><span class=\"token punctuation\">(</span>\n    name account<span class=\"token punctuation\">,</span>\n    name permission<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> pubkeys_data<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> pubkeys_size<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> perms_data<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> perms_size<span class=\"token punctuation\">,</span>\n    microseconds delay\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Checks if a permission is authorized by a provided delay and a provided set of keys and permissions</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - the account owner of the permission </li>\n<li><strong>permission</strong> - the name of the permission to check for authorization </li>\n<li><strong>pubkeys_data</strong> - pointer to the start of the serialized vector of provided public keys </li>\n<li><strong>pubkeys_size</strong> - size (in bytes) of serialized vector of provided public keys (can be 0 if no public keys are to be provided) </li>\n<li><strong>perms_data</strong> - pointer to the start of the serialized vector of provided permissions (empty permission name acts as wildcard) </li>\n<li><strong>perms_size</strong> - size (in bytes) of the serialized vector of provided permissions </li>\n<li><strong>delay</strong> - the provided delay in microseconds (cannot exceed INT64_MAX)</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>1 if the permission is authorized, 0 otherwise </p>\n<h3 id=\"function-check_transaction_authorization-1\">function check_transaction_authorization</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check_transaction_authorization</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">&amp;</span> trx<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> permission_level <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> provided_permissions<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> public_key <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> provided_keys <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> public_key <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Checks if a transaction is authorized by a provided set of keys and permissions</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>trx</strong> - the transaction for which to check authorizations </li>\n<li><strong>provided_permissions</strong> - the set of permissions which have authorized the transaction (empty permission name acts as wildcard) </li>\n<li><strong>provided_keys</strong> - the set of public keys which have authorized the transaction</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>whether the transaction was authorized by provided keys and permissions </p>\n<h3 id=\"function-check_permission_authorization-1\">function check_permission_authorization</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check_permission_authorization</span><span class=\"token punctuation\">(</span>\n    name account<span class=\"token punctuation\">,</span>\n    name permission<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> public_key <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> provided_keys<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> permission_level <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> provided_permissions <span class=\"token operator\">=</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> permission_level <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    microseconds provided_delay <span class=\"token operator\">=</span> microseconds<span class=\"token punctuation\">{</span>std<span class=\"token operator\">::</span>numeric_limits<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">int64_t</span> <span class=\"token operator\">></span><span class=\"token operator\">::</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Checks if a permission is authorized by a provided delay and a provided set of keys and permissions</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - the account owner of the permission </li>\n<li><strong>permission</strong> - the permission name to check for authorization </li>\n<li><strong>provided_keys</strong> - the set of public keys which have authorized the transaction </li>\n<li><strong>provided_permissions</strong> - the set of permissions which have authorized the transaction (empty permission name acts as wildcard) </li>\n<li><strong>provided_delay_us</strong> - the provided delay in microseconds (cannot exceed INT64_MAX)</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>whether the permission was authorized by provided delay, keys, and permissions </p>\n<h3 id=\"function-get_permission_last_used\">function get_permission_last_used</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">time_point eosio<span class=\"token operator\">::</span><span class=\"token function\">get_permission_last_used</span><span class=\"token punctuation\">(</span>\n    name account<span class=\"token punctuation\">,</span>\n    name permission\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns the last used time of a permission</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - the account owner of the permission </li>\n<li><strong>permission</strong> - the name of the permission</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>the last used time (in microseconds since Unix epoch) of the permission </p>\n<h3 id=\"function-get_account_creation_time\">function get_account_creation_time</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">time_point eosio<span class=\"token operator\">::</span><span class=\"token function\">get_account_creation_time</span><span class=\"token punctuation\">(</span>\n    name account\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns the creation time of an account</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - the account</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>the creation time (in microseconds since Unix epoch) of the account </p>\n<h3 id=\"function-set_blockchain_parameters\">function set_blockchain_parameters</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">set_blockchain_parameters</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>blockchain_parameters <span class=\"token operator\">&amp;</span> params\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Set the blockchain parameters</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>params</strong> - New blockchain parameters to set </li>\n</ul>\n<h3 id=\"function-get_blockchain_parameters\">function get_blockchain_parameters</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">get_blockchain_parameters</span><span class=\"token punctuation\">(</span>\n    eosio<span class=\"token operator\">::</span>blockchain_parameters <span class=\"token operator\">&amp;</span> params\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Retrieve the blolckchain parameters</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>params</strong> - It will be replaced with the retrieved blockchain params </li>\n</ul>\n<h3 id=\"function-get_resource_limits\">function get_resource_limits</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">get_resource_limits</span><span class=\"token punctuation\">(</span>\n    name account<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int64_t</span> <span class=\"token operator\">&amp;</span> ram_bytes<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int64_t</span> <span class=\"token operator\">&amp;</span> net_weight<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int64_t</span> <span class=\"token operator\">&amp;</span> cpu_weight\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get the resource limits of an account</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - name of the account whose resource limit to get </li>\n<li><strong>ram_bytes</strong> - output to hold retrieved ram limit in absolute bytes </li>\n<li><strong>net_weight</strong> - output to hold net limit </li>\n<li><strong>cpu_weight</strong> - output to hold cpu limit </li>\n</ul>\n<h3 id=\"function-set_resource_limits\">function set_resource_limits</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">set_resource_limits</span><span class=\"token punctuation\">(</span>\n    name account<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int64_t</span> ram_bytes<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int64_t</span> net_weight<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int64_t</span> cpu_weight\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Set the resource limits of an account</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - name of the account whose resource limit to be set </li>\n<li><strong>ram_bytes</strong> - ram limit in absolute bytes </li>\n<li><strong>net_weight</strong> - fractionally proportionate net limit of available resources based on (weight / total_weight_of_all_accounts) </li>\n<li><strong>cpu_weight</strong> - fractionally proportionate cpu limit of available resources based on (weight / total_weight_of_all_accounts) </li>\n</ul>\n<h3 id=\"function-set_proposed_producers-12\">function set_proposed_producers (1/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">std<span class=\"token operator\">::</span>optional<span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint64_t</span><span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span><span class=\"token function\">set_proposed_producers</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> producer_key <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> prods\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Proposes a schedule change using the legacy producer key format</p>\n<p><strong>Note:</strong></p>\n<p>Once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" </p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>producers</strong> - vector of producer keys</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>an optional value of the version of the new proposed schedule if successful </p>\n<h3 id=\"function-set_proposed_producers-22\">function set_proposed_producers (2/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">std<span class=\"token operator\">::</span>optional<span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint64_t</span><span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span><span class=\"token function\">set_proposed_producers</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> producer_authority <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> prods\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Proposes a schedule change using the more flexible key format</p>\n<p><strong>Note:</strong></p>\n<p>Once the block that contains the proposal becomes irreversible, the schedule is promoted to \"pending\" automatically. Once the block that promotes the schedule is irreversible, the schedule will become \"active\" </p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>producers</strong> - vector of producer authorities</li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>an optional value of the version of the new proposed schedule if successful </p>\n<h3 id=\"function-is_privileged\">function is_privileged</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">is_privileged</span><span class=\"token punctuation\">(</span>\n    name account\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Check if an account is privileged</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - name of the account to be checked </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>true if the account is privileged </p>\n<p><strong>Returns:</strong></p>\n<p>false if the account is not privileged </p>\n<h3 id=\"function-set_privileged\">function set_privileged</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">set_privileged</span><span class=\"token punctuation\">(</span>\n    name account<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">bool</span> is_priv\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Set the privileged status of an account</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>account</strong> - name of the account whose privileged account to be set </li>\n<li><strong>is_priv</strong> - privileged status </li>\n</ul>\n<h3 id=\"function-preactivate_feature\">function preactivate_feature</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">preactivate_feature</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> checksum256 <span class=\"token operator\">&amp;</span> feature_digest\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Pre-activate protocol feature</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>feature_digest</strong> - digest of the protocol feature to pre-activate </li>\n</ul>\n<h3 id=\"function-get_active_producers\">function get_active_producers</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span>name<span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span><span class=\"token function\">get_active_producers</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns back the list of active producer names. </p>\n<h3 id=\"function-eosio_exit\">function eosio_exit</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">eosio_exit</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">int32_t</span> code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>This method will abort execution of wasm without failing the contract. This is used to bypass all cleanup / destructors that would normally be called.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>code</strong> - the exit code Example:</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token function\">eosio_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eosio_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eosio_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">eosio_exit</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-current_time_point\">function current_time_point</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">time_point eosio<span class=\"token operator\">::</span><span class=\"token function\">current_time_point</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns the time in microseconds from 1970 of the current block as a <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\">time_point</a></strong></p>\n<p><strong>Returns:</strong></p>\n<p>time in microseconds from 1970 of the current block as a <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1time__point\">time_point</a></strong> </p>\n<h3 id=\"function-current_block_time\">function current_block_time</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">block_timestamp eosio<span class=\"token operator\">::</span><span class=\"token function\">current_block_time</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Returns the time in microseconds from 1970 of the current block as a <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1block__timestamp\">block_timestamp</a></strong></p>\n<p><strong>Returns:</strong></p>\n<p>time in microseconds from 1970 of the current block as a <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1block__timestamp\">block_timestamp</a></strong> </p>\n<h3 id=\"function-is_feature_activated\">function is_feature_activated</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">is_feature_activated</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> checksum256 <span class=\"token operator\">&amp;</span> feature_digest\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Check if specified protocol feature has been activated</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>feature_digest</strong> - digest of the protocol feature </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>true if the specified protocol feature has been activated, false otherwise </p>\n<h3 id=\"function-get_sender\">function get_sender</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">name eosio<span class=\"token operator\">::</span><span class=\"token function\">get_sender</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Return name of account that sent current inline action</p>\n<p><strong>Returns:</strong></p>\n<p>name of account that sent the current inline action (empty name if not called from inline action) </p>\n<h3 id=\"function-send_deferred\">function send_deferred</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">send_deferred</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> uint128_t <span class=\"token operator\">&amp;</span> sender_id<span class=\"token punctuation\">,</span>\n    name payer<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> serialized_transaction<span class=\"token punctuation\">,</span>\n    size_t size<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">bool</span> replace <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Send a deferred transaction</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>sender_id</strong> - Account name of the sender of this deferred transaction </li>\n<li><strong>payer</strong> - Account name responsible for paying the RAM for this deferred transaction </li>\n<li><strong>serialized_transaction</strong> - The packed transaction to be deferred </li>\n<li><strong>size</strong> - The size of the packed transaction, required for persistence. </li>\n<li><strong>replace</strong> - If true, will replace an existing transaction. </li>\n</ul>\n<h3 id=\"function-get_action\">function get_action</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">action eosio<span class=\"token operator\">::</span><span class=\"token function\">get_action</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint32_t</span> type<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> index\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Retrieve the indicated action from the active transaction.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>type</strong> - 0 for context free action, 1 for action </li>\n<li><strong>index</strong> - the index of the requested action </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>the indicated action </p>\n<h3 id=\"function-read_transaction\">function read_transaction</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">size_t eosio<span class=\"token operator\">::</span><span class=\"token function\">read_transaction</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> ptr<span class=\"token punctuation\">,</span>\n    size_t sz\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Access a copy of the currently executing transaction.</p>\n<p><strong>Returns:</strong></p>\n<p>the currently executing transaction </p>\n<h3 id=\"function-cancel_deferred\">function cancel_deferred</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">cancel_deferred</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> uint128_t <span class=\"token operator\">&amp;</span> sender_id\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cancels a deferred transaction.</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>sender_id</strong> - The id of the sender</li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>The deferred transaction ID exists. </p>\n<p><strong>Precondition:</strong></p>\n<p>The deferred transaction ID has not yet been published. </p>\n<p><strong>Post</strong></p>\n<p>Deferred transaction canceled.</p>\n<p><strong>Returns:</strong></p>\n<p>1 if transaction was canceled, 0 if transaction was not found</p>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">id <span class=\"token operator\">=</span> <span class=\"token number\">0xffffffffffffffff</span>\n<span class=\"token function\">cancel_deferred</span><span class=\"token punctuation\">(</span> id <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-transaction_size\">function transaction_size</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">size_t eosio<span class=\"token operator\">::</span><span class=\"token function\">transaction_size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Gets the size of the currently executing transaction.</p>\n<p><strong>Returns:</strong></p>\n<p>size of the currently executing transaction </p>\n<h3 id=\"function-tapos_block_num\">function tapos_block_num</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">tapos_block_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Gets the block number used for TAPOS on the currently executing transaction.</p>\n<p><strong>Returns:</strong></p>\n<p>block number used for TAPOS on the currently executing transaction Example: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> tbn <span class=\"token operator\">=</span> <span class=\"token function\">tapos_block_num</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-tapos_block_prefix\">function tapos_block_prefix</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">tapos_block_prefix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Gets the block prefix used for TAPOS on the currently executing transaction.</p>\n<p><strong>Returns:</strong></p>\n<p>block prefix used for TAPOS on the currently executing transaction Example: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> tbp <span class=\"token operator\">=</span> <span class=\"token function\">tapos_block_prefix</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-expiration\">function expiration</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">uint32_t</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">expiration</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Gets the expiration of the currently executing transaction. </p>\n<p>Gets the expiration of the currently executing transaction.</p>\n<p><strong>Returns:</strong></p>\n<p>expiration of the currently executing transaction in seconds since Unix epoch </p>\n<h3 id=\"function-get_context_free_data\">function get_context_free_data</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">int</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">get_context_free_data</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint32_t</span> index<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> buff<span class=\"token punctuation\">,</span>\n    size_t size\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Retrieve the signed_transaction.context_free_data[index].</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>index</strong> - the index of the context_free_data entry to retrieve </li>\n<li><strong>buff</strong> - output buff of the context_free_data entry </li>\n<li><strong>size</strong> - amount of context_free_data[index] to retrieve into buff, 0 to report required size </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>size copied, or context_free_data[index].<strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/namespaceeosio_1_1internal__use__do__not__use/#variable-size\">size()</a></strong> if 0 passed for size, or -1 if index not valid </p>\n<h3 id=\"function-write_decimal\">function write_decimal</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">char</span><span class=\"token operator\">*</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">write_decimal</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> begin<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> end<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">bool</span> dry_run<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint64_t</span> number<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint8_t</span> num_decimal_places<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">bool</span> negative\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-check-16\">function check (1/6)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">bool</span> pred<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> msg\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Assert if the predicate fails and use the supplied message.\nExample: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a does not equal b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-check-26\">function check (2/6)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">bool</span> pred<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> msg\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Assert if the predicate fails and use the supplied message.\nExample: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a does not equal b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-check-36\">function check (3/6)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">bool</span> pred<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;&amp;</span> msg\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Assert if the predicate fails and use the supplied message.\nExample: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a does not equal b\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-check-46\">function check (4/6)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">bool</span> pred<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> msg<span class=\"token punctuation\">,</span>\n    size_t n\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Assert if the predicate fails and use a subset of the supplied message.\nExample: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> msg <span class=\"token operator\">=</span> <span class=\"token string\">\"a does not equal b b does not equal a\"</span><span class=\"token punctuation\">;</span>\neosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">,</span> <span class=\"token string\">\"a does not equal b\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-check-56\">function check (5/6)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">bool</span> pred<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> msg<span class=\"token punctuation\">,</span>\n    size_t n\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Assert if the predicate fails and use a subset of the supplied message.\nExample: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">std<span class=\"token operator\">::</span>string msg <span class=\"token operator\">=</span> <span class=\"token string\">\"a does not equal b b does not equal a\"</span><span class=\"token punctuation\">;</span>\neosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-check-66\">function check (6/6)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">bool</span> pred<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint64_t</span> code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Assert if the predicate fails and use the supplied error code.\nExample: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">eosio<span class=\"token operator\">::</span><span class=\"token function\">check</span><span class=\"token punctuation\">(</span>a <span class=\"token operator\">==</span> b<span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-operator-120\">function operator&#x3C;&#x3C; (1/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>list<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> l\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an std::list into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-120-1\">function operator>> (1/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>list<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> l\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an std::list from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-220\">function operator&#x3C;&#x3C; (2/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>deque<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an std::deque into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-220-1\">function operator>> (2/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>deque<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an std::deque from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-320\">function operator&#x3C;&#x3C; (3/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span> Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> var\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an std::variant into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-deserialize\">function deserialize</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span> I<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">deserialize</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span> Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> var<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">int</span> i\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-320-1\">function operator>> (3/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>variant<span class=\"token operator\">&lt;</span> Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> var\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an std::variant from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-420\">function operator&#x3C;&#x3C; (4/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T2<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span> T1<span class=\"token punctuation\">,</span> T2 <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an std::pair</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>t</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-420-1\">function operator>> (4/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T1<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T2<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>pair<span class=\"token operator\">&lt;</span> T1<span class=\"token punctuation\">,</span> T2 <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an std::pair</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>t</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-520\">function operator&#x3C;&#x3C; (5/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>optional<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> opt\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an optional into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>opt</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-520-1\">function operator>> (5/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>optional<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> opt\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an optional from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>opt</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-620\">function operator&#x3C;&#x3C; (6/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">bool</span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a bool into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-620-1\">function operator>> (6/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Stream<span class=\"token operator\">></span>\ndatastream<span class=\"token operator\">&lt;</span>Stream<span class=\"token operator\">></span><span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    datastream<span class=\"token operator\">&lt;</span> Stream <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">bool</span> <span class=\"token operator\">&amp;</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a bool. </p>\n<p>Deserialize a bool from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>d</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Stream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>datastream<Stream>&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-720\">function operator&#x3C;&#x3C; (7/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a string into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-720-1\">function operator>> (7/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>string <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a string from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-820\">function operator&#x3C;&#x3C; (8/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>array<span class=\"token operator\">&lt;</span> T<span class=\"token punctuation\">,</span> N <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a fixed size std::array</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-820-1\">function operator>> (8/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>array<span class=\"token operator\">&lt;</span> T<span class=\"token punctuation\">,</span> N <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a fixed size std::array. </p>\n<p>Deserialize a fixed size std::array</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-920\">function operator>> (9/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> _datastream_detail<span class=\"token operator\">::</span>is_pointer<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    T \n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a a pointer. </p>\n<p>Pointer should not be serialized, so this function will always throws an error</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the pointer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<p><strong>Post</strong></p>\n<p>Throw an exception if it is a pointer </p>\n<h3 id=\"function-operator-920-1\">function operator&#x3C;&#x3C; (9/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_primitive<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_pointer<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function\">T</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a fixed size C array of non-primitive and non-pointer type. </p>\n<p>Serialize a fixed size C array of primitive type.\nSerialize a fixed size C array of non-primitive and non-pointer type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the pointer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Serialize a fixed size C array of primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the pointer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1020\">function operator>> (10/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>size_t N<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_primitive<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span><span class=\"token operator\">!</span>_datastream_detail<span class=\"token operator\">::</span>is_pointer<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token function\">T</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a fixed size C array of non-primitive and non-pointer type. </p>\n<p>Deserialize a fixed size C array of primitive type.\nDeserialize a fixed size C array of non-primitive and non-pointer type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Deserialize a fixed size C array of primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the object contained in the array </li>\n<li><strong>N</strong> - Size of the array </li>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1020-1\">function operator&#x3C;&#x3C; (10/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a vector of char. </p>\n<p>Serialize a vector of char</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1120\">function operator&#x3C;&#x3C; (11/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a vector. </p>\n<p>Serialize a vector</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the vector </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1120-1\">function operator>> (11/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a vector of char. </p>\n<p>Deserialize a vector of char</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1220\">function operator>> (12/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a vector. </p>\n<p>Deserialize a vector</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the vector </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1220-1\">function operator&#x3C;&#x3C; (12/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a set. </p>\n<p>Serialize a set</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>s</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the set </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1320\">function operator>> (13/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>set<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a set. </p>\n<p>Deserialize a set</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>s</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the object contained in the set </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1320-1\">function operator&#x3C;&#x3C; (13/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> V<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">,</span> V <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a map. </p>\n<p>Serialize a map</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>m</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>K</strong> - Type of the key contained in the map </li>\n<li><strong>V</strong> - Type of the value contained in the map </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1420\">function operator>> (14/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> K<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> V<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>map<span class=\"token operator\">&lt;</span> K<span class=\"token punctuation\">,</span> V <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a map. </p>\n<p>Deserialize a map</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>m</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>K</strong> - Type of the key contained in the map </li>\n<li><strong>V</strong> - Type of the value contained in the map </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1420-1\">function operator&#x3C;&#x3C; (14/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span> Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a tuple. </p>\n<p>Serialize a tuple</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>t</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1520\">function operator>> (15/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    std<span class=\"token operator\">::</span>tuple<span class=\"token operator\">&lt;</span> Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a tuple. </p>\n<p>Deserialize a tuple</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>t</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>Args</strong> - Type of the objects contained in the tuple </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1520-1\">function operator&#x3C;&#x3C; (15/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>is_class<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a class. </p>\n<p>Serialize a primitive type.\nSerialize a class</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of class </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Serialize a primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>v</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the primitive type </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1620\">function operator>> (16/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>is_class<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span><span class=\"token operator\">::</span>value <span class=\"token operator\">></span> <span class=\"token operator\">*</span><span class=\"token operator\">></span>\nDataStream <span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    T <span class=\"token operator\">&amp;</span> v\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a class. </p>\n<p>Deserialize a primitive type.\nDeserialize a class</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of class </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream</p>\n<p>Deserialize a primitive type</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>v</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream </li>\n<li><strong>T</strong> - Type of the primitive type </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-unpack-12\">function unpack (1/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nT eosio<span class=\"token operator\">::</span><span class=\"token function\">unpack</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> buffer<span class=\"token punctuation\">,</span>\n    size_t len\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unpack data inside a fixed size buffer as T. </p>\n<p>Unpack data inside a fixed size buffer as T</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the unpacked data </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>buffer</strong> - Pointer to the buffer </li>\n<li><strong>len</strong> - Length of the buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>T - The unpacked data </p>\n<h3 id=\"function-unpack-22\">function unpack (2/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nT eosio<span class=\"token operator\">::</span><span class=\"token function\">unpack</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> bytes\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Unpack data inside a variable size buffer as T. </p>\n<p>Unpack data inside a variable size buffer as T</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the unpacked data </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>bytes</strong> - Buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>T - The unpacked data </p>\n<h3 id=\"function-pack_size\">function pack_size</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nsize_t eosio<span class=\"token operator\">::</span><span class=\"token function\">pack_size</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> value\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get the size of the packed data. </p>\n<p>Get the size of the packed data</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the data to be packed </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>value</strong> - Data to be packed </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>size_t - Size of the packed data </p>\n<h3 id=\"function-pack\">function pack</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nstd<span class=\"token operator\">::</span>vector<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span><span class=\"token operator\">></span> eosio<span class=\"token operator\">::</span><span class=\"token function\">pack</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> T <span class=\"token operator\">&amp;</span> value\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Get packed data. </p>\n<p>Get packed data</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>T</strong> - Type of the data to be packed </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>value</strong> - Data to be packed </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>bytes - The packed data </p>\n<h3 id=\"function-operator-1620-1\">function operator&#x3C;&#x3C; (16/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token operator\">::</span>eosio<span class=\"token operator\">::</span>ignore_wrapper<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> val\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize ignored_wrapper<T>'s T value. </p>\n<p>Serialize an ignored_wrapper type into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>val</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1720\">function operator&#x3C;&#x3C; (17/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> <span class=\"token operator\">::</span>eosio<span class=\"token operator\">::</span>ignore<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> val\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize an ignored type. </p>\n<p>Serialize an ignored type into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>ignore</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1720-1\">function operator>> (17/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">::</span>eosio<span class=\"token operator\">::</span>ignore<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">></span> <span class=\"token operator\">&amp;</span> \n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize an ignored type. </p>\n<p>Deserialize an ignored type from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>ignored</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-pow\">function pow</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">uint8_t</span> Base<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span> T<span class=\"token operator\">></span>\n<span class=\"token keyword\">constexpr</span> T eosio<span class=\"token operator\">::</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">uint8_t</span> exponent\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><strong>Returns:</strong></p>\n<p>Base^exponent </p>\n<h3 id=\"function-printhex\">function printhex</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">printhex</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">void</span> <span class=\"token operator\">*</span> ptr<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">uint32_t</span> size\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints a block of bytes in hexadecimal</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ptr</strong> - pointer to bytes of interest </li>\n<li><strong>size</strong> - number of bytes to print </li>\n</ul>\n<h3 id=\"function-printl\">function printl</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">printl</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> ptr<span class=\"token punctuation\">,</span>\n    size_t len\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints string to a given length</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ptr</strong> - a string </li>\n<li><strong>len</strong> - number of chars to print </li>\n</ul>\n<h3 id=\"function-print-17\">function print (1/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> ptr\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints string</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ptr</strong> - a null terminated string </li>\n</ul>\n<h3 id=\"function-print-27\">function print (2/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>is_integral<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>decay_t<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">>></span><span class=\"token operator\">::</span>value <span class=\"token operator\">&amp;&amp;</span>std<span class=\"token operator\">::</span>is_signed<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>decay_t<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">>></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">>></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    T num\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints 8-128 bit signed integer</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>num</strong> to be printed</li>\n</ul>\n<p>Prints 8-128 bit unsigned integer</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>num</strong> to be printed </li>\n</ul>\n<h3 id=\"function-print-37\">function print (3/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">float</span> num\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints single-precision floating point number (i.e. float)</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>num</strong> to be printed </li>\n</ul>\n<h3 id=\"function-print-47\">function print (4/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">double</span> num\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints double-precision floating point number (i.e. double)</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>num</strong> to be printed </li>\n</ul>\n<h3 id=\"function-print-57\">function print (5/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">long</span> <span class=\"token keyword\">double</span> num\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints quadruple-precision floating point number (i.e. long double)</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>num</strong> to be printed </li>\n</ul>\n<h3 id=\"function-print-67\">function print (6/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> T<span class=\"token punctuation\">,</span> std<span class=\"token operator\">::</span>enable_if_t<span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span>std<span class=\"token operator\">::</span>is_integral<span class=\"token operator\">&lt;</span> std<span class=\"token operator\">::</span>decay_t<span class=\"token operator\">&lt;</span> T <span class=\"token operator\">>></span><span class=\"token operator\">::</span>value<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> <span class=\"token operator\">>></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    T <span class=\"token operator\">&amp;&amp;</span> t\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints class object</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>t</strong> to be printed </li>\n</ul>\n<p><strong>Precondition:</strong></p>\n<p>T must implements <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/group__console/#function-print-17\">print()</a></strong> function </p>\n<h3 id=\"function-print_f-12\">function print_f (1/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print_f</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints null terminated string</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>s</strong> null terminated string to be printed </li>\n</ul>\n<h3 id=\"function-print_f-22\">function print_f (2/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Arg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print_f</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span> s<span class=\"token punctuation\">,</span>\n    Arg val<span class=\"token punctuation\">,</span>\n    Args<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> rest\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Prints formatted string. It behaves similar to C printf/</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Arg</strong> - Type of the value used to replace the format specifier </li>\n<li><strong>Args</strong> - Type of the value used to replace the format specifier </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>s</strong> - Null terminated string with to be printed (it can contains format specifier) </li>\n<li><strong>val</strong> - The value used to replace the format specifier </li>\n<li><strong>rest</strong> - The values used to replace the format specifier</li>\n</ul>\n<p>Example: </p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token function\">print_f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Number of apples: %\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"function-print-77\">function print (7/7)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> Arg<span class=\"token punctuation\">,</span> <span class=\"token keyword\">typename</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Args<span class=\"token operator\">></span>\n<span class=\"token keyword\">void</span> eosio<span class=\"token operator\">::</span><span class=\"token function\">print</span><span class=\"token punctuation\">(</span>\n    Arg <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">,</span>\n    Args <span class=\"token operator\">&amp;&amp;</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> args\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Print out value / list of values</p>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>Arg</strong> - Type of the value used to replace the format specifier </li>\n<li><strong>Args</strong> - Type of the value used to replace the format specifier </li>\n</ul>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>a</strong> - The value to be printed </li>\n<li><strong>args</strong> - The other values to be printed</li>\n</ul>\n<p>Example:</p>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>s <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello World!\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uint64_t</span> unsigned_64_bit_int <span class=\"token operator\">=</span> <span class=\"token number\">1e+18</span><span class=\"token punctuation\">;</span>\nuint128_t unsigned_128_bit_int <span class=\"token punctuation\">(</span><span class=\"token number\">87654323456</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">uint64_t</span> string_as_unsigned_64_bit <span class=\"token operator\">=</span> <span class=\"token string\">\"abcde\"</span>_n<span class=\"token punctuation\">;</span>\n<span class=\"token function\">print</span><span class=\"token punctuation\">(</span>s <span class=\"token punctuation\">,</span> unsigned_64_bit_int<span class=\"token punctuation\">,</span> unsigned_128_bit_int<span class=\"token punctuation\">,</span> string_as_unsigned_64_bit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// Ouput: Hello World!100000000000000000087654323456abcde</span></code></pre></div>\n<h3 id=\"function-overloaded-22\">function overloaded (2/2)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> Ts<span class=\"token operator\">></span>\neosio<span class=\"token operator\">::</span><span class=\"token function\">overloaded</span><span class=\"token punctuation\">(</span>\n    Ts<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> \n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator\">function operator&#x3C;</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-1\">function operator></h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-2\">function operator&#x3C;=</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;=</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-3\">function operator>=</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>=</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-4\">function operator==</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">==</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-5\">function operator!=</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">bool</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">!=</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-6\">function operator+</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">string eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> lhs<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> rhs\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-1820\">function operator&#x3C;&#x3C; (18/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> string <span class=\"token operator\">&amp;</span> str\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-1820-1\">function operator>> (18/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    string <span class=\"token operator\">&amp;</span> str\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-operator-1920\">function operator&#x3C;&#x3C; (19/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>symbol_code sym_code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol__code\">symbol_code</a></strong> into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>sym</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-1920-1\">function operator>> (19/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>symbol_code <span class=\"token operator\">&amp;</span> sym_code\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a <strong><a href=\"/eosio.cdt/v1.7/namespaceeosio/classeosio_1_1symbol__code\">symbol_code</a></strong> from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>symbol</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-2020\">function operator&#x3C;&#x3C; (20/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    <span class=\"token keyword\">const</span> eosio<span class=\"token operator\">::</span>symbol sym\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Serialize a symbol. </p>\n<p>Serialize a symbol into a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to write </li>\n<li><strong>sym</strong> - The value to serialize </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-operator-2020-1\">function operator>> (20/20)</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\"><span class=\"token keyword\">template</span><span class=\"token operator\">&lt;</span><span class=\"token keyword\">typename</span> DataStream<span class=\"token operator\">></span>\nDataStream<span class=\"token operator\">&amp;</span> eosio<span class=\"token operator\">::</span><span class=\"token keyword\">operator</span><span class=\"token operator\">>></span><span class=\"token punctuation\">(</span>\n    DataStream <span class=\"token operator\">&amp;</span> ds<span class=\"token punctuation\">,</span>\n    eosio<span class=\"token operator\">::</span>symbol <span class=\"token operator\">&amp;</span> sym\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p>Deserialize a symbol. </p>\n<p>Deserialize a symbol from a stream</p>\n<p><strong>Parameters:</strong></p>\n<ul>\n<li><strong>ds</strong> - The stream to read </li>\n<li><strong>symbol</strong> - The destination for deserialized value </li>\n</ul>\n<p><strong>Template parameters:</strong></p>\n<ul>\n<li><strong>DataStream</strong> - Type of datastream buffer </li>\n</ul>\n<p><strong>Returns:</strong></p>\n<p>DataStream&#x26; - Reference to the datastream </p>\n<h3 id=\"function-seconds\">function seconds</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">microseconds eosio<span class=\"token operator\">::</span><span class=\"token function\">seconds</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">int64_t</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-milliseconds\">function milliseconds</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">microseconds eosio<span class=\"token operator\">::</span><span class=\"token function\">milliseconds</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">int64_t</span> s\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-minutes\">function minutes</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">microseconds eosio<span class=\"token operator\">::</span><span class=\"token function\">minutes</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">int64_t</span> m\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-hours\">function hours</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">microseconds eosio<span class=\"token operator\">::</span><span class=\"token function\">hours</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">int64_t</span> h\n<span class=\"token punctuation\">)</span></code></pre></div>\n<h3 id=\"function-days\">function days</h3>\n<div class=\"gatsby-highlight\" data-language=\"cpp\"><pre class=\"language-cpp\"><code class=\"language-cpp\">microseconds eosio<span class=\"token operator\">::</span><span class=\"token function\">days</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">int64_t</span> d\n<span class=\"token punctuation\">)</span></code></pre></div>\n<hr>\n<p>The documentation for this class was generated from the following file: <code class=\"language-text\">libraries/eosiolib/contracts/eosio/action.hpp</code></p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/eosio.cdt/v1.7/namespaceeosio/#namespace-eosio\">namespace eosio</a></p>\n<ul>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#classes\">Classes</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#typedefs\">Typedefs</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#variables\">Variables</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#functions\">Functions</a></li>\n<li>\n<p><a href=\"/eosio.cdt/v1.7/namespaceeosio/#typedefs-documentation\">Typedefs Documentation</a></p>\n<ul>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#typedef-block_signing_authority\">typedef block_signing_authority</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#typedef-extension\">typedef extension</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#typedef-extensions_type\">typedef extensions_type</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#typedef-block_timestamp_type\">typedef block_timestamp_type</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/eosio.cdt/v1.7/namespaceeosio/#variables-documentation\">Variables Documentation</a></p>\n<ul>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#variable-same_payer\">variable same_payer</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#variable-powers_of_base\">variable powers_of_base</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#variable-cout\">variable cout</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/eosio.cdt/v1.7/namespaceeosio/#functions-documentation\">Functions Documentation</a></p>\n<ul>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-unpack_action_data\">function unpack_action_data</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-require_recipient-12\">function require_recipient (1/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-require_recipient-22\">function require_recipient (2/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-require_auth-12\">function require_auth (1/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-publication_time\">function publication_time</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-current_receiver\">function current_receiver</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-read_action_data\">function read_action_data</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-action_data_size\">function action_data_size</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-require_auth-22\">function require_auth (2/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-has_auth\">function has_auth</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-is_account\">function is_account</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-dispatch_inline\">function dispatch_inline</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-dispatch\">function dispatch</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-execute_action\">function execute_action</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check_transaction_authorization\">function check_transaction_authorization</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check_permission_authorization\">function check_permission_authorization</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check_transaction_authorization-1\">function check_transaction_authorization</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check_permission_authorization-1\">function check_permission_authorization</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_permission_last_used\">function get_permission_last_used</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_account_creation_time\">function get_account_creation_time</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-set_blockchain_parameters\">function set_blockchain_parameters</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_blockchain_parameters\">function get_blockchain_parameters</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_resource_limits\">function get_resource_limits</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-set_resource_limits\">function set_resource_limits</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-set_proposed_producers-12\">function set_proposed_producers (1/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-set_proposed_producers-22\">function set_proposed_producers (2/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-is_privileged\">function is_privileged</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-set_privileged\">function set_privileged</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-preactivate_feature\">function preactivate_feature</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_active_producers\">function get_active_producers</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-eosio_exit\">function eosio_exit</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-current_time_point\">function current_time_point</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-current_block_time\">function current_block_time</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-is_feature_activated\">function is_feature_activated</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_sender\">function get_sender</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-send_deferred\">function send_deferred</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_action\">function get_action</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-read_transaction\">function read_transaction</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-cancel_deferred\">function cancel_deferred</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-transaction_size\">function transaction_size</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-tapos_block_num\">function tapos_block_num</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-tapos_block_prefix\">function tapos_block_prefix</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-expiration\">function expiration</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-get_context_free_data\">function get_context_free_data</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-write_decimal\">function write_decimal</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check-16\">function check (1/6)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check-26\">function check (2/6)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check-36\">function check (3/6)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check-46\">function check (4/6)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check-56\">function check (5/6)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-check-66\">function check (6/6)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-120\">function operator&#x3C;&#x3C; (1/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-120-1\">function operator>> (1/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-220\">function operator&#x3C;&#x3C; (2/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-220-1\">function operator>> (2/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-320\">function operator&#x3C;&#x3C; (3/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-deserialize\">function deserialize</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-320-1\">function operator>> (3/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-420\">function operator&#x3C;&#x3C; (4/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-420-1\">function operator>> (4/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-520\">function operator&#x3C;&#x3C; (5/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-520-1\">function operator>> (5/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-620\">function operator&#x3C;&#x3C; (6/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-620-1\">function operator>> (6/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-720\">function operator&#x3C;&#x3C; (7/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-720-1\">function operator>> (7/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-820\">function operator&#x3C;&#x3C; (8/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-820-1\">function operator>> (8/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-920\">function operator>> (9/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-920-1\">function operator&#x3C;&#x3C; (9/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1020\">function operator>> (10/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1020-1\">function operator&#x3C;&#x3C; (10/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1120\">function operator&#x3C;&#x3C; (11/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1120-1\">function operator>> (11/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1220\">function operator>> (12/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1220-1\">function operator&#x3C;&#x3C; (12/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1320\">function operator>> (13/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1320-1\">function operator&#x3C;&#x3C; (13/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1420\">function operator>> (14/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1420-1\">function operator&#x3C;&#x3C; (14/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1520\">function operator>> (15/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1520-1\">function operator&#x3C;&#x3C; (15/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1620\">function operator>> (16/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-unpack-12\">function unpack (1/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-unpack-22\">function unpack (2/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-pack_size\">function pack_size</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-pack\">function pack</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1620-1\">function operator&#x3C;&#x3C; (16/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1720\">function operator&#x3C;&#x3C; (17/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1720-1\">function operator>> (17/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-pow\">function pow</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-printhex\">function printhex</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-printl\">function printl</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-17\">function print (1/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-27\">function print (2/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-37\">function print (3/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-47\">function print (4/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-57\">function print (5/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-67\">function print (6/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print_f-12\">function print_f (1/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print_f-22\">function print_f (2/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-print-77\">function print (7/7)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-overloaded-22\">function overloaded (2/2)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator\">function operator&#x3C;</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1\">function operator></a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-2\">function operator&#x3C;=</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-3\">function operator>=</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-4\">function operator==</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-5\">function operator!=</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-6\">function operator+</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1820\">function operator&#x3C;&#x3C; (18/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1820-1\">function operator>> (18/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1920\">function operator&#x3C;&#x3C; (19/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-1920-1\">function operator>> (19/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-2020\">function operator&#x3C;&#x3C; (20/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-operator-2020-1\">function operator>> (20/20)</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-seconds\">function seconds</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-milliseconds\">function milliseconds</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-minutes\">function minutes</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-hours\">function hours</a></li>\n<li><a href=\"/eosio.cdt/v1.7/namespaceeosio/#function-days\">function days</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"edit_link":null,"request_changes_link":null},"fields":{"articleTitle":"namespaceeosio","contentTitle":"Namespace eosio","headTagTitle":"namespaceeosio","internalSummary":"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.7/SUMMARY.json","isCollection":false,"isRoot":true,"isTagged":true,"organization":"EOSIO","originalKey":"/","pathData":"{\"tagged\":true,\"parentPath\":\"v1.7\",\"collectionPath\":\"/\",\"rootDirPath\":\"v1.7\",\"filename\":\"namespaceeosio.md\"}","repository":"eosio.cdt","showSearch":true,"slug":"/v1.7/namespaceeosio","tagsList":"[{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":1,\"tag\":\"v1.7.0-rc1\",\"tag_reduced\":\"1.7\",\"tag_reduced_friendly\":\"v1.7\",\"tag_sanitized\":\"1.7.0-rc1\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.7/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.7\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":true,\"rc\":0,\"tag\":\"v1.6.2\",\"tag_reduced\":\"1.6\",\"tag_reduced_friendly\":\"v1.6\",\"tag_sanitized\":\"1.6.2\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/latest/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"latest\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v1.5.0\",\"tag_reduced\":\"1.5\",\"tag_reduced_friendly\":\"v1.5\",\"tag_sanitized\":\"1.5.0\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.5/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.5\"},{\"beta\":0,\"build\":0,\"deprecated\":false,\"latest\":false,\"rc\":0,\"tag\":\"v1.4.1\",\"tag_reduced\":\"1.4\",\"tag_reduced_friendly\":\"v1.4\",\"tag_sanitized\":\"1.4.1\",\"summaryPath\":\"/usr/local/lib/python3.6/dist-packages/thorka-0.1-py3.6.egg/src/lib/gatsby/data/v1.4/SUMMARY.json\",\"importedSummary\":\"N/A\",\"version\":\"v1.4\"}]","latestDDVersion":"latest","importedSummary":"N/A","hasPrimaryNavigation":false,"primaryNavData":"[{\"text\":\"NONE\",\"path\":\"EMPTY\"}]","currentVersion":"v1.7","currentDDVersion":"1.7","summaryJson":"{\"array\":[{\"title\":\"Installation\",\"link\":\"installation.md\"},{\"sub\":[{\"title\":\"Eosio abidiff\",\"link\":\"command-reference/eosio-abidiff.md\"},{\"title\":\"Eosio abigen\",\"link\":\"command-reference/eosio-abigen.md\"},{\"title\":\"Eosio cc\",\"link\":\"command-reference/eosio-cc.md\"},{\"title\":\"Eosio cpp\",\"link\":\"command-reference/eosio-cpp.md\"},{\"title\":\"Eosio init\",\"link\":\"command-reference/eosio-init.md\"},{\"title\":\"Eosio ld\",\"link\":\"command-reference/eosio-ld.md\"}],\"title\":\"Command reference\"},{\"sub\":[{\"title\":\"1.2 to 1.3\",\"link\":\"upgrading/1.2-to-1.3.md\"},{\"title\":\"1.5 to 1.6\",\"link\":\"upgrading/1.5-to-1.6.md\"}],\"title\":\"Upgrading\"},{\"sub\":[{\"title\":\"Resource planning\",\"link\":\"best-practices/resource-planning.md\"},{\"title\":\"Data design and migration\",\"link\":\"best-practices/data-design-and-migration.md\"},{\"title\":\"Securing your contract\",\"link\":\"best-practices/securing_your_contract.md\"},{\"title\":\"Error handling\",\"link\":\"best-practices/error_handling.md\"},{\"sub\":[{\"title\":\"Abi code generator attributes explained\",\"link\":\"best-practices/abi/abi-code-generator-attributes-explained.md\"},{\"title\":\"Manually write an abi file explained\",\"link\":\"best-practices/abi/manually_write_an_ABI_file_explained.md\"}],\"title\":\"Abi\"},{\"title\":\"Deferred transactions\",\"link\":\"best-practices/deferred_transactions.md\"},{\"title\":\"Native tester compilation\",\"link\":\"best-practices/native-tester-compilation.md\"},{\"title\":\"Debugging a smart contract\",\"link\":\"best-practices/debugging_a_smart_contract.md\"},{\"title\":\"Binary extension\",\"link\":\"best-practices/binary-extension.md\"}],\"title\":\"Best practices\"},{\"sub\":[{\"sub\":[{\"title\":\"Compile a contract via cli\",\"link\":\"how-to-guides/compile/compile-a-contract-via-cli.md\"},{\"title\":\"How to configure cmake\",\"link\":\"how-to-guides/compile/how-to-configure-cmake.md\"},{\"title\":\"Compiling contracts with cmake\",\"link\":\"how-to-guides/compile/compiling-contracts-with-cmake.md\"}],\"title\":\"Compile\"},{\"sub\":[{\"title\":\"How to define a primary index\",\"link\":\"how-to-guides/multi-index/how-to-define-a-primary-index.md\"},{\"title\":\"How to define a secondary index\",\"link\":\"how-to-guides/multi-index/how-to-define-a-secondary-index.md\"},{\"title\":\"How to define a singleton\",\"link\":\"how-to-guides/multi-index/how-to-define-a-singleton.md\"},{\"title\":\"How to delete data from a multi index table\",\"link\":\"how-to-guides/multi-index/how-to-delete-data-from-a-multi-index-table.md\"},{\"title\":\"How to insert data into a multi index table\",\"link\":\"how-to-guides/multi-index/how-to-insert-data-into-a-multi-index-table.md\"},{\"title\":\"How to instantiate a multi index table\",\"link\":\"how-to-guides/multi-index/how-to-instantiate-a-multi-index-table.md\"},{\"title\":\"How to iterate and retrieve a multi index table based on secondary index\",\"link\":\"how-to-guides/multi-index/how-to-iterate-and-retrieve-a-multi_index-table-based-on-secondary-index.md\"},{\"title\":\"How to iterate and retrieve a multi index table\",\"link\":\"how-to-guides/multi-index/how-to-iterate-and-retrieve-a-multi_index-table.md\"},{\"title\":\"How to modify data in a multi index table\",\"link\":\"how-to-guides/multi-index/how-to-modify-data-in-a-multi-index-table.md\"}],\"title\":\"Multi index\"},{\"title\":\"How to create and use action wrappers\",\"link\":\"how-to-guides/how_to_create_and_use_action_wrappers.md\"},{\"sub\":[{\"title\":\"How to restrict access to an action by user\",\"link\":\"how-to-guides/authorization/how_to_restrict_access_to_an_action_by_user.md\"}],\"title\":\"Authorization\"}],\"title\":\"How to guides\"},{\"title\":\"Troubleshooting\",\"link\":\"troubleshooting.md\"},{\"sub\":[{\"title\":\"Binary extension\",\"link\":\"tutorials/binary-extension.md\"},{\"title\":\"Abi variants\",\"link\":\"tutorials/abi-variants.md\"}],\"title\":\"Tutorials\"},{\"title\":\"Modules\",\"link\":\"/modules.md\",\"sub\":[{\"title\":\"Contracts api\",\"link\":\"/group__contracts.md\",\"sub\":[{\"title\":\"Action\",\"link\":\"/group__action.md\"},{\"title\":\"Contract\",\"link\":\"/group__contract.md\"},{\"title\":\"Dispatcher\",\"link\":\"/group__dispatcher.md\"},{\"title\":\"Multi index table\",\"link\":\"/group__multiindex.md\"},{\"title\":\"Permission\",\"link\":\"/group__permission.md\"},{\"title\":\"Privileged\",\"link\":\"/group__privileged.md\"},{\"title\":\"Producer authority\",\"link\":\"/group__producer__authority.md\"},{\"title\":\"Producer key\",\"link\":\"/group__producer__key.md\"},{\"title\":\"Producer schedule\",\"link\":\"/group__producer__schedule.md\"},{\"title\":\"Singleton table\",\"link\":\"/group__singleton.md\"},{\"title\":\"System\",\"link\":\"/group__system.md\"},{\"title\":\"Transaction\",\"link\":\"/group__transaction.md\"}]},{\"title\":\"Core api\",\"link\":\"/group__core.md\",\"sub\":[{\"title\":\"Asset\",\"link\":\"/group__asset.md\"},{\"title\":\"Binary extension\",\"link\":\"/group__binary__extension.md\"},{\"title\":\"Console\",\"link\":\"/group__console.md\"},{\"title\":\"Data stream\",\"link\":\"/group__datastream.md\"},{\"title\":\"Fixed size byte array\",\"link\":\"/group__fixed__bytes.md\"},{\"title\":\"Ignore\",\"link\":\"/group__ignore.md\"},{\"title\":\"Name\",\"link\":\"/group__name.md\"},{\"title\":\"Serialize\",\"link\":\"/group__serialize.md\"},{\"title\":\"Symbol\",\"link\":\"/group__symbol.md\"},{\"title\":\"System\",\"link\":\"/group__system.md\"},{\"title\":\"Time\",\"link\":\"/group__time.md\"},{\"title\":\"Variable length integer type\",\"link\":\"/group__varint.md\"}]},{\"title\":\"Types\",\"link\":\"/group__types.md\",\"sub\":[{\"title\":\"Binary extension\",\"link\":\"/group__binary__extension.md\"},{\"title\":\"Contract\",\"link\":\"/group__contract.md\"},{\"title\":\"Fixed size byte array\",\"link\":\"/group__fixed__bytes.md\"},{\"title\":\"Name\",\"link\":\"/group__name.md\"},{\"title\":\"Permission\",\"link\":\"/group__permission.md\"},{\"title\":\"Producer authority\",\"link\":\"/group__producer__authority.md\"},{\"title\":\"Producer key\",\"link\":\"/group__producer__key.md\"},{\"title\":\"Producer schedule\",\"link\":\"/group__producer__schedule.md\"},{\"title\":\"Variable length integer type\",\"link\":\"/group__varint.md\"}]}]},{\"title\":\"Browse Tree\",\"link\":\"\",\"sub\":[{\"title\":\"Function index\",\"link\":\"/functions.md\"},{\"title\":\"Variable index\",\"link\":\"/variables.md\"},{\"title\":\"Enumeration index\",\"link\":\"/enumerations.md\"},{\"title\":\"Class list\",\"link\":\"/annotated.md\",\"sub\":[{\"title\":\"Namespace eosio\",\"link\":\"/namespaceeosio.md\",\"sub\":[{\"title\":\"Namespace datastream detail\",\"link\":\"/namespaceeosio_1_1__datastream__detail.md\"},{\"title\":\"Namespace multi index detail\",\"link\":\"/namespaceeosio_1_1__multi__index__detail.md\",\"sub\":[{\"title\":\"Struct secondary index db functions\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions.md\"},{\"title\":\"Struct secondary index db functions< double >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01double_4.md\"},{\"title\":\"Struct secondary index db functions< eosio::fixed bytes< 32 > >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01eosio_1_1fixed__bytes_3_04.md\"},{\"title\":\"Struct secondary index db functions< long double >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01long_01double_4.md\"},{\"title\":\"Struct secondary index db functions< uint1t >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint1_t_4.md\"},{\"title\":\"Struct secondary index db functions< uintt >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__index__db__functions_3_01uint_t_4.md\"},{\"title\":\"Struct secondary key traits\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits.md\"},{\"title\":\"Struct secondary key traits< double >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01double_4.md\"},{\"title\":\"Struct secondary key traits< eosio::fixed bytes< 32 > >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01eosio_1_1fixed__bytes_3_04.md\"},{\"title\":\"Struct secondary key traits< long double >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01long_01double_4.md\"},{\"title\":\"Struct secondary key traits< uint1t >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint1_t_4.md\"},{\"title\":\"Struct secondary key traits< uintt >\",\"link\":\"/structeosio_1_1__multi__index__detail_1_1secondary__key__traits_3_01uint_t_4.md\"}]},{\"title\":\"Struct action\",\"link\":\"/structeosio_1_1action.md\"},{\"title\":\"Struct action wrapper\",\"link\":\"/structeosio_1_1action__wrapper.md\"},{\"title\":\"Struct asset\",\"link\":\"/structeosio_1_1asset.md\"},{\"title\":\"Class binary extension\",\"link\":\"/classeosio_1_1binary__extension.md\"},{\"title\":\"Struct block signing authority v0\",\"link\":\"/structeosio_1_1block__signing__authority__v0.md\"},{\"title\":\"Class block timestamp\",\"link\":\"/classeosio_1_1block__timestamp.md\"},{\"title\":\"Struct blockchain parameters\",\"link\":\"/structeosio_1_1blockchain__parameters.md\"},{\"title\":\"Struct const mem fun\",\"link\":\"/structeosio_1_1const__mem__fun.md\"},{\"title\":\"Class contract\",\"link\":\"/classeosio_1_1contract.md\"},{\"title\":\"Class datastream\",\"link\":\"/classeosio_1_1datastream.md\"},{\"title\":\"Class datastream< size t >\",\"link\":\"/classeosio_1_1datastream_3_01size__t_4.md\"},{\"title\":\"Namespace detail\",\"link\":\"/namespaceeosio_1_1detail.md\",\"sub\":[{\"title\":\"Struct largest power\",\"link\":\"/structeosio_1_1detail_1_1largest__power.md\"},{\"title\":\"Struct largest power helper\",\"link\":\"/structeosio_1_1detail_1_1largest__power__helper.md\"},{\"title\":\"Struct largest power helper< t, base, exponent, value, true >\",\"link\":\"/structeosio_1_1detail_1_1largest__power__helper_3_t_base_exponent_value_01true_4.md\"},{\"title\":\"Struct to const char arr\",\"link\":\"/structeosio_1_1detail_1_1to__const__char__arr.md\"}]},{\"title\":\"Struct extended asset\",\"link\":\"/structeosio_1_1extended__asset.md\"},{\"title\":\"Class extended symbol\",\"link\":\"/classeosio_1_1extended__symbol.md\"},{\"title\":\"Class fixed bytes\",\"link\":\"/classeosio_1_1fixed__bytes.md\",\"sub\":[{\"title\":\"Struct bool pack\",\"link\":\"/structeosio_1_1fixed__bytes_1_1bool__pack.md\"}]},{\"title\":\"Struct ignore\",\"link\":\"/structeosio_1_1ignore.md\"},{\"title\":\"Struct ignore wrapper\",\"link\":\"/structeosio_1_1ignore__wrapper.md\"},{\"title\":\"Namespace impl\",\"link\":\"/namespaceeosio_1_1impl.md\",\"sub\":[{\"title\":\"Struct concat t\",\"link\":\"/structeosio_1_1impl_1_1concat__t.md\"},{\"title\":\"Struct str t\",\"link\":\"/structeosio_1_1impl_1_1str__t.md\"}]},{\"title\":\"Struct indexed by\",\"link\":\"/structeosio_1_1indexed__by.md\"},{\"title\":\"Struct inline dispatcher\",\"link\":\"/structeosio_1_1inline__dispatcher.md\"},{\"title\":\"Struct inline dispatcher< void(t::*)(args...), name >\",\"link\":\"/structeosio_1_1inline__dispatcher_3_01void_t_1_1_5_args_8_8_8_name_4.md\"},{\"title\":\"Namespace internal use do not use\",\"link\":\"/namespaceeosio_1_1internal__use__do__not__use.md\"},{\"title\":\"Class iostream\",\"link\":\"/classeosio_1_1iostream.md\"},{\"title\":\"Struct key weight\",\"link\":\"/structeosio_1_1key__weight.md\"},{\"title\":\"Class microseconds\",\"link\":\"/classeosio_1_1microseconds.md\"},{\"title\":\"Class multi index\",\"link\":\"/classeosio_1_1multi__index.md\",\"sub\":[{\"title\":\"Struct const iterator\",\"link\":\"/structeosio_1_1multi__index_1_1const__iterator.md\"},{\"title\":\"Struct index\",\"link\":\"/structeosio_1_1multi__index_1_1index.md\",\"sub\":[{\"title\":\"Struct const iterator\",\"link\":\"/structeosio_1_1multi__index_1_1index_1_1const__iterator.md\"}]},{\"title\":\"Struct intc\",\"link\":\"/structeosio_1_1multi__index_1_1intc.md\"},{\"title\":\"Struct item\",\"link\":\"/structeosio_1_1multi__index_1_1item.md\"},{\"title\":\"Struct item ptr\",\"link\":\"/structeosio_1_1multi__index_1_1item__ptr.md\"}]},{\"title\":\"Struct name\",\"link\":\"/structeosio_1_1name.md\"},{\"title\":\"Struct onerror\",\"link\":\"/structeosio_1_1onerror.md\"},{\"title\":\"Struct overloaded\",\"link\":\"/structeosio_1_1overloaded.md\"},{\"title\":\"Struct permission level\",\"link\":\"/structeosio_1_1permission__level.md\"},{\"title\":\"Struct producer authority\",\"link\":\"/structeosio_1_1producer__authority.md\"},{\"title\":\"Struct producer key\",\"link\":\"/structeosio_1_1producer__key.md\"},{\"title\":\"Struct producer schedule\",\"link\":\"/structeosio_1_1producer__schedule.md\"},{\"title\":\"Class rope\",\"link\":\"/classeosio_1_1rope.md\"},{\"title\":\"Struct signed int\",\"link\":\"/structeosio_1_1signed__int.md\"},{\"title\":\"Class singleton\",\"link\":\"/classeosio_1_1singleton.md\",\"sub\":[{\"title\":\"Struct row\",\"link\":\"/structeosio_1_1singleton_1_1row.md\"}]},{\"title\":\"Class string\",\"link\":\"/classeosio_1_1string.md\"},{\"title\":\"Class symbol\",\"link\":\"/classeosio_1_1symbol.md\"},{\"title\":\"Class symbol code\",\"link\":\"/classeosio_1_1symbol__code.md\"},{\"title\":\"Class time point\",\"link\":\"/classeosio_1_1time__point.md\"},{\"title\":\"Class time point sec\",\"link\":\"/classeosio_1_1time__point__sec.md\"},{\"title\":\"Class transaction\",\"link\":\"/classeosio_1_1transaction.md\"},{\"title\":\"Class transaction header\",\"link\":\"/classeosio_1_1transaction__header.md\"},{\"title\":\"Struct unsigned int\",\"link\":\"/structeosio_1_1unsigned__int.md\"},{\"title\":\"Struct variant action wrapper\",\"link\":\"/structeosio_1_1variant__action__wrapper.md\"}]}]},{\"title\":\"Files\",\"link\":\"/files.md\",\"sub\":[{\"title\":\"Libraries/\",\"link\":\"/dir_bc0718b08fb2015b8e59c47b2805f60c.md\",\"sub\":[{\"title\":\"Eosiolib/\",\"link\":\"/dir_9e60c71e6dfb8d92b39aded6f4ab9fa8.md\",\"sub\":[{\"title\":\"Contracts/\",\"link\":\"/dir_7e917b7566708c24627b3b828f138985.md\",\"sub\":[{\"title\":\"Eosio/\",\"link\":\"/dir_e6eaa0c1a89a74634a56cba5556371ea.md\",\"sub\":[{\"title\":\"Action.hpp\",\"link\":\"/action_8hpp.md\"},{\"title\":\"Contract.hpp\",\"link\":\"/contract_8hpp.md\"},{\"title\":\"Dispatcher.hpp\",\"link\":\"/dispatcher_8hpp.md\"},{\"title\":\"Eosio.hpp\",\"link\":\"/eosio_8hpp.md\"},{\"title\":\"Multi index.hpp\",\"link\":\"/multi__index_8hpp.md\"},{\"title\":\"Permission.hpp\",\"link\":\"/permission_8hpp.md\"},{\"title\":\"Privileged.hpp\",\"link\":\"/privileged_8hpp.md\"},{\"title\":\"Producer schedule.hpp\",\"link\":\"/producer__schedule_8hpp.md\"},{\"title\":\"Singleton.hpp\",\"link\":\"/singleton_8hpp.md\"},{\"title\":\"System.hpp\",\"link\":\"/system_8hpp.md\"},{\"title\":\"Transaction.hpp\",\"link\":\"/transaction_8hpp.md\"}]}]},{\"title\":\"Core/\",\"link\":\"/dir_850c7dbae88cf75e5ded2d8d64345058.md\",\"sub\":[{\"title\":\"Eosio/\",\"link\":\"/dir_6973a5be5f0104fdfb8b76a272d58cb0.md\",\"sub\":[{\"title\":\"Asset.hpp\",\"link\":\"/asset_8hpp.md\"},{\"title\":\"Binary extension.hpp\",\"link\":\"/binary__extension_8hpp.md\"},{\"title\":\"Check.hpp\",\"link\":\"/check_8hpp.md\"},{\"title\":\"Crypto.hpp\",\"link\":\"/crypto_8hpp.md\"},{\"title\":\"Datastream.hpp\",\"link\":\"/datastream_8hpp.md\"},{\"title\":\"Fixed bytes.hpp\",\"link\":\"/fixed__bytes_8hpp.md\"},{\"title\":\"Ignore.hpp\",\"link\":\"/ignore_8hpp.md\"},{\"title\":\"Name.hpp\",\"link\":\"/name_8hpp.md\"},{\"title\":\"Powers.hpp\",\"link\":\"/powers_8hpp.md\"},{\"title\":\"Print.hpp\",\"link\":\"/print_8hpp.md\"},{\"title\":\"Rope.hpp\",\"link\":\"/rope_8hpp.md\"},{\"title\":\"Serialize.hpp\",\"link\":\"/serialize_8hpp.md\"},{\"title\":\"String.hpp\",\"link\":\"/string_8hpp.md\"},{\"title\":\"Symbol.hpp\",\"link\":\"/symbol_8hpp.md\"},{\"title\":\"Time.hpp\",\"link\":\"/time_8hpp.md\"},{\"title\":\"Varint.hpp\",\"link\":\"/varint_8hpp.md\"}]}]}]}]}]}]}],\"title\":[]}"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/v1.7/namespaceeosio"}}}